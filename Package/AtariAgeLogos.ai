%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(TM) 7.0%%AI8_CreatorVersion: 10.0%%For: (Ad Services  NW Arkansas Times) (Arkansas Democrat-Gazette)%%Title: (AtariAgeLogos.ai)%%CreationDate: 1/23/03 12:28 AM%%BoundingBox: -309 276 926 523%%HiResBoundingBox: -308.6223 276.3682 925.5068 522.9863%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.1 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%AI5_FileFormat 3.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKCustomColor: 0.2 0 1 0 (Die)%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 306.5 395.5 306.5 395.5%AI3_TileBox: -396 -198 180 558%AI3_DocumentPreview: None%AI5_ArtSize: 1440 360%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI5_OpenToView: -447.5 966.5 -1.5 1224 933 26 1 0 49 42 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-396 -198%%AI3_PaperRect:0 792 612 0%%AI3_Margin:18 -18 -18 18%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI7_Thumbnail: 128 28 8%%BeginData: 3438 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD32FFA9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8A9A8%A9A9FD66FF2F3053542F5A2F5A537E2F5A2F302F3053302F5A2F5A2F300D%5AFD66FFA984AFA87EA8A984A9A9A9A8A9A8A984FFA8A9A8AFA9A9A8A9A8%FDFCFFFDFCFFFDFCFFFDFCFFFD30FFA9A8AFFD0AFFA8A8A8FD3EFF527D52%7DA8FD2BFF7E35598459597EFD07FF2752527D5227A8FD3AFF52A852527D%52FFFFA8FD05FF7DFFA8FD1FFF8484AF842F84AF845AFD05FF52A87D5252%7DA852FD13FF52FF7DFFFFFF7DA852FD1DFF7DA8F8A87DF87DA87DF87D27%527D52527DF8A87D7D7DA8FD19FFA85AA82F0DA82F2FA85AA8FFFFFF27A8%52F8527DF852A852FD11FF7D2752272752F85252277D2727527DFD18FF7D%7D27A8FFF87D7D52F8522752F8272752F852F827F852FD19FF84845A0D84%A9840D5AA884FFFFFF52A8F8F8FFA827F8A827FD0DFFA9FFFFFF272727F8%27F82752272727F8272727FD15FFA9FFFF7DA8F87D7D277DA852FF527D52%7D7D7D52FF7D2752A87DFD15FF7EFFFFFF59FF0D2FA8FFA82F0DFF59FFFF%FF527DF87DA8A852F8527DFD0DFFA8FFFFFFA8FFA8FFA8A8A8FFA8FFA827%7DFFA8FD15FFA8FFFFFF52A85252A87DFD0CFF7DFD18FFA9FFFFFF84AF36%2FA9A8AF2F36FF84FFFFFF527DF852FFA87DF87D52FD0DFFA9FD27FFA9FD%04FF527D527DFD26FF84FFFFFF84845A2FA835A82F59847EFFFFFF27FFF8%7D7D7D5227A827A984A9A8A984A9A8A984A9A8A95AFD0BFFAFFD0DFFA9A9%84A9A8A984A9A8A984A9A8845AFD21FFA8A984A9A8A984A9A8A984A9A85A%FD04FF35FF5A5A0D5A5AFF2FFD04FF7D7DA85227F8527D7D7D2F542F8453%5A2F5A2F2F2F5AFFAFFFFFFFAF0DAF2FA8A8A959A892CFC9CAA7FD08FFA8%2F54597E2F5A5A3053FD04FFAFFFFFFFA959847E5AA8FD18FF5A2F5A5A7E%2F5A53302F542F84A8FD04FFA92FA9A8A8A8A92FA9FD05FF5252FF7DA8A8%7D27FD12FF5A355A5A35360D5AA0C1C2C1BBC1C2FD19FF5A84355A8484FF%FF5AFFA8FFFFFF84FFC2FD0FFFA9FD11FF7E5A355A5AFD08FFA827522752%7DFD13FF5A845A595A2F7E7EC2C9C2BBC2A0C9FD18FF7EA80DA9842F7EA9%842F7E3559842F35C9BBCAC2C2C2CAFD1AFF8484FFFFA8C9CFFD06FF7DA8%7DFFFFA87DFD1FFFC8FD1BFF847E36A8AF2F84A85A595A2F362F352FC2C1%C2BAC2BBC8FD19FFA90D5A2F5A59C1C1BBC1C9FFFFFF272752F82727F827%27F8FD38FF7EA92F847E357EAF59FF59847E847E84A0FFC2C1A0CFC9FD19%FF84AF7E8459A8C9C998CAC9FFFFFF7D7D52FD047D52527DFD39FF5AAF5A%84A884FD0CFFCAFD6EFF7E5A5984FDFCFFFD45FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient_Sep 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient_Sep 5 dict dup begin put/AGM_Gradient_Sep_private 100 dict def/initialize{	AGM_Gradient_Sep begin	AGM_Gradient_Sep_private begin	_compositeJob{		initializeSinglePassSeps	}{		initializeMultiPassSeps	}ifelse	initializeSeps	AGM_Gradient_private begin		/_fillSD newSpotDict def		/_rampSD newSpotDict def		/_nCustomColorSD nd end	AGM_Gradient_Sep_private 	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient_Sep	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop	 end}def/terminate{	currentdict AGM_Gradient_Sep eq{	 end	}if}defAGM_Gradient_Sep_private begin/initializeSeps{	/currentoverprint { _of } def	_noImage not _level2PS not and{		/linealFill{			currentoverprint{				0 0 1 1 rectfill			}{				mySave				8 setImageParms				_color{					_nCustomColorSD begin						cyan magenta yellow black							_spotColor{							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put						}if				 end						4{						makeByte8 4 1 roll					}repeat					true 4 _nCustomColorSD ncolorimage				}{					_nCustomColorSD/black get 1 exch sub makeByte8 					_nCustomColorSD bwImage				}ifelse				myRestore			}ifelse		}def	}if	/_whiteBytes 1 makeByte8 pt	 /knockOut{		_noImage _level2PS or currentoverprint or{			gsave			false setoverprint			1 setgray 			0 0 1 1 rectfill			grestore		}{			8 setImageParms _whiteBytes /_image load 5 execImage		}ifelse	}def	/newSpotDict{		11 dict dup begin			/nSpots 2 def			/spot1 7 dict def			/spot2 7 dict def	 end	}def	/initSpotData	{	 begin			/name nd			/tintImage nd			/tintValue nd			/spot_C nd			/spot_M nd			/spot_Y nd			/spot_K nd	 end	}def	/initSpotDict{	 begin			/cyanInk nd			/magentaInk nd			/yellowInk nd			/blackInk nd			/cyan nd			/magenta nd			/yellow nd			/black nd			spot1 initSpotData			spot2 initSpotData	 end	}def	/copySpotDict{		/_dst xp	 begin			cyanInk magentaInk yellowInk blackInk			cyan magenta yellow black			spot1 spot2	 end		_dst begin			/spot1 spot1 maxlength dict def			/spot2 spot2 maxlength dict def			spot2 copy pop			spot1 copy pop			/black xd			/yellow xd			/magenta xd			/cyan xd			/blackInk xd			/yellowInk xd			/magentaInk xd			/cyanInk xd	 end	}def	/setCustomColor	{		1 index /Black eq{			6 1 roll 5 npop			1 exch sub			setgray		}{			6 1 roll _ccAry1 astore exch			dup null eq{				pop 0			}if			setcustomcolor		}ifelse	}def	/setCStop{		/_colorStyle exch pt				_colorStyle 0 eq{			0 0 0			4 -1 roll			1 exch sub			_spotColor{				/_colorStyle 3 pt				/Black				1 index				1 exch sub			}if		}if		_colorStyle 2 eq{			3 npop		}if		_rampSD _fillSD copySpotDict				_colorStyle 4 eq{ 			pop			9 2 roll 3 npop 6 -2 roll		} if				_colorStyle 3 eq _colorStyle 4 eq or{ 								_fillSD begin				/_spot1 spot1 pt				/_spot2 spot2 pt		 end						exch dup _spot1/name get eq{				_spot1 _spot2			}{				_spot2 _spot1			}ifelse		 begin			 begin					/name xd					1 exch sub /tintValue xd					4{						tintValue mul 4 1 roll					}repeat					_spotColor not{						/tintValue null def					}if			 end				/tintValue 0 def		 end		}if		_fillSD nsetcustomcolor	}def	/renderCMYK{		spot1/name get null eq		spot2/name get null eq and		dup not{			pop			spot1 spotConverted		}if		dup not{			pop			spot2 spotConverted		}if	}def	/currentInk{		true		_inRipSep{			currentcolorspace 0 get			dup /DeviceGray eq			1 index /DeviceCMYK eq or{				pop				currentcmykcolor add add add 0 eq{					pop false				}if			}{				/Separation eq{					currentcolor 0 eq{						pop false					}if				}if			}ifelse		}{			currentgray 1 eq{				pop false			}if		}ifelse	}def	/currentInkN{			_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end		{			currentInk		}{			gsave			_spot1 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			_spot2 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			grestore						or		} ifelse	}def	/fill_ /fill load def	/fillOvp{		currentoverprint{			_inRipSep{				currentcolorspace 0 get				dup /DeviceGray eq				1 index /DeviceCMYK eq or{					pop					currentcmykcolor add add add 0 eq{						newpath					}if				}{					/Separation eq{						currentcolor 0 eq{							newpath						}if					}if				}ifelse			}{				currentgray 1 eq{					newpath				}if			}ifelse		}if		fill_	}def	/fill{		_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end				{			fillOvp		}{			_spot1 begin				gsave				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor				}{					1 setgray				}ifelse				fillOvp 				grestore		 end			_spot2 begin				name null ne{					gsave					true setoverprint					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					fillOvp					grestore				}if		 end			newpath		}ifelse	}def	/expandSpot{		_spotColor{			/_len xp			_rampSD begin				spot1 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end				spot2 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end		 end		}{			pop		}ifelse	}def	/rampImage{		currentoverprint{			rectImage		}{			_enabledSmoothShade{				fillRamp			}{				_color{					_rampSD begin						/cyanInk _cyanData 0 ne def						/magentaInk _magentaData 0 ne def						/yellowInk _yellowData 0 ne def						/blackInk _blackData 0 ne def				 end										_nSamples setImageParms					_nSamples expandSpot					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 _rampSD ncolorimage				}{					_rampSD begin						/cyanInk false def						/magentaInk false def						/yellowInk false def						/blackInk true def				 end					_nSamples setImageParms 					_blackData _rampSD bwImage				}ifelse			}ifelse		}ifelse	}def	/nsetcustomcolor where{		pop	}{		/nsetcustomcolor		{			/_nCustomColorSD xp			_nCustomColorSD begin				4 copy				/black xd				/yellow xd				/magenta xd				/cyan xd				4 copy				0 ne /blackInk xd				0 ne /yellowInk xd				0 ne /magentaInk xd				0 ne /cyanInk xd		 end			setcmykcolor		}def	}ifelse	/nsetcustomcolorend where{		pop	}{		/nsetcustomcolorend		{			/_nCustomColorSD null pt		}def	}ifelse}def/initializeSinglePassSeps{	/_decodeNorm	[0 1] pt	/_decodeInvert 	[1 0] pt	/spotConverted	{	 begin			name null eq{				false			}{				tintValue null eq tintImage null eq and{					true				}{					_inDistiller{						false					}{						false						currentpagedevice/SeparationColorNames get{name eq or}forall						not					}ifelse				}ifelse			}ifelse	 end	}def	/dictImage	{		20 dict dup begin			/Dict xd			/Decode xd			/DataSource xd			/ImageMatrix xd			/BitsPerComponent xd			/Height xd			/Width xd			/ImageType 1 def			Dict	 end		/_image load 1 execImage	}def	/bwImage{	 begin			gsave			currentoverprint{				blackInk{					[/Separation /Black /DeviceGray{}] setcolorspace					_decodeInvert dictImage				}{					5 npop				}ifelse			}{				/DeviceGray setcolorspace				_decodeNorm dictImage			}ifelse			grestore	 end	}def	/ncolorimage where{		pop	}{		/ncolorimage{		 begin				renderCMYK{					cyanInk 					magentaInk and					yellowInk and					blackInk and					not					currentoverprint 					and{							pop pop						gsave						cyanInk{							8 copy							[/Separation /Cyan /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}if						magentaInk{							8 copy							[/Separation /Magenta /DeviceGray{}] setcolorspace							4 -1 roll							3 npop							_decodeNorm dictImage						}if						yellowInk{							8 copy							[/Separation /Yellow /DeviceGray{}] setcolorspace							4 -2 roll							3 npop							_decodeNorm dictImage						}if						blackInk{							4 -3 roll							[/Separation /Black /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}{							8 npop						}ifelse						grestore					}{						/_colorimage load 10 execImage					}ifelse				}{					6 npop					gsave					spot1 begin						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							4 copy							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							1 setgray fill						}ifelse				 end					spot2 begin						true setoverprint						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							4 npop							1 setgray fill						}ifelse				 end					grestore				}ifelse		 end		}def	}ifelse	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_renderCMYK not{			_rampSD begin				[/DeviceN 					[					spot1 begin						name null ne tintImage null ne and{							name						}if				 end					spot2 begin						name null ne tintImage null ne and{							name						}if				 end					]					_inDistiller {						/DeviceCMYK [							spot1 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 1								}{									0 0 0 0 0								}ifelse						 end							spot2 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 2								}{									0 0 0 0 0								}ifelse						 end							5 1 roll 6 -2 roll add							dup 1 eq {								pop								8 /index cvx 1 /exch cvx /sub cvx								9 1 /roll cvx							}{								2 eq {									8 /index cvx 1 /exch cvx /sub cvx									10 1 /roll cvx								}if							}ifelse							4 1 /roll cvx 5 -2 /roll cvx							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx							3 1 /roll cvx 4 -2 /roll cvx							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx							2 1 /roll cvx 3 -2 /roll cvx							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx							6 -2 /roll cvx /pop cvx /pop cvx						] cvx bind					}{						/DeviceCMYK {}					}ifelse				] setcolorspace		 end			/_nColorSpace currentcolorspace pt		}if				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C0_Space _nColorSpace pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C1_Space _nColorSpace pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}def/initializeMultiPassSeps{	/invertXfer{		[		{			1 exch sub		}/exec load systemdict /currenttransfer get exec /exec load		] cvx systemdict /settransfer get exec	}def	/ccThrough{		gsave		1 setCustomColor		currentcmykcolor		grestore		add add add 0 ne	}def	/spotConverted	{	 begin			_isCMYKSep not{				false			}{				name null eq{					false				}{					tintValue null eq tintImage null eq and{						true					}{						spot_C spot_M spot_Y spot_K name ccThrough					}ifelse				}ifelse			}ifelse	 end	}def	/spotChannel	{		_isCMYKSep{			pop false		}{			/_spotDict xp				_spotDict/name get null eq{					false				}{					_spotDict/spot_C get					_spotDict/spot_M get					_spotDict/spot_Y get					_spotDict/spot_K get					_spotDict/name get					ccThrough 				}ifelse		}ifelse	}def	/getChannelData	{		_isCMYKSep dup{			pop renderCMYK		}if		{			_blackPlate{				4 1 roll 3 npop blackInk			}{				_yellowPlate{					4 2 roll 3 npop yellowInk				}{					_magentaPlate{						4 3 roll 3 npop magentaInk					}{						3 npop cyanInk					}ifelse				}ifelse			}ifelse			{				true /nonZeroData			}{				true /zeroData			}ifelse		}{			4 npop			spot1/name get null ne 			spot1 spotChannel and{				spot1/tintImage get dup null ne{					false /nonZeroData				}{					pop false /noData				}ifelse			}{				spot2/name get null ne 				spot2 spotChannel and{					spot2/tintImage get dup null ne{						false /nonZeroData					}{						pop false /noData					}ifelse				}{					false /noData				}ifelse			}ifelse		}ifelse	}def	/renderChannelData	{		/_tmp xp		_tmp /nonZeroData ne currentoverprint and{			pop			_tmp /zeroData eq{pop}if			4 npop		}{			_tmp /nonZeroData eq{				{					invertXfer				}if					systemdict/image				get 5 execImage			}{				pop				_tmp /zeroData eq{pop}if				4 npop				knockOut			}ifelse		}ifelse	}def	/bwImage{	 begin			gsave			dup dup dup			getChannelData			exch pop false exch			renderChannelData			grestore	 end	}def	/ncolorimage{	 begin			pop pop			gsave			spot2/name get null ne spot2 spotChannel and{				true setoverprint			}if			getChannelData 			renderChannelData			grestore	 end	}def	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C0_Space /DeviceGray pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C1_Space /DeviceGray pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}defendenddefaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient 20 dict dup begin put/AGM_Gradient_private 201 dict def/initialize{	AGM_Gradient begin	AGM_Gradient_private begin	initializeVars		/bd systemdict/mark get def	/ed		_level2PS 		{			(>>)		}{			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)		} ifelse	cvx def		_level2PS{		initializeLev2	}{		initializeLev1	}ifelse		queryDevice		initializeRectFill	initializeShading	initializeOps	_producingSeps{		AGM_Gradient_Sep/initialize get exec	}{		initializeComposite	}ifelse	_illustrator{		/f{}def		/F{}def		/s{}def		/S{}def		/b{}def		/B{}def	}if	/image where{		/image get /_image xd	}if	/colorimage where{		/colorimage get /_colorimage xd	}if	AGM_Gradient_private	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop end}def/initializeAI{	pop pop 	AGM_Gradient/AGM_Gradient_private get /_illustrator true put	AGM_Gradient/initialize get exec		AGM_Gradient begin}def/unload{	systemdict/languagelevel known{		systemdict/languagelevel get 2 ge{			userdict/AGM_Gradient_Sep 2 copy known{				undef			}{				pop pop			}ifelse			userdict/AGM_Gradient 2 copy known{				undef			}{				pop pop			}ifelse		}if	}if}def/terminate{	currentdict AGM_Gradient eq{	 end	}if}def AGM_Gradient_private begin/initializeVars{	/_d255 256 array def	0 1 255{		_d255 exch dup 255 div put	}bind for	/_d255- 256 array def	0 1 255{		_d255- exch 1 _d255 2 index get sub put	}bind for	/_sSave nd	/_dUserSpace matrix defaultmatrix def	/_bUMatrix matrix def	/_imageMatrix matrix def	/_saveMatrix matrix def	/_xm matrix def	/_ccAry1 5 array def	/_bbox 4 array pt	/_level2PS 		systemdict/languagelevel known dup{			pop systemdict/languagelevel get 2 ge		}if	def	/_level3PS		_level2PS systemdict/shfill known and	def	currentdict /_illustrator known not{		/_illustrator false def	}if	}def/initializeOps{	AGM_Gradient begin	currentdict/Bc known not{		/Bc{					_renderFlag 2 eq _enabledSmoothShade or{				6 npop			}{				pushBSpace				_rampIndex 0 eq{					pop pop					setCStop				}if				linealFill				popBSpace			}ifelse				}def	}if		currentdict/Bg known not{		/Bg{			10 npop			/_gradName xp			/_renderFlag xp			/_enabledSmoothShade false pt					_renderFlag 2 ne{						_illustrator{					_of setoverprint				}if						/_enabledSmoothShade 					_level3PS{						_usingSmoothShade						_producingSeps not						currentoverprint not or and						_noImage not and					}{						false					}ifelse				pt								_illustrator _eo and _renderFlag 3 eq or{					eoclip				}{					clip				}ifelse						_gradNames _gradName 2 copy known{					get					mark exch aload pop					/_gradType xp					1 sub dup /_rampIndex xp					/_maxRampIndex xp					mark exch aload pop					0 0				}if				pop pop				getRampData			}{				mark mark			}ifelse		}def	}if		currentdict/Bm known not{		/Bm{			_renderFlag 2 ne{				_gradType 0 eq{					linealRamp				}{					radialGrad				}ifelse			}{				6 npop			}ifelse		}def	}if		currentdict/Bh known not{		/Bh{			2 npop			/_yHi xp			/_xHi xp			/_radHilite _xHi 0 ne _yHi 0 ne or pt		}def	}if		currentdict/Bn known not{		/Bn{			AGM_Gradient_private begin				dict /_gradNames xp		 end		}def	}if		currentdict/Bd known not{		/Bd{			AGM_Gradient begin			AGM_Gradient_private begin				/_nColorsBd xp				/_gradType xp				/_gradName xp		}def	}if		currentdict/BD known not{		/BD{				currentdict/_gradNames known not{					/_gradNames 20 dict def				}if				] _nColorsBd _gradType				]  _gradName exch /_gradNames xput		 end		 end		}def	}if		currentdict/Bb known not{		/Bb{					AGM_Gradient/AGM_Gradient_private get /_illustrator get not{				AGM_Gradient begin			}if			AGM_Gradient_private begin			_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin			}if			mySave		}def	}if		currentdict/BB known not{		/BB{					/_tmp xp			cleartomark cleartomark					_tmp dup			_renderFlag					myRestore					_producingSeps{			 end			}if					_illustrator dup		 end			not {			 end			}if					{				2 ne exch 0 gt and{					2 eq{						s					}{						S					}ifelse				}{					pop newpath				}ifelse			}{				pop newpath			}ifelse						}def	}if		currentdict/Xm known not{		/Xm{			_xm astore pop		}def	}if	 end}def/queryDevice{	/_inDistiller		systemdict /currentdistillerparams known	def	/_inRipSep		_level2PS{			currentpagedevice/Separations 2 copy known{				get			}{				pop pop false			}ifelse		}{			false		}ifelse		_inDistiller or	def	/_noImage /lv1Fix where{		pop lv1Fix	}{		false	}ifelse	def	/_useShells where{		/_useShells get /_usingShells xp	}{		/_usingShells false def	}ifelse		/_useSmoothShade where{		pop	}{		/_useSmoothShade false def 	}ifelse	/_forceToCMYK where{		pop	}{		/_forceToCMYK false def 	}ifelse	/_cyanPlate 1 0 0 0 testCMYKColorThrough def	/_magentaPlate 0 1 0 0 testCMYKColorThrough def	/_yellowPlate 0 0 1 0 testCMYKColorThrough def	/_blackPlate 0 0 0 1 testCMYKColorThrough def	/_compositeJob		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and	def	/_isCMYKSep		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or	def	/_compositeSpotDevice where{		pop	}{		/_compositeSpotDevice _compositeJob not _inRipSep or{			1		}{			0		}ifelse		def	}ifelse	/_producingSeps _compositeSpotDevice 0 ne def	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/_dpiThreshold where{		pop	}{		/_dpiThreshold 600 def	}ifelse	/_screenFreqThreshold where{		pop	}{		/_screenFreqThreshold 150 def	}ifelse	/_contoneDevice where{		pop	}{		/_contoneDevice false def	}ifelse	/_subSampleOK 		_deviceDPI _dpiThreshold le 		currentScreenFreq _screenFreqThreshold le and 		_contoneDevice not and 	def}def/initializeRectFill{	/rectfill where dup{		exch pop not _producingSeps or	}{		not	}ifelse	{		/rectfill{			gsave			newpath			4 2 roll moveto			1 index 0 rlineto			0 1 index rlineto			1 index neg 0 rlineto			pop pop			closepath			fill			grestore		}def	}if}def/initializeLev1{	/currentScreenFreq{		currentscreen pop pop	}def	/_byte 1 string def	/colorimage where{		pop	}{		/colorimage{			pop pop			/_blackTmp xp			/_yellowTmp xp			/_magentaTmp xp			/_cyanTmp xp			/_cnt 0 pt			[			_byte dup 0			_cyanTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx			_magentaTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx			_yellowTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx			_blackTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/dup cvx 1 /gt cvx{				pop 1			}/if cvx			255 /mul cvx /cvi cvx			256 /mod cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/put cvx			/_cnt dup cvx 1 /add cvx /pt cvx			] cvx			bind			/_image load 5 execImage		}def	}ifelse}def/initializeLev2{	/level2ScreenFreq{	 begin		60		HalftoneType 1 eq{			pop Frequency		}if		HalftoneType 2 eq{			pop GrayFrequency		}if		HalftoneType 5 eq{			pop Default level2ScreenFreq		}if		 end	}def	/currentScreenFreq{		currenthalftone level2ScreenFreq	}def}def/initializeShading{	_useSmoothShade _level3PS and{		/_usingSmoothShade true pt		initializeLev3_Ops	}{		/_usingSmoothShade false pt	}ifelse}def/initializeLev3_Ops{	/initShFill{		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt		/_rampFuncsArray _maxRampIndex array pt		/_boundsArray _maxRampIndex 1 sub array pt		/_encodeArray _maxRampIndex 2 mul array pt		/_beginCoord _rampPoint pt		/_colorSpace null pt		/_firstFill _rampIndex _maxRampIndex eq pt		/_lastFill false pt	}def	/linealShFill{		popBSpace		_xm aload pop pushBSpace				/_size _index 1 add pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt		}if				bd			/ShadingType 2			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_firstFill _lastFill]			/Domain [0 1] 			/Coords [_beginCoord 0 _endCoord 0]		ed		shfill	}def		/radialShFill{		/_size _maxRampIndex _index sub pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt			/_boundsArray _boundsArray _index _size 1 sub getinterval pt			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt		}if				/_rampLen _beginCoord _endCoord sub pt		bd			/ShadingType 3			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_lastFill _firstFill]			/Domain [0 1] 			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 		ed		shfill				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if	}def		%	/sampFunc{		/_tmp exch pt		bd			_tmp length 1 eq {				_tmp 0 get				/_tmp 2 string pt				dup _tmp 0 3 -1 roll put				_tmp 1 3 -1 roll put			}if			/FunctionType 0			/Order 1			/Size [_tmp length]			/Domain [0 1]			/BitsPerSample 8			/DataSource _tmp			/Range [0 1]		ed	}def		/fillRamp{				/_invert _midPoint 0.5 lt pt		_rampIndex _maxRampIndex eq {			initShFill		}if				getRampColorSpace				_colorSpace null eq{			/_colorSpace _rampColorSpace pt		}{			_colorSpace _rampColorSpace ne _rgbInCMYK or{				/_index _index 1 				_gradType 0 eq{					sub pt					linealShFill				}{					add pt					radialShFill				}ifelse				initShFill				/_colorSpace _rampColorSpace pt			} if		}ifelse		/_endCoord _endPoint pt			/_rgbInCMYK false pt		_producingSeps _forceToCMYK or _rgbRamp and {			_spotColor{				_renderCMYK			}{				_isCMYKSep			}ifelse		}{			false		}ifelse		{			_compositeJob{				/_rgbInCMYK true pt				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor				dup length string copy /_kData exch pt				dup length string copy /_yData exch pt				dup length string copy /_mData exch pt				dup length string copy /_cData exch pt			}{				_rampFuncsArray _index					_cyanPlate{_cyanData}if						_magentaPlate{_magentaData}if						_yellowPlate{_yellowData}if						_blackPlate{_blackData}if					_nSamples expandOne					sampFunc					dup begin /Decode [1 0] def end				put				/_invert false pt			}ifelse		}{			_rampFuncsArray _index				bd					/FunctionType 2					/Domain [0 1]					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div					_gradType 0 eq{						_invert{/C1}{/C0}ifelse _C0						_invert{/C0}{/C1}ifelse _C1					}{						_invert{/C0}{/C1}ifelse _C1						_invert{/C1}{/C0}ifelse _C0					}ifelse				ed			put		}ifelse				_rampIndex 1 ne{			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put		} if				0 1 _invert {exch}if		_encodeArray _index 2 mul 1 add 3 -1 roll put		_encodeArray _index 2 mul 3 -1 roll put		_rampIndex 1 eq {			/_lastFill true pt			_gradType 0 eq{				linealShFill			}{				radialShFill			}ifelse		}if		/_index _index 1 		_gradType 0 eq{			add pt		}{			sub pt		}ifelse	}def}def/initializeComposite{	/bwImage{		pop /_image load 5 execImage 	}def	/rampImage{		_enabledSmoothShade{			fillRamp		}{			_color{				_nSamples setImageParms									_rgbRamp _forceToCMYK not and{					_redData _greenData _blueData _nSamples 3 expandColor					true 3 null ncolorimage				}{					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 null ncolorimage				}ifelse			}{				_nSamples setImageParms _blackData null bwImage			}ifelse		}ifelse	}def	/setCStop{		/_colorStyle exch pt		_colorStyle 0 eq{			1 exch sub			0 0 0			4 -1 roll		}if				_colorStyle 2 eq{			_forceToCMYK{				3 npop setcmykcolor			}{				setrgbcolor 4 npop			}ifelse		}if				_colorStyle 3 eq{			1 exch sub /_tmp xp			pop			4{				_tmp mul 4 1 roll			}repeat		}if				_colorStyle 4 eq{			_forceToCMYK{				6 npop setcmykcolor			}{				3 -1 roll pop pop				1 exch sub /_tmp xp				3{					1 exch sub _tmp mul 1 exch sub 3 1 roll				}repeat				setrgbcolor 				4 npop			}ifelse		}if		_colorStyle 2 ne _colorStyle 4 ne and{			null nsetcustomcolor		}if	}def	/nsetcustomcolor	{		pop setcmykcolor	}def	/nsetcustomcolorend	{	}def	/ncolorimage{		pop 		/_colorimage load 10 execImage	}def	_noImage not _level2PS not and{		/linealFill{			8 setImageParms			_color{				currentcmykcolor				4{					makeByte8 4 1 roll				}repeat				true 4 null ncolorimage			}{				currentgray makeByte8 null bwImage			}ifelse		}def	}if	/getRampColorSpace{		_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		/_C0 [currentcolor] pt		/_C0_Space currentcolorspace pt				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		/_C1 [currentcolor] pt		/_C1_Space currentcolorspace pt				/_rampColorSpace _C0_Space pt				_spotColor{			nsetcustomcolorend		}if	}def}def/npop{	{pop}repeat}def/xd{	exch def}def/nd{	null def}def/pt{	AGM_Gradient_private 3 1 roll put}def/xp{	exch pt}def/xput{	dup load dup length exch maxlength eq{		dup dup load dup		length 2 mul dict copy def	}if	load begin		def  end}def/mySave{	save /_sSave xp}def/myRestore{	_sSave type /savetype eq{		_sSave restore	}if}def/gMark{	counttomark 2 add -1 roll}def/execImage{	/_tmp xp	{		exec	}stopped{		$error /errorname get /undefinedresult ne{			stop		}{			_tmp npop		}ifelse	}if}def/pushBSpace{	newpath gsave	_bUMatrix astore concat }def/popBSpace{	grestore}def/makeByte8{	/_tmp 0 pt	255 mul cvi	8 string 8{		dup _tmp 3 index put 		/_tmp _tmp 1 add pt	}repeat	exch pop}def/setImageParms{	1 8 2 index 0 0 1 0 0 _imageMatrix astore}def/linealFill{	0 0 1 1 rectfill}def/testCMYKColorThrough{	gsave	setcmykcolor currentcmykcolor	grestore	add add add 0 ne}def/expandOne	{	/_tmp xp	dup type /stringtype ne{		_tmp string		exch		dup 0 ne{			255 mul cvi			0 1 _tmp 1 sub{				3 copy				exch put pop			}for		}if		pop	}if}def/expandColor{	/_channels xp	/_len xp	_channels{		_len expandOne _channels 1 roll	}repeat}def/blendColor{		_color{		_rgbRamp _producingSeps not and _forceToCMYK not and{			_redData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_greenData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blueData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			/setrgbcolor cvx		}{			_cyanData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_magentaData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_yellowData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blackData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if				_spotColor{				_rampSD begin					/_rampSD cvx /begin cvx						spot1 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx						spot2 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx					/end cvx			 end				/_rampSD cvx				/nsetcustomcolor cvx			}{				/setcmykcolor cvx			}ifelse		}ifelse	}{		_blackData dup type /stringtype eq{			/_ndx cvx /get cvx _d255 /exch cvx /get cvx		}if				_enabledSmoothShade{			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx		}{			 /setgray cvx		}ifelse	}ifelse}def/useRectImage{	_subSampleOK _enabledSmoothShade not and{		{			mark			0 1 dtransform atan cvi 90 mod 0 eq			1 0 dtransform atan cvi 90 mod 0 eq		} stopped		{			cleartomark			false		}		{			and exch pop		} ifelse	}{		false	}ifelse}def/linealImage{	_noImage{		rectImage	}{		_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get				/rampImage get exec		}{			useRectImage{				rectImage			}{				rampImage			}ifelse		}ifelse	}ifelse}def/linealRamp{	pushBSpace	_ramp{		linealImage	}{		linealFill	}ifelse	popBSpace	/_rampIndex _rampIndex 1 sub pt	_rampIndex 0 gt{		getRampData	}if}def/radialGrad{	/_usingShells currentoverprint _producingSeps and _usingShells or pt	/_firstShell true pt	_enabledSmoothShade not{		currentoverprint _producingSeps and{						newpath			clippath pathbbox 			1 add 4 1 roll			1 add 4 1 roll			1 sub 4 1 roll			1 sub 4 1 roll			_bbox astore pop						newpath			_bbox 0 get _bbox 1 get moveto			_bbox 2 get _bbox 1 get lineto			_bbox 2 get _bbox 3 get lineto			_bbox 0 get _bbox 3 get lineto			closepath			6 copy			gsave _bUMatrix astore concat			1 0 moveto 0 0 1 0 360 arc closepath			eoclip fill			popBSpace		}{			fill		}ifelse	}if	pushBSpace		_radHilite{		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp		_rampPoint 1 lt{			1 _rampPoint sub dup _xHi mul exch _yHi mul translate		}if	}if	_rampIndex{		radialRamp		/_rampIndex _rampIndex 1 sub pt		_rampIndex 0 gt{			getRampData		}if	}repeat		popBSpace	}def/getNSamples{	0 exch	{		dup type /stringtype eq{			length exch pop exit		}if		pop	}forall	dup 0 eq{		pop 1	}if}def/getRampData{	/_rampType gMark pt	/_color _rampType 0 gt pt	/_ccRGB _rampType 5 eq _rampType 6 eq or pt	/_rgbRamp _rampType 4 eq _ccRGB or pt	/_ccProcess _rampType 2 eq _rampType 3 eq or pt	_producingSeps{		_rampSD initSpotDict		/_spotColor _ccProcess _ccRGB or pt	}{		/_spotColor false pt	}ifelse	/_ramp true pt	100 div /_rampPoint xp	100 div /_midPoint xp		dup /_colorStyle xp	_colorStyle 0 eq{ 		2	}{		_colorStyle 1 eq{ 			5		}{			_colorStyle 2 eq{				8			}{				_colorStyle 3 eq{					_producingSeps{						_rampSD /spot1 get begin							/name 3 index def							/spot_K 4 index def							/spot_Y 5 index def							/spot_M 6 index def							/spot_C 7 index def					 end					}if					7				}{					_producingSeps{						_rampSD/spot1 get begin							/name 4 index def							/spot_K 8 index def							/spot_Y 9 index def							/spot_M 10 index def							/spot_C 11 index def					 end					}if					11				} ifelse			}ifelse		}ifelse	}ifelse	/_tmp xp	_tmp index 100 div /_endPoint xp		_gradType 1 eq{		_tmp 1 add index 100 div /_midPoint xp	}if		_producingSeps{		_tmp 2 add index /_nextColorStyle xp		_nextColorStyle 3 eq{			/_tmp _tmp 4 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 2 add index def					/spot_Y _tmp 3 add index def					/spot_M _tmp 4 add index def					/spot_C _tmp 5 add index def			 end			}{				pop			}ifelse		}if		_nextColorStyle 4 eq{			/_tmp _tmp 5 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 5 add index def					/spot_Y _tmp 6 add index def					/spot_M _tmp 7 add index def					/spot_C _tmp 8 add index def			 end			}{				pop			}ifelse		}if	}if	_rampType 3 eq _rampType 6 eq or{		/_tint2Data gMark pt	}if	_ccProcess _ccRGB or{		/_tint1Data gMark pt	}if	_rgbRamp{		/_blueData gMark pt		/_greenData gMark pt		/_redData gMark pt	}if		_producingSeps{		_ccProcess _ccRGB or{			_rampType 3 eq _rampType 6 eq or{				_rampSD /spot2 get begin					/tintImage _gradType 0 eq{						_tint2Data					}{						_tint1Data					}ifelse					def					name null eq{						/name /Black def					}if			 end			}if			_rampSD /spot1 get begin				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{					_tint1Data				}{					_tint2Data				}ifelse				def				_rampType 2 eq _rampType 5 eq or{					name null eq{						/name _rampSD/spot2 get /name get def						/spot_C _rampSD/spot2 get /spot_C get def						/spot_M _rampSD/spot2 get /spot_M get def						/spot_Y _rampSD/spot2 get /spot_Y get def						/spot_K _rampSD/spot2 get /spot_K get def						_rampSD/spot2 get /name null put					}if				}{					name null eq{						/name /Black def					}if				}ifelse		 end		}if	}if	/_blackData gMark pt	_rampType 0 gt{		counttomark 4 add -3 roll		/_yellowData xp		/_magentaData xp		/_cyanData xp	}if	_ramp{		/_nSamples			[			_rampType 0 eq {_blackData}if			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if			] getNSamples pt		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if	} if		setCStop}def/rectImage{	gsave	/_sInc 1 pt	/_bInc 1 _nSamples div pt	/_nSubSamples _nSamples pt	/_optimize false pt			_subSampleOK{		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt				_pChange .5 gt dup /_optimize xp{			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc 1 _nSubSamples div pt			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt		}if	}if	0	_nSubSamples	[	/dup cvx	_optimize {		/round cvx /cvi cvx	} if	/_ndx /exch cvx /pt cvx	blendColor	0 0 _bInc 1 /rectfill cvx	_bInc 0 /translate cvx	_sInc /add cvx	] cvx	bind	repeat	pop	_spotColor{		nsetcustomcolorend	}if	grestore}def/radialInit{	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt	/_sInc -1 pt	/_rampLen _rampPoint _endPoint sub pt	/_bInc _rampLen _nSamples div neg pt	/_optimize false pt	_subSampleOK{		/_uRampLen			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			2 copy lt{				exch			}if pop		pt		/_pChange 			_uRampLen 0 eq{				0			}{				_nSamples _uRampLen div			}ifelse		pt		_pChange .5 gt dup /_optimize xp{			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc _rampLen _nRadSamples div neg pt			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt		}if	}if	_radHilite{		/_xBCInc _xHi _rampLen mul _nRadSamples div pt		/_yBCInc _yHi _rampLen mul _nRadSamples div pt	}if}def/radialRamp{	_enabledSmoothShade{		fillRamp	}{		/_saveMatrix _saveMatrix currentmatrix def				radialInit			%		%		true		_producingSeps _rgbRamp not and{			_nSamples 1 gt{ 				pop				/_ndx 0 pt				[blendColor] cvx exec				currentInkN				/_ndx _nSamples 1 sub pt				[blendColor] cvx exec				currentInkN				or			}if		}if		{			_rampPoint					_nSamples 1 sub					_nRadSamples 			[				/dup cvx						_optimize{					/round cvx /cvi cvx				}if						/_ndx /exch cvx /pt cvx								_usingShells{					/_firstShell cvx{						/_firstShell false pt					}{						0 0 3 index 360 0 arcn fill					}/ifelse cvx				}if						blendColor						_usingShells{					0 0 3 /index cvx 0 360 /arc cvx 				}{					0 0 3 /index cvx 0 360 /arc cvx /fill cvx				}ifelse						/exch cvx _bInc /add cvx /exch cvx						_sInc /add cvx						_radHilite{					_xBCInc _yBCInc /translate cvx				}if			] cvx bind			repeat					pop pop		}{			_usingShells{				0 0 _rampPoint 360 0 arcn fill			}if		}ifelse			_saveMatrix setmatrix				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if				_usingShells _rampIndex 1 eq and{			fill		}if			_spotColor{			nsetcustomcolorend		}if	}ifelse}defendenddefaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 50 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 40 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/channelcount 0 def	/sourcecount 0 def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIDataProc null def	/XIVersion 6 def	/XIColorSpace /DeviceGray def	/XIColorValues 0 defendcurrentdict /_colorimage known not {	/colorimage where {		/colorimage get /_colorimage exch def	}{		/_colorimage null def	} ifelse} if/_image systemdict /image get def/_currenttransfer systemdict /currenttransfer get def/FourEqual {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/TestPlateIndex {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 FourEqual { 				/plateindex 0 def			}{				0 1 0 0 FourEqual { 					/plateindex 1 def				}{					0 0 1 0 FourEqual {						/plateindex 2 def					}{						0 0 0 1 FourEqual { 							/plateindex 3 def						}{							0 0 0 0 FourEqual {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/clrspaceissepn {	type /arraytype eq } def/clrspacegetname {	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse} def/clrspacegetalt {	aload pop pop pop colormake} def/clrspacegetcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/clrspacemarksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				/findcmykcustomcolor where {					pop					dup length 2 sub get					0.1 0.1 0.1 0.1 5 -1 roll					findcmykcustomcolor 1 setcustomcolor					systemdict /currentgray get exec					1 ne				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/colormake {	dup clrspacegetcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/colorexpand {	dup clrspacegetname exch	dup clrspaceissepn {		clrspacegetalt		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				clrspacegetalt colortint colortocmyk			} ifelse		} ifelse	} ifelse} def/makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/WalkRGBString {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/WalkCMYKString{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/StuffRGBIntoGrayString{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/StuffCMYKIntoGrayString{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/RGBToGrayImageProc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		dup length 3 idiv string		dup 3 1 roll 				/StuffRGBIntoGrayString load exch		WalkRGBString end} def/CMYKToGrayImageProc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		dup length 4 idiv string		dup 3 1 roll 				/StuffCMYKIntoGrayString load exch		WalkCMYKString end} def/SeparateCMYKImageProc {		Adobe_ColorImage_AI6_Vars begin		sourcecount 0 ne {			sourcearray plateindex get exec		}{						sourcearray 0 get exec						dup length 4 idiv string						0 2 index						plateindex 4 2 index length 1 sub {				get 255 exch sub								3 copy put pop 1 add								2 index			} for			pop pop exch pop		} ifelse end} def	/ColorImageCompositeEmulator {	pop true eq {		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat	}{		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {			Adobe_ColorImage_AI6_Vars begin				sourcearray 0 3 -1 roll put							channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse				load		 end		} if		image	} ifelse} def/colorimage {	Adobe_ColorImage_AI6_Vars begin		/channelcount 1 index def		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def		4 sourcecount add index end		dup 8 eq exch 1 eq or not {		/_colorimage load null ne {			_colorimage		}{			Adobe_ColorImage_AI6_Vars /sourcecount get			7 add { pop } repeat		} ifelse	}{		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {			/_colorimage load null eq {				ColorImageCompositeEmulator			}{				dup 1 eq {					pop pop image				}{					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {						gsave												0 _currenttransfer exec						1 _currenttransfer exec						eq						{ 0 _currenttransfer exec 0.5 lt }						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse												{ { pop 0 } } { { pop 1 } } ifelse						systemdict /settransfer get exec					} if										_colorimage										Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {						grestore					} if				} ifelse			} ifelse		}{			dup 1 eq {				pop pop				image			}{				pop pop				Adobe_ColorImage_AI6_Vars begin					sourcecount -1 0 {									exch sourcearray 3 1 roll put					} for					/SeparateCMYKImageProc load			 end				systemdict /image get exec			} ifelse		} ifelse	} ifelse} def/proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace clrspacegetcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] makeimagedict _image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] makeimagedict _image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} stringapply			} concatprocs _image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} stringapply			} concatprocs false _pticomps			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse		} ifelse	} ifelse} def/graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray proctintimage} def/cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK proctintimage} def/rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB proctintimage} def/tintimage {	TestPlateIndex -1 eq {		colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop graytintimage		}{			dup /DeviceRGB eq {				pop rgbtintimage			}{				pop cmyktintimage			} ifelse		} ifelse	}{		dup clrspacemarksplate {			plateindex 5 lt {				colortocmyk plateindex get 1 exch sub				exch {1 0}{0 1} ifelse () graytintimage			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage			} ifelse		}{			pop pop pop			{pop 1} 0 1 () /DeviceGray proctintimage		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	0 setgray	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace tintimage} def/XIImage {	0 setgray	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				XIType 1 eq {			/_lp /null ddef			_fc			/_lp /imagemask ddef		}		if		/XIVersion 7 def end} def/XH {	Adobe_ColorImage_AI6_Vars begin		/XIVersion 6 def		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEncoding 0 ne XIVersion 6 le and {			currentfile 128 string readline pop pop		} if		XICompression 0 eq {			/XIBuffer1 XIRowBytes string def			XIEncoding 0 eq {				{currentfile XIBuffer1 readhexstring pop}			}{				{currentfile XIBuffer1 readstring pop}			} ifelse		}{			/XIBuffer1 256 string def			/XIBuffer2 XIRowBytes string def			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}			/ASCIIHexDecode filter /DCTDecode filter			/XIFile exch def			{XIFile XIBuffer2 readstring pop}		} ifelse		/XIDataProc exch def				XIVersion 6 le {			0 0 moveto			XIImageMatrix concat			XIImageWidth XIImageHeight scale			XIType 1 eq {				/_lp /null ddef				_fc				/_lp /imagemask ddef			} if		} if		XIEnable {			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)%%Version: 1.2 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 107 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XA{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/_rgbtocmyk{3	{	1 exch sub 3 1 roll	} repeat3 copy 1 4 1 roll3	{	3 index 2 copy gt		{		exch		} if	pop 4 1 roll	} repeatpop pop pop4 1 roll3	{	3 index sub	3 1 roll	} repeat4 -1 roll} def/Xx{	exch	/_gf exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq	{		findcmykcustomcolor	}	{		/findrgbcustomcolor where not {			4 1 roll _rgbtocmyk			5 -1 roll			findcmykcustomcolor		}		{			pop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%BeginResource: procset Adobe_pattern_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)%%Version: 1.1 0%%CreationDate: (03/26/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 95 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/@{} def/&{} def/dp{	dup null eq	{		pop		_dp 0 ne		{			0 1 _dp 1 sub _dl mod			{				_da exch get 3 get			} for			_dp 1 sub _dl mod 1 add packedarray			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll			definepattern pop		} if	}	{		_dp 0 ne _dp _dl mod 0 eq and		{			null dp		} if		7 packedarray _da exch _dp _dl mod exch put		_dp _dl mod _da 0 get 4 get 2 packedarray		/_dp _dp 1 add def	} ifelse} def/E{	_ed begin	dup 0 get type /arraytype ne	{		0		{			dup 1 add index type /arraytype eq			{				1 add			}			{				exit			} ifelse		} loop		array astore	} if	/_dd exch def	/_ury exch def	/_urx exch def	/_lly exch def	/_llx exch def	/_n exch def	/_y 0 def	/_dl 4 def	/_dp 0 def	/_da _dl array def	0 1 _dd length 1 sub	{		/_d exch _dd exch get def		0 2 _d length 2 sub		{			/_x exch def			/_c false def			/_r _d _x 1 add get cvlit def			_r _ ne			{				_urx _llx sub _ury _lly sub				[				1 0 0 1 0 0				]				[				/save cvx				_llx neg _lly neg /translate cvx				_c				{					nc /begin cvx				} if				_r dup type /stringtype eq				{					cvx				}				{					{						exec					} /forall cvx				} ifelse				_c				{					/end cvx				} if				/restore cvx				] cvx				/_fn 12 _n length add string def				_y _fn cvs pop				/_y _y 1 add def				_fn 12 _n putinterval				_fn _c false dp				_d exch _x 1 add exch put			} if		} for	} for	null dp	_n _dd /_pd end	xput} def/fc{	_fm dup concatmatrix pop} def/p{	/_fm exch ddef	9 -2 roll _pm translate fc	7 -2 roll _pm scale fc	5 -1 roll _pm rotate fc	4 -2 roll exch 0 ne	{		dup _pm rotate fc		1 -1 _pm scale fc		neg _pm rotate fc	}	{		pop	} ifelse	dup _pm rotate fc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore fc	neg _pm rotate fc	_pd exch get /_fdd exch ddef	/_pf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					patternfill				}				{					pop					fill				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_psf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					9 copy 6 npop patternashow				}				{					pop					6 copy 3 npop hvashow				} ifelse				grestore				pop			} for			pop		} for		restore		sw rmoveto	} ddef	/_pjsf	{		save		/_doClip 0 ddef		0 1 _fdd length 1 sub		{			/_fd exch _fdd exch get ddef			_fd			0 2 _fd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _fc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _fm					12 copy 6 npop patternawidthshow				}				{					pop 9 copy 3 npop hvawidthshow				} ifelse				grestore				pop			} for			pop		} for		restore		swj rmoveto	} ddef	/_lp /none ddef} def/sc{	_sm dup concatmatrix pop} def/P{	/_sm exch ddef	9 -2 roll _pm translate sc	7 -2 roll _pm scale sc	5 -1 roll _pm rotate sc	4 -2 roll exch 0 ne	{		dup _pm rotate sc		1 -1 _pm scale sc		neg _pm rotate sc	}	{		pop	} ifelse	dup _pm rotate sc	exch dup sin exch cos div 1 0 0 1 0 6 2 roll	_pm astore sc	neg _pm rotate sc	_pd exch get /_sdd exch ddef	/_ps	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					patternstroke				}				{					pop stroke				} ifelse				grestore				pop			} for			pop		} for		restore		newpath	} ddef	/_pss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					10 copy 6 npop patternashowstroke				}				{					pop 7 copy 3 npop ss				} ifelse				grestore				pop			} for			pop		} for		restore		pop sw rmoveto	} ddef	/_pjss	{		save		/_doClip 0 ddef		0 1 _sdd length 1 sub		{			/_sd exch _sdd exch get ddef			_sd			0 2 _sd length 2 sub			{				gsave				2 copy get dup _ ne				{					cvx exec _sc				}				{					pop				} ifelse				2 copy 1 add get dup _ ne				{					aload pop findfont _sm					13 copy 6 npop patternawidthshowstroke				}				{					pop 10 copy 3 npop jss				} ifelse				grestore				pop			} for			pop		} for		restore		pop swj rmoveto	} ddef	/_lp /none ddef} defenduserdict /Adobe_pattern_AI5 18 dict dup beginput/initialize{	/definepattern where	{		pop		pop pop	}	{	 begin	 begin		Adobe_pattern_AI5 begin		Adobe_pattern_AI5		{			dup xcheck			{				bind			} if			pop pop		} forall		mark		cachestatus 7 1 roll pop pop pop pop exch pop exch		{			{				10000 add				dup 2 index gt				{					exit				} if				dup setcachelimit			} loop		} stopped		cleartomark	 end 				 end	 end				Adobe_pattern_AI5 begin	} ifelse} def/terminate{	currentdict Adobe_pattern_AI5 eq	{	 end	} if} deferrordict/nocurrentpoint{	pop	stop} puterrordict/invalidaccess{	pop	stop} put/patternencoding256 array def0 1 255{	patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{	17 dict begin	/uniform exch def	/cache exch def	/key exch def	/procarray exch def	/mtx exch matrix invertmatrix def	/height exch def	/width exch def	/ctm matrix currentmatrix def	/ptm matrix def	/str 32 string def	/slice 9 dict def	slice /s 1 put	slice /q 256 procarray length div sqrt floor cvi put	slice /b 0 put	/FontBBox	[	0 0 0 0	] def	/FontMatrix mtx matrix copy def	/Encoding patternencoding def	/FontType 3 def	/BuildChar	{		exch	 begin		/setstrokeadjust where {pop true setstrokeadjust} if		slice begin		dup q dup mul mod s idiv /i exch def		dup q dup mul mod s mod /j exch def		q dup mul idiv procarray exch get		/xl j width s div mul def		/xg j 1 add width s div mul def		/yl i height s div mul def		/yg i 1 add height s div mul def		uniform		{			1 1		}		{			width 0 dtransform			dup mul exch dup mul add sqrt dup 1 add exch div			0 height dtransform			dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse		width 0 cache		{			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul			setcachedevice		}		{			setcharwidth		} ifelse		gsave		scale		newpath		xl yl moveto		xg yl lineto		xg yg lineto		xl yg lineto		closepath		clip		newpath	 end	 end		exec		grestore	} def	key currentdict definefont end} def/patterncachesize{	gsave	newpath	0 0 moveto	width 0 lineto	width height lineto	0 height lineto	closepath	patternmatrix setmatrix	pathbbox	exch ceiling 4 -1 roll floor sub 3 1 roll	ceiling exch floor sub	mul 1 add	grestore} def/patterncachelimit{	cachestatus 7 1 roll 6 npop 8 mul} def/patternpath{	exch dup begin	setfont	ctm setmatrix	concat	slice exch /b exch slice /q get dup mul mul put	FontMatrix concat	uniform	{		width 0 dtransform round width div exch round width div exch		0 height dtransform round height div exch height div exch		0 0 transform round exch round exch		ptm astore setmatrix	}	{		ptm currentmatrix pop	} ifelse	{		currentpoint	} stopped not	{		2 npop		pathbbox		true		4 index 3 index eq		4 index 3 index eq		and		{			pop false			{				{					2 npop				}				{					3 npop true				}				{					7 npop true				}				{					pop true				} pathforall			} stopped			{				5 npop true			} if		} if		{			height div ceiling height mul 4 1 roll			width div ceiling width mul 4 1 roll			height div floor height mul 4 1 roll			width div floor width mul 4 1 roll			2 index sub height div ceiling cvi exch			3 index sub width div ceiling cvi exch			4 2 roll moveto			FontMatrix mtx invertmatrix			dup dup 4 get exch 5 get rmoveto			ptm ptm concatmatrix pop			slice /s			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi			dup slice /q get gt			{				pop slice /q get			} if			put			0 1 slice /s get dup mul 1 sub			{				slice /b get add				gsave				0 1 str length 1 sub				{					str exch 2 index put				} for				pop				dup				{					gsave					ptm setmatrix					1 index str length idiv					{						str show					} repeat					1 index str length mod str exch 0 exch getinterval show					grestore					0 height rmoveto				} repeat				grestore			} for			2 npop		}		{			4 npop		} ifelse	} if end} def/patternclip{	_eo {eoclip} {clip} ifelse} def/patternstrokepath{	strokepath} def/patternmatrixmatrix def/patternfill{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternclip	Adobe_pattern_AI5 /patternpath get exec	grestore	newpath} def/patternstroke{	dup type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get	} if	gsave	patternstrokepath	true	{		{			{				newpath				moveto			}			{				lineto			}			{				curveto			}			{				closepath				3 copy				Adobe_pattern_AI5 /patternfill get exec			} pathforall			3 npop		} stopped		{			5 npop			patternclip			Adobe_pattern_AI5 /patternfill get exec		} if	}	{		patternclip		Adobe_pattern_AI5 /patternfill get exec	} ifelse	grestore	newpath} def/vpatternawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef		{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	3 npop} def/hpatternawidthshow{	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		9 index 9 index 9 index		Adobe_pattern_AI5 /patternfill get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	8 npop} def/patternashow{0 0 0 6 3 rollpatternawidthshow} def/patternawidthshow{	6 index type /dicttype eq	{		Adobe_pattern_AI5 /patternmatrix get 7 1 roll	} if	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse} def/vpatternawidthshowstroke{	7 1 roll	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			3 index setmatrix			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec			grestore			_fontRotateAdjust sub			moveto			_hvwb eq { _hvcx _hvcy rmoveto } if			_hvax _hvay rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			_hvax sub			3 index _hvwb eq { _hvcx sub } if			currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto			gsave			2 index false charpath			4 index setmatrix			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec			grestore			newpath moveto pop pop		} ifelse	} cforall	4 npop} def/hpatternawidthshowstroke{	7 1 roll	{		dup cstring exch		gsave		3 index eq { 5 index 5 index rmoveto } if		false charpath currentpoint		7 index setmatrix		10 index 10 index 10 index		Adobe_pattern_AI5 /patternstroke get exec		grestore		newpath moveto		2 copy rmoveto	} cforall	9 npop} def/patternashowstroke{	0 0 0 7 3 roll	patternawidthshowstroke} def/patternawidthshowstroke{	7 index type /dicttype eq	{		patternmatrix /patternmatrix get 8 1 roll	} if	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse} defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Black, White Radial)(Black, White Radial) 1 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 0 1 50 0 %_Bs0 0 0 1 1 50 100 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Copper)(Copper) 0 7 Bd[<5E5E5D5D5C5B5B5A5A595958585757565655555454535352525150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464645444443434242414140403F3F3E3E3D3D3C3C3B3B3A39393838373736363535343433333232313130302F2F2E2D2D2C2C2B2B2A2A292928282727262625252424232222212120201F1F1E1E1D1D1C1C1B1B1A1A1919181817161615151414131312121111><9A9998989796959493929291908F8E8D8C8C8B8A8988878686858483828181807F7E7D7C7B7B7A79787776757574737271706F6F6E6D6C6B6A6969686766656463636261605F5E5D5D5C5B5A5958575756555453525151504F4E4D4C4B4B4A49484746454544434241403F3F3E3D3C3B3A3A39383736353434333231302F2E2E2D2C2B2A2928282726252423222221201F1E1D1C1C><B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D><12121212121212111111111111111110101010101010100F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0909090909090909080808080808080807070707070707070606060606060606050505050505050504040404040404040403030303030303030202020202020202010101010101010100000000>1 %_Br<737373737373737373737373737373737373737373737372727272727272727271717171717170707070706F6F6F6F6F6E6E6E6E6D6D6D6D6C6C6C6B6B6B6A6A6A69696968686767676666656564646463636262616160605F5F5E><BCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBBBBBBBBBBBBBBBBBABABABABAB9B9B9B9B8B8B8B8B7B7B7B6B6B6B5B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAEAEADADACACABAAAAA9A9A8A7A7A6A5A4A4A3A2A2A1A09F9E9E9D9C9B9A><D9D9D9D9D9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D5D5D5D5D4D4D4D3D3D3D2D2D2D1D1D0D0CFCFCFCECECDCDCCCBCBCACAC9C9C8C7C7C6C5C5C4C3C2C2C1C0BFBFBEBDBCBBBABAB9B8B7B6B5B4B3B2B1><28282828282828272727272727272727272727272727272727262626262626262625252525252524242424242323232323222222212121212020201F1F1F1E1E1E1D1D1D1C1C1C1B1B1A1A1A191918181717161615151414131312>1 %_Br<5E5F5F6060616162626364646565666667676868696A6A6B6B6C6C6D6D6E6E6F7070717172727373><9A9B9C9D9E9F9FA0A1A2A3A4A5A6A6A7A8A9AAABACADADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBBBC><B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9><12131314141516161717181819191A1A1B1C1C1D1D1E1E1F1F202021222223232424252526262728>1 %_Br<0001010202030304040505060607070809090A0A0B0B0C0C0D0D0E0E0F0F1010111212131314141515161617171818191A1A1B1B1C1C1D1D1E1E1F1F202021212223232424252526262727282829292A2B2B2C2C2D2D2E2E2F2F303031313232333434353536363737383839393A3A3B3C3C3D3D3E3E3F3F404041414242434344454546464747484849494A4A4B4B4C4D4D4E4E4F4F505051515252535354555556565757585859595A5A5B5B5C5C5D5E5E><00010203030405060708090A0A0B0C0D0E0F1011111213141516171818191A1B1C1D1E1E1F20212223242525262728292A2B2C2C2D2E2F3031323333343536373839393A3B3C3D3E3F4040414243444546474748494A4B4C4D4E4E4F50515253545455565758595A5B5B5C5D5E5F6061626263646566676869696A6B6C6D6E6F6F70717273747576767778797A7B7C7D7D7E7F80818283848485868788898A8A8B8C8D8E8F9091919293949596979898999A><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1><0000000000010101010101010101010202020202020202020203030303030303030304040404040404040404050505050505050505050606060606060606060607070707070707070708080808080808080808090909090909090909090A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F101010101010101010111111111111111111111212121212121212>1 %_Br<24232222212120201F1F1E1D1D1C1C1B1B1A1919181817171615151414131312121110100F0F0E0E0D0C0C0B0B0A0A0908080707060605050403030202010100><3B3A39383737363534333231302F2E2D2C2B2A29282827262524232221201F1E1D1C1B1A19181817161514131211100F0E0D0C0B0A0908080706050403020100><403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928272625242322211F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><01010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<59595858585757575656565555555454545353535252525151515050504F4F4F4E4E4E4D4D4D4C4C4C4B4B4B4A4A4A4949494848484747474646464545454444444343434242424141414040403F3F3F3E3E3E3D3D3D3C3C3C3B3B3A3A3A3939393838383737373636363535353434343333333232323131313030302F2F2F2E2E2E2D2D2D2C2C2C2B2B2B2A2A2A292929282828272727262626252525242424><ADACACABAAAAA9A8A7A7A6A5A5A4A3A2A2A1A0A09F9E9D9D9C9B9B9A99989897969695949393929191908F8E8E8D8C8B8B8A89898887868685848483828181807F7F7E7D7C7C7B7A7A79787777767575747372727170706F6E6D6D6C6B6B6A69686867666665646363626161605F5E5E5D5C5C5B5A59595857565655545453525151504F4F4E4D4C4C4B4A4A49484747464545444342424140403F3E3D3D3C3B><DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746454443424140><0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A090909090909090909090908080808080808080808080707070707070707070707070606060606060606060606050505050505050505050504040404040404040404040303030303030303030303030202020202020202020202010101010101010101>1 %_Br[0.0656 0.1081 0.1138 0.0003 1 50 100 %_Bs0.3689 0.6046 0.6942 0.0716 1 50 85 %_Bs0.4526 0.7386 0.8504 0.1551 1 73.9136 75 %_Bs0.3689 0.6046 0.6942 0.0716 1 50 63 %_Bs0 0 0 0 1 50 34 %_Bs0.1397 0.2324 0.251 0.0029 1 50 14 %_Bs0.3494 0.6791 0.8753 0.0583 1 50 2 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Rainbow)(Rainbow) 0 6 Bd[<F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605040302>0.9882<0505050505050505050505050505050505050505050505050505050505050505050505050505050505050606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060607070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707080808080808080808080808080808080808080808080808080808080808080808080808080808080808>01 %_Br<E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9><1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC><0909090909090909090909090909090909090909090909090909090909090808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080808080807070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070706060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606050505050505050505050505050505050505050505050505050505050505>01 %_Br<ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8><131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414><EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09>01 %_Br<08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC><05050505050505050506060606060606060606060606060606070707070707070707070707070707070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101010101111111111111111111111111111111112121212121212121212121212121212131313131313131313><E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF>01 %_Br<03030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040405050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050506060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060607070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070708080808080808080808080808080808080808080808080808><F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605>0.913701 %_Br[0.0078 0.9882 0.0314 0 1 50 100 %_Bs0.9765 0.9882 0.0196 0 1 50 80 %_Bs0.9098 0.0784 0.0353 0 1 50 60 %_Bs0.9255 0.0745 0.9373 0 1 50 40 %_Bs0.0314 0.0196 0.9137 0 1 50 20 %_Bs0.0118 0.9608 0.9137 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Tropical Sunset)(Tropical Sunset) 0 5 Bd[0<BFBEBDBCBBBAB9B8B7B6B5B4B3B2B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A3A2A1A09F9E9D9C9B9A9A99989796959493939291908F8E8E8D8C8B8A898988878685858483828181807F7E7D7D7C7B7A7A79787777767575747372727170706F6E6D6D6C6B6B6A696968676766666564646362626161605F5F5E5E5D5C5C5B5B5A5A595858575756565555545453535252515150504F4F4E4E4D4D4D4C4C4B4B4B4A4A49494948484747474646464545454444444443434343424242424141414141414040404040404040><BFBFBFBFBFC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7>01 %_Br<08080808080808080808080807070707070707070707070707070707070707070707070706060606060606060606060606060606060606060606060505050505050505050505050505050505050505050505040404040404040404040404040404040404040404040403030303030303030303030303030303030303030303030202020202020202020202020202020202020202020202020101010101010101010101010101010101010101010101000000000000000000000000><05060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF><E9E9E9E8E8E8E8E7E7E7E7E7E6E6E6E6E5E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E2E1E1E1E1E0E0E0E0E0DFDFDFDFDEDEDEDEDEDDDDDDDDDCDCDCDCDCDBDBDBDBDADADADADAD9D9D9D9D8D8D8D8D7D7D7D7D7D6D6D6D6D5D5D5D5D5D4D4D4D4D3D3D3D3D3D2D2D2D2D1D1D1D1D1D0D0D0D0CFCFCFCFCFCECECECECDCDCDCDCCCCCCCCCCCBCBCBCBCACACACACAC9C9C9C9C8C8C8C8C8C7C7C7C7C6C6C6C6C6C5C5C5C5C4C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C1C0C0C0C0BFBF>01 %_Br<202020201F1F1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A191919191919191919181818181818181818181717171717171717171716161616161616161616151515151515151515151414141414141414141313131313131313131312121212121212121212111111111111111111111010101010101010100F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A090909090909090909090808080808><696868676766666665656464636363626261616060605F5F5E5E5D5D5D5C5C5B5B5A5A5A59595858575757565655555454545353525251515150504F4F4E4E4E4D4D4C4C4B4B4B4A4A4949494848474746464645454444434343424241414040403F3F3E3E3D3D3D3C3C3B3B3A3A3A39393838373737363635353434343333323231313130302F2F2E2E2E2D2D2C2C2B2B2B2A2A29292828282727262625252524242323222222212120201F1F1F1E1E1D1D1C1C1C1B1B1A1A1A19191818171717161615151414141313121211111110100F0F0E0E0E0D0D0C0C0B0B0B0A0A0909080808070706060505><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9>01 %_Br<CCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120><000101020203040405050607070809090A0A0B0C0C0D0D0E0F0F101011121213131415151616171818191A1A1B1B1C1D1D1E1E1F20202121222323242425262627282829292A2B2B2C2C2D2E2E2F2F303131323233343435353637373839393A3A3B3C3C3D3D3E3F3F404041424243434445454647474848494A4A4B4B4C4D4D4E4E4F50505151525353545455565657585859595A5B5B5C5C5D5E5E5F5F606161626263646465666667676869>001 %_Br[0 0.25 0.78 0 1 50 100 %_Bs0 0.75 0.75 0 1 35.5263 57.3034 %_Bs0.0314 0.0196 0.9137 0 1 50 55.618 %_Bs0.125 0.41 0 0 1 50 44.9438 %_Bs0.8 0 0 0 1 50 19.1011 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 1)(Unnamed gradient 1) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_Bs1 0 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Violet Eye)(Violet Eye) 1 5 Bd[<FFFFFFFFFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9><FFFEFEFDFCFCFBFAFAF9F9F8F7F7F6F6F5F4F4F3F3F2F1F1F0F0EFEEEEEDEDECECEBEAEAE9E9E8E8E7E7E6E6E5E5E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D5D4D4D3D3D2D2D2D1D1D0D0CFCFCFCECECDCDCDCCCCCBCBCBCACACAC9C9C8C8C8C7C7C7C6C6C5C5C5C4C4C4C3C3C3C2C2C2C1C1C1C0C0C0BFBFBFBEBEBEBDBDBDBDBCBCBCBBBBBBBABABABAB9B9B9B8B8B8B8B7B7B7B7B6B6B6B5B5B5B5B4B4B4B4B3B3B3B3B2B2B2B2B2B1B1B1B1B0B0B0B0AFAFAFAFAFAEAEAEAEAEADADADADADACACACACACABABABABABAAAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8A8A8A7A7A7A7A7A7A6A6A6A6A6A6A6A5A5A5A5A5A5A5A4A4A4A4A4A4A4A3A3A3A3A3A3A3A3A2A2A2A2A2A2A2A2A2A1A1A1A1A1A1A1A1A1A0A0A0A0A0A0A0A0A0A09F9F9F9F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E9E9E9E9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9B9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9A9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999998989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898><060606060606060606060606060605050505050505050505050505050505050505050505050505050505050504040404040404040404040404040404040404040404040404040404040404040404040403030303030303030303030303030303030303030303030303030303030303030303030303030303030303030202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><FFFDFCFAF9F7F5F4F2F1EFEEECEBE9E8E6E5E3E2E0DFDDDCDAD9D7D6D5D3D2D0CFCECCCBC9C8C7C5C4C3C1C0BFBDBCBBBAB8B7B6B5B3B2B1B0AEADACABAAA8A7A6A5A4A2A1A09F9E9D9C9A999897969594939291908F8D8C8B8A898887868584838281807F7E7D7C7C7B7A79787776757473727170706F6E6D6C6B6A6A6968676665656463626161605F5E5D5D5C5B5A5A59585757565555545352525150504F4E4E4D4C4C4B4A4A494848474646454544434342424140403F3F3E3D3D3C3C3B3B3A3A39393837373636353534343333323231313030302F2F2E2E2D2D2C2C2B2B2B2A2A29292828282727262626252524242423232322222121212020201F1F1F1E1E1E1D1D1D1C1C1C1B1B1B1A1A1A1A191919181818181717171616161615151515141414141313131312121212111111111110101010100F0F0F0F0F0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A09090909090909090808080808080808070707070707070706060606060606060606050505050505050505050504040404040404040404040404040303030303030303030303030303030302020202020202020202020202020202020202020202010101010101010101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<E9E9E9E9E9E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E1E0E0E0E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDEDEDEDDDDDDDDDDDDDDDDDDDCDCDCDCDC><9897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928272625>001 %_Br<DCDCDCDCDBDBDBDBDBDADADAD9D9D9D8D8D8D7D7D7D6D6D5D5D5D4D4D3D3D2D2D2D1D1D0D0CFCFCECECDCDCCCBCBCACAC9C9C8C8C7C6C6C5C5C4C4C3C2C2C1C0C0BFBFBEBDBDBCBBBBBAB9B9B8B7B7B6B5B5B4B3B2B2B1B0B0AFAEADADACABAAAAA9A8A7A7A6A5A4A4A3A2A1A1A09F9E9D9D9C9B9A9999989796959494939291908F><252525252626262627272728282829292A2A2A2B2B2C2C2D2D2E2E2F2F30303131323233343435353637373838393A3A3B3C3C3D3E3E3F40404142434344454646474849494A4B4C4C4D4E4F505051525354545556575859595A5B5C5D5E5F5F60616263646566676868696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101020202020202020202020202020202>01 %_Br<8F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><807F7E7D7C7B7A79787777767574737271706F6F6E6D6C6B6A69686767666564636261605F5F5E5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484746464544434241403F3E3E3D3C3B3A39383736353534333231302F2E2D2D2C2B2A29282726252524232221201F1E1D1D1C1B1A19181716151514131211100F0E0D0C0C0B0A0908070605040403020100><020202020202020202020202020202020202020202020201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000>01 %_Br[1 1 0.0235 1 1 16.6667 25.8427 %_Bs0.9137 0.5961 0 0 1 50 49.4382 %_Bs0.8627 0.1451 0 0 1 61.5385 64.6067 %_Bs0.5623 0.5 0.007 0 1 50 70.2247 %_Bs0 0 0 0 1 50 78.6517 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (White, Black)(White, Black) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 1 1 50 100 %_Bs0 0 0 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Azure Rings)(Azure Rings) 22.5 22.5 58.5 58.5 [%AI3_Tile(0 O 0 R 0.9569 0.9294 0 0 k 0.9569 0.9294 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1.75 w 4 M []0 d0 XR40.5 58.5 m40.5 48.5586 32.4409 40.5 22.5 40.5 c12.5591 40.5 4.5 48.5586 4.5 58.5 c4.5 68.4414 12.5591 76.5 22.5 76.5 c32.4409 76.5 40.5 68.4414 40.5 58.5 cs40.5 22.5 m40.5 12.5586 32.4409 4.5 22.5 4.5 c12.5591 4.5 4.5 12.5586 4.5 22.5 c4.5 32.4414 12.5591 40.5 22.5 40.5 c32.4409 40.5 40.5 32.4414 40.5 22.5 cs40.5 40.5 m40.5 30.5586 32.4409 22.5 22.5 22.5 c12.5591 22.5 4.5 30.5586 4.5 40.5 c4.5 50.4414 12.5591 58.5 22.5 58.5 c32.4409 58.5 40.5 50.4414 40.5 40.5 cs58.5 58.5 m58.5 48.5586 50.4409 40.5 40.5 40.5 c30.5591 40.5 22.5 48.5586 22.5 58.5 c22.5 68.4414 30.5591 76.5 40.5 76.5 c50.4409 76.5 58.5 68.4414 58.5 58.5 cs58.5 22.5 m58.5 12.5586 50.4409 4.5 40.5 4.5 c30.5591 4.5 22.5 12.5586 22.5 22.5 c22.5 32.4414 30.5591 40.5 40.5 40.5 c50.4409 40.5 58.5 32.4414 58.5 22.5 cs58.5 40.5 m58.5 30.5586 50.4409 22.5 40.5 22.5 c30.5591 22.5 22.5 30.5586 22.5 40.5 c22.5 50.4414 30.5591 58.5 40.5 58.5 c50.4409 58.5 58.5 50.4414 58.5 40.5 cs76.5 58.5 m76.5 48.5586 68.4409 40.5 58.5 40.5 c48.5591 40.5 40.5 48.5586 40.5 58.5 c40.5 68.4414 48.5591 76.5 58.5 76.5 c68.4409 76.5 76.5 68.4414 76.5 58.5 cs76.5 22.5 m76.5 12.5586 68.4409 4.5 58.5 4.5 c48.5591 4.5 40.5 12.5586 40.5 22.5 c40.5 32.4414 48.5591 40.5 58.5 40.5 c68.4409 40.5 76.5 32.4414 76.5 22.5 cs76.5 40.5 m76.5 30.5586 68.4409 22.5 58.5 22.5 c48.5591 22.5 40.5 30.5586 40.5 40.5 c40.5 50.4414 48.5591 58.5 58.5 58.5 c68.4409 58.5 76.5 50.4414 76.5 40.5 cs%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Camouflage)(Camouflage) 1 1 73 73 [%AI3_Tile(0 O 0 R 0.6 0.1412 0.9373 0.0275 k 0.6 0.1412 0.9373 0.0275 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR1 73 m1 1 L73 1 L73 73 L1 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.4941 0.3529 0.9529 0.2 k 0.4941 0.3529 0.9529 0.2 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR18.5449 73 m18.5449 1 L46.7832 1 L46.7832 73 L18.5449 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.1882 0.1098 0.9059 0.0157 k 0.1882 0.1098 0.9059 0.0157 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR11.9512 1 m11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c9.2314 10.2334 4.25 10.2334 4.25 13.8735 c4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c10.0313 24.832 10.208 24.832 10.208 28.5654 c10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c4.6631 69.1636 11.9512 69.3184 11.9512 73 C27.9268 73 L27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c26.3945 24.832 24.4248 24.832 24.4248 21.0991 c24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c24.6055 2.8813 27.9268 4.7129 27.9268 1 C11.9512 1 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.9216 0.2157 0.9451 0.0745 k 0.9216 0.2157 0.9451 0.0745 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR41.875 1 m41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c41.5742 24.832 43.6484 24.832 43.6484 28.5659 c43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c40.6289 69.1636 41.875 69.3184 41.875 73 C59.0752 73 L59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c55.8945 55.502 61.0059 55.502 61.0059 51.7886 c61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c60.5635 40.897 59.9277 40.897 59.9277 37.2842 c59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c55.7461 3.978 59.0752 4.6484 59.0752 1 C41.875 1 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Honeycomb)(Honeycomb) 12.9819 14.6548 65.8066 60.6758 [%AI3_Tile(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR64.0161 21.3906 m64.0161 7.9009 L52.3345 1.1543 L40.6475 7.9009 L40.6475 21.3906 L52.3345 28.1372 L64.0161 21.3906 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR43.9536 19.4839 m43.9536 9.8081 L52.3345 4.9702 L60.7153 9.8081 L60.7153 19.4839 L52.3345 24.3218 L43.9536 19.4839 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR37.479 21.394 m37.479 7.9014 L25.7944 1.1548 L14.1099 7.9014 L14.1099 21.3911 L25.7944 28.1406 L37.479 21.394 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR17.4126 19.4839 m17.4126 9.8081 L25.7944 4.9702 L34.1743 9.8081 L34.1743 19.4839 L25.7944 24.3218 L17.4126 19.4839 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR24.3691 44.0386 m24.3691 30.5459 L12.6846 23.7993 L1 30.5459 L1 44.0356 L12.6846 50.7852 L24.3691 44.0386 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR4.3027 42.1284 m4.3027 32.4526 L12.6846 27.6147 L21.0645 32.4526 L21.0645 42.1284 L12.6846 46.9663 L4.3027 42.1284 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR77.2871 44.3774 m77.2871 30.8843 L65.603 24.1382 L53.9185 30.8843 L53.9185 44.3765 L65.603 51.1226 L77.2871 44.3774 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR57.2202 42.4692 m57.2202 32.7915 L65.603 27.9536 L73.9819 32.7915 L73.9819 42.4692 L65.603 47.3081 L57.2202 42.4692 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR50.7471 44.3774 m50.7471 30.8843 L39.0649 24.1382 L27.3774 30.8843 L27.3774 44.3765 L39.0649 51.1235 L50.7471 44.3774 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR30.6821 42.4692 m30.6821 32.7915 L39.0649 27.9517 L47.4438 32.7915 L47.4438 42.4702 L39.0649 47.3091 L30.6821 42.4692 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR37.479 67.3599 m37.479 53.8682 L25.7944 47.1221 L14.1099 53.8682 L14.1099 67.3599 L25.7944 74.1074 L37.479 67.3599 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR17.4126 65.4526 m17.4126 55.7749 L25.7944 50.937 L34.1743 55.7749 L34.1772 65.4526 L25.7944 70.2905 L17.4126 65.4526 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.4235 0.5059 0.949 0.3569 k 0.4235 0.5059 0.949 0.3569 K) @(%AI6_BeginPatternLayer0 J 0 j 2 w 4 M []0 d0 XR64.0161 67.3599 m64.0161 53.8682 L52.3345 47.1221 L40.6475 53.8682 L40.6475 67.3599 L52.3345 74.1074 L64.0161 67.3599 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.2 0.4627 0.9922 0.0627 k 0.2 0.4627 0.9922 0.0627 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR43.9536 65.4526 m43.9536 55.7749 L52.3345 50.937 L60.7153 55.7749 L60.7153 65.4526 L52.3345 70.2905 L43.9536 65.4526 Ls%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Jungle Stripes)(Jungle Stripes) 37 19 73 55 [%AI3_Tile(0 O 0 R 1 0 1 0 k 1 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 18 w 4 M []0 d0 XR37 37 m73 37 lS%AI6_EndPatternLayer) &(0 O 0 R 0.3451 0 0.6863 0 k 0.3451 0 0.6863 0 K) @(%AI6_BeginPatternLayer0 J 0 j 9 w 4 M []0 d0 XR37 37 m73 37 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Mediterranean Tiles)(Mediterranean Tiles) 4.9482 11.5332 39.291 45.8818 [%AI3_Tile(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR0.1499 40.748 m10.0083 40.749 L16.9673 33.79 L16.9702 23.9297 L10.0093 16.9697 L0.1509 16.9688 L0.1499 40.748 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.57 0.75 0 0 k 0.57 0.75 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR0.1499 40.748 m10.0083 40.749 L16.9673 33.79 L16.9702 23.9297 L10.0093 16.9697 L0.1509 16.9688 L0.1499 40.748 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9712 0.1504 m10.0122 7.1094 L10.0093 16.9697 L16.9702 23.9297 L26.8296 23.9307 L33.7915 16.9727 L33.7915 7.1123 L26.8335 0.1514 L16.9712 0.1504 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.57 0.75 0 0 k 0.57 0.75 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9712 0.1504 m10.0122 7.1094 L10.0093 16.9697 L16.9702 23.9297 L26.8296 23.9307 L33.7915 16.9727 L33.7915 7.1123 L26.8335 0.1514 L16.9712 0.1504 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9673 33.79 m10.0083 40.749 L10.0054 50.6084 L16.9663 57.5693 L26.8257 57.5703 L33.7876 50.6113 L33.7876 40.752 L26.8296 33.791 L16.9673 33.79 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.57 0.75 0 0 k 0.57 0.75 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR16.9673 33.79 m10.0083 40.749 L10.0054 50.6084 L16.9663 57.5693 L26.8257 57.5703 L33.7876 50.6113 L33.7876 40.752 L26.8296 33.791 L16.9673 33.79 Ls%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR33.7915 16.9727 m26.8296 23.9307 L26.8296 33.791 L33.7876 40.752 L43.6475 40.7529 L50.6094 33.7939 L50.6094 23.9336 L43.6494 16.9736 L33.7915 16.9727 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.57 0.75 0 0 k 0.57 0.75 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.3 w 4 M []0 d0 XR33.7915 16.9727 m26.8296 23.9307 L26.8296 33.791 L33.7876 40.752 L43.6475 40.7529 L50.6094 33.7939 L50.6094 23.9336 L43.6494 16.9736 L33.7915 16.9727 Ls%AI6_EndPatternLayer) &(0 O 0 R 0.9725 0.9451 0 0 k 0.9725 0.9451 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR43.6514 7.1123 m43.6514 16.9727 L33.7915 16.9727 L33.7915 7.1123 L43.6514 7.1123 Lf26.8296 23.9307 m26.8296 33.791 L16.9702 33.791 L16.9702 23.9307 L26.8296 23.9307 Lf10.0093 7.1094 m10.0093 16.9697 L0.1538 16.9697 L0.1538 7.1094 L10.0093 7.1094 Lf43.6494 40.752 m43.6494 50.6113 L33.7876 50.6113 L33.7876 40.752 L43.6494 40.752 Lf10.0083 40.749 m10.0083 50.6084 L0.1499 50.6084 L0.1499 40.749 L10.0083 40.749 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Pyramids)(Pyramids) 1 1 19.5 19.5 [%AI3_Tile(0 O 0 R 0.1882 0.1294 0.102 0.0118 k 0.1882 0.1294 0.102 0.0118 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR1 19.5 m10.25 10.25 l19.5 19.5 l1 19.5 lf%AI6_EndPatternLayer) &(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k 0.6235 0.4863 0.4863 0.4784 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR19.5 1 m10.25 10.25 l1 1 l19.5 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k 0.3529 0.2549 0.2235 0.0667 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR1 1 m10.25 10.25 l1 19.5 l1 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k 0.4902 0.3647 0.3451 0.2196 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR19.5 19.5 m10.25 10.25 l19.5 1 l19.5 19.5 lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 k([Registration]) Pc1 1 1 1 k([Registration]) Pc([Registration]) Pc0 0 0 0 k(White) Pc0 0 0 1 k(Black) Pc0 0 0 0.8 k(80% Black) Pc0 0 0 0.6 k(60% Black) Pc0 0 0 0.4 k(40% Black) Pc0 0 0 0.2 k(20% Black) Pc0 1 1 0 k(Red M=100 Y=100) Pc0 0.75 0.75 0 k(75% Red M=75 Y=75) Pc0 0.5 0.5 0 k(50% Red M=50 Y=50) Pc0 0.25 0.25 0 k(25% Red M=25 Y=25) Pc0.8 0 1 0 k(Green C=80 Y=100) Pc0.6 0 0.75 0 k(75% Green C=60 Y=75) Pc0.4 0 0.5 0 k(50% Green C=40 Y=50) Pc0.2 0 0.25 0 k(25% Green C=20 Y=25) Pc1 0.5 0 0 k(Blue C=100 M=50) Pc0.75 0.375 0 0 k(75% Blue C=75 M=37.5) Pc0.5 0.25 0 0 k(50% Blue C=50 M=25) Pc0.25 0.125 0 0 k(25% Blue C=25 M=12.5) Pc0 0.5 1 0 k(Orange M=50 Y=100) Pc0 0.375 0.75 0 k(75% Orange M=37.5 Y=75) Pc0 0.25 0.5 0 k(50% Orange M=25 Y=50) Pc0 0.125 0.25 0 k(25% Orange M=12.5 Y=25) Pc0.5 0.9 0 0 k(Violet C=50 M=90) Pc0.375 0.675 0 0 k(75% Violet C=37.5 M=67.5) Pc0.25 0.45 0 0 k(50% Violet C=25 M=45 ) Pc0.125 0.225 0 0 k(25% Violet C=12.5 M=22.5) Pc0.8 0 0 0 k(Azure C=80) Pc0.6 0 0 0 k(75% Azure C=60) Pc0.4 0 0 0 k(50% Azure C=40) Pc0.2 0 0 0 k(25% Azure C=20) Pc0 0 1 0 k(Yellow) Pc0 0 0.75 0 k(75% Yellow) Pc0 0 0.5 0 k(50% Yellow) Pc0 0 0.25 0 k(25% Yellow) PcBb2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(White, Black) PcBb0 0 0 0 Bh2 (Black, White Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Black, White Radial) PcBb2 (Copper) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Copper) PcBb2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Rainbow) PcBb0 0 0 0 Bh2 (Violet Eye) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Violet Eye) PcBb2 (Tropical Sunset) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Tropical Sunset) Pc(Mediterranean Tiles) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Mediterranean Tiles) Pc(Pyramids) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Pyramids) Pc(Honeycomb) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Honeycomb) Pc(Jungle Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Jungle Stripes) Pc(Azure Rings) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Azure Rings) Pc(Camouflage) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Camouflage) Pc0.2 0 1 0 (Die) 0 x(Die) PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 0 79 128 255 Lb(Layer 1) Ln0 Au*u0 O0.9451 0.3412 0.1294 0.0235 k0 J 0 j 1 w 4 M []0 d0 XR-133.0015 338.8027 m-127.3223 338.8027 L-117.4717 313.7109 L-123.0425 313.7109 L-125.2017 319.4629 L-135.3745 319.4629 L-137.5679 313.7109 L-142.7803 313.7109 L-133.0015 338.8027 lf1 D-130.2339 333.7715 m-130.3052 333.7715 L-133.937 323.418 L-126.6035 323.418 L-130.2339 333.7715 lf*U*u0 D-114.5229 328.7012 m-118.0835 328.7012 L-118.0835 332.2227 L-114.5229 332.2227 L-114.5229 335.9258 L-109.707 337.4727 L-109.707 332.2227 L-105.4292 332.2227 L-105.4292 328.7012 L-109.707 328.7012 L-109.707 320.0742 L-109.707 318.4902 -109.2764 317.0195 -107.4419 317.0195 c-106.5796 317.0195 -105.7515 317.1973 -105.25 317.5234 c-105.1045 313.7109 L-106.1123 313.4258 -107.2275 313.2793 -108.6655 313.2793 c-112.4404 313.2793 -114.5229 315.6152 -114.5229 319.2832 C-114.5229 328.7012 lf*U*u-102.7329 331.2559 m-100.8633 332.1191 -98.3462 332.6563 -96.2998 332.6563 c-90.6523 332.6563 -88.3184 330.3184 -88.3184 324.8555 c-88.3184 322.4805 L-88.3184 320.6113 -88.2813 319.2109 -88.2451 317.8438 c-88.209 316.4414 -88.1367 315.1484 -88.0303 313.7109 c-92.2715 313.7109 L-92.4507 314.6816 -92.4507 315.9043 -92.4888 316.4785 c-92.5596 316.4785 L-93.6753 314.4297 -96.082 313.2793 -98.2749 313.2793 c-101.5483 313.2793 -104.7466 315.2539 -104.7466 318.7813 c-104.7466 321.5488 -103.417 323.166 -101.5825 324.0645 c-99.75 324.9609 -97.377 325.1445 -95.3633 325.1445 c-92.7031 325.1445 L-92.7031 328.127 -94.0337 329.1328 -96.8735 329.1328 c-98.9219 329.1328 -100.9727 328.3418 -102.5874 327.1191 C-102.7329 331.2559 lf1 D-97.0894 316.8027 m-95.6147 316.8027 -94.4653 317.4492 -93.7095 318.457 c-92.918 319.498 -92.7031 320.8301 -92.7031 322.2676 c-94.7876 322.2676 L-96.9468 322.2676 -100.1445 321.9082 -100.1445 319.0664 c-100.1445 317.4844 -98.8149 316.8027 -97.0894 316.8027 cf*U*u0 D-84.9014 332.2227 m-80.624 332.2227 L-80.624 328.0195 L-80.5518 328.0195 L-80.3359 329.7441 -78.3584 332.6563 -75.4824 332.6563 c-75.0176 332.6563 -74.5137 332.6563 -74.0088 332.5117 c-74.0088 327.6582 L-74.4414 327.9102 -75.3037 328.0547 -76.167 328.0547 c-80.085 328.0547 -80.085 323.166 -80.085 320.5039 c-80.085 313.7109 L-84.9014 313.7109 L-84.9014 332.2227 lf*U*u-72.355 340.2051 m-67.5386 340.2051 L-67.5386 335.6016 L-72.355 335.6016 L-72.355 340.2051 lf-72.355 332.2227 m-67.5386 332.2227 L-67.5386 313.7109 L-72.355 313.7109 L-72.355 332.2227 lf*U*u0.0353 0.5961 0.8863 0.0039 k-56.2856 338.8027 m-50.606 338.8027 L-40.7563 313.7109 L-46.3267 313.7109 L-48.4849 319.4629 L-58.6616 319.4629 L-60.8511 313.7109 L-66.064 313.7109 L-56.2856 338.8027 lf1 D-53.5171 333.7715 m-53.5903 333.7715 L-57.2222 323.418 L-49.8872 323.418 L-53.5171 333.7715 lf*U*u0 D-22.3892 332.2227 m-22.3892 315.5059 L-22.3892 310.4746 -24.4009 305.7305 -32.1665 305.7305 c-34.0688 305.7305 -36.2622 306.0156 -38.5649 306.9863 c-38.1685 311.0879 L-36.6938 310.2969 -34.2876 309.4688 -32.7759 309.4688 c-27.4536 309.4688 -27.2036 313.459 -27.2036 316.6602 c-27.2759 316.6602 L-28.1763 315.0762 -30.3306 313.7109 -33.0259 313.7109 c-38.4927 313.7109 -40.5767 318.0957 -40.5767 323.0566 c-40.5767 327.5156 -38.2759 332.6563 -32.7388 332.6563 c-30.2974 332.6563 -28.3892 331.8301 -27.061 329.707 c-26.9888 329.707 L-26.9888 332.2227 L-22.3892 332.2227 lf1 D-27.2036 323.166 m-27.2036 326.3281 -28.4263 328.918 -31.231 328.918 c-34.5005 328.918 -35.5454 325.8984 -35.5454 323.0566 c-35.5454 320.543 -34.2134 317.4492 -31.4458 317.4492 c-28.4263 317.4492 -27.2036 320.0742 -27.2036 323.166 cf*U*u0 D-4.0161 314.752 m-5.7798 313.7832 -7.7915 313.2793 -10.3813 313.2793 c-16.4927 313.2793 -20.0513 316.8027 -20.0513 322.877 c-20.0513 328.2324 -17.2095 332.6563 -11.4575 332.6563 c-4.5903 332.6563 -2.6509 327.9473 -2.6509 321.4746 c-15.4497 321.4746 L-15.2329 318.4902 -13.1489 316.8027 -10.1646 316.8027 c-7.8267 316.8027 -5.8149 317.666 -4.0161 318.6738 C-4.0161 314.752 lf1 D-7.2524 324.7832 m-7.397 327.1191 -8.4751 329.1328 -11.1724 329.1328 c-13.8677 329.1328 -15.2329 327.2656 -15.4497 324.7832 C-7.2524 324.7832 lf*UUu*u0 D0.9451 0.3412 0.1294 0.0235 k706.0049 314.6563 m709.9014 314.6563 L716.6592 297.4419 L712.8369 297.4419 L711.3555 301.3892 L704.377 301.3892 L702.873 297.4419 L699.2969 297.4419 L706.0049 314.6563 lf1 D707.9033 311.2031 m707.8545 311.2031 L705.3633 304.1011 L710.3945 304.1011 L707.9033 311.2031 lf*U*u0 D718.6816 307.7251 m716.2393 307.7251 L716.2393 310.1406 L718.6816 310.1406 L718.6816 312.6812 L721.9854 313.7422 L721.9854 310.1406 L724.9199 310.1406 L724.9199 307.7251 L721.9854 307.7251 L721.9854 301.8071 L721.9854 300.7202 722.2813 299.7114 723.5391 299.7114 c724.1309 299.7114 724.6982 299.835 725.043 300.0571 c725.1426 297.4419 L724.4512 297.2461 723.6855 297.146 722.6992 297.146 c720.1104 297.146 718.6816 298.7495 718.6816 301.2656 C718.6816 307.7251 lf*U*u726.7695 309.4775 m728.0518 310.0698 729.7783 310.4395 731.1826 310.4395 c735.0566 310.4395 736.6582 308.8359 736.6582 305.0869 c736.6582 303.4575 L736.6582 302.1753 736.6836 301.2163 736.708 300.2769 c736.7334 299.3149 736.7822 298.4292 736.8555 297.4419 c733.9463 297.4419 L733.8232 298.1079 733.8232 298.9463 733.7969 299.3403 c733.748 299.3403 L732.9824 297.936 731.3311 297.146 729.8271 297.146 c727.582 297.146 725.3877 298.5005 725.3877 300.9199 c725.3877 302.8188 726.3008 303.9282 727.5586 304.5444 c728.8154 305.1606 730.4434 305.2866 731.8252 305.2866 c733.6504 305.2866 L733.6504 307.3311 732.7373 308.0225 730.7891 308.0225 c729.3838 308.0225 727.9775 307.4785 726.8691 306.6396 C726.7695 309.4775 lf1 D730.6406 299.563 m731.6523 299.563 732.4404 300.0063 732.959 300.6978 c733.5029 301.4116 733.6504 302.3257 733.6504 303.3115 c732.2197 303.3115 L730.7383 303.3115 728.5449 303.0664 728.5449 301.1172 c728.5449 300.0317 729.457 299.563 730.6406 299.563 cf*U*u0 D739.001 310.1406 m741.9355 310.1406 L741.9355 307.2573 L741.9854 307.2573 L742.1338 308.4404 743.4902 310.4395 745.4629 310.4395 c745.7822 310.4395 746.1279 310.4395 746.4746 310.3403 c746.4746 307.0112 L746.1768 307.1836 745.5859 307.2817 744.9941 307.2817 c742.3057 307.2817 742.3057 303.9282 742.3057 302.1021 c742.3057 297.4419 L739.001 297.4419 L739.001 310.1406 lf*U*u747.6084 315.6167 m750.9121 315.6167 L750.9121 312.46 L747.6084 312.46 L747.6084 315.6167 lf747.6084 310.1406 m750.9121 310.1406 L750.9121 297.4419 L747.6084 297.4419 L747.6084 310.1406 lf*U*u0.0353 0.5961 0.8863 0.0039 k758.6318 314.6563 m762.5273 314.6563 L769.2852 297.4419 L765.4639 297.4419 L763.9834 301.3892 L757.0029 301.3892 L755.5 297.4419 L751.9238 297.4419 L758.6318 314.6563 lf1 D760.5313 311.2031 m760.4814 311.2031 L757.9893 304.1011 L763.0215 304.1011 L760.5313 311.2031 lf*U*u0 D781.8848 310.1406 m781.8848 298.6743 L781.8848 295.2217 780.5049 291.9673 775.1777 291.9673 c773.873 291.9673 772.3682 292.1641 770.7881 292.8286 c771.0605 295.6426 L772.0703 295.1011 773.7227 294.5332 774.7598 294.5332 c778.4111 294.5332 778.582 297.2705 778.582 299.4648 c778.5313 299.4648 L777.915 298.3784 776.4375 297.4419 774.5879 297.4419 c770.8379 297.4419 769.4082 300.4497 769.4082 303.853 c769.4082 306.9116 770.9854 310.4395 774.7842 310.4395 c776.46 310.4395 777.7676 309.8716 778.6807 308.4165 c778.7295 308.4165 L778.7295 310.1406 L781.8848 310.1406 lf1 D778.582 303.9282 m778.582 306.0972 777.7432 307.874 775.8184 307.874 c773.5752 307.874 772.8604 305.8022 772.8604 303.853 c772.8604 302.1299 773.7734 300.0063 775.6719 300.0063 c777.7432 300.0063 778.582 301.8071 778.582 303.9282 cf*U*u0 D794.4873 298.1572 m793.2793 297.4917 791.8994 297.146 790.1221 297.146 c785.9297 297.146 783.4893 299.563 783.4893 303.7295 c783.4893 307.4033 785.4385 310.4395 789.3828 310.4395 c794.0938 310.4395 795.4258 307.208 795.4258 302.769 c786.6455 302.769 L786.7939 300.7202 788.2236 299.563 790.2715 299.563 c791.874 299.563 793.2549 300.1548 794.4873 300.8462 C794.4873 298.1572 lf1 D792.2676 305.0386 m792.1699 306.6396 791.4297 308.0225 789.5801 308.0225 c787.7305 308.0225 786.7939 306.7402 786.6455 305.0386 C792.2676 305.0386 lf*U1 Ap0 D0.9451 0.3412 0.1294 0.0235 k795.3984 370.6611 m795.4111 344.1299 773.915 322.6118 747.3818 322.6025 c720.8545 322.5894 699.334 344.0884 699.3252 370.6182 c699.3105 397.1484 720.8105 418.6655 747.3398 418.6782 c773.8721 418.6909 795.3877 397.1914 795.3984 370.6611 cf/BBAccumRotation (0.000441) XT0 0 0 0 k788.876 370.6587 m788.8848 347.73 770.3086 329.1372 747.3799 329.1265 c724.4531 329.1157 705.8555 347.6929 705.8467 370.6211 c705.8359 393.5488 724.417 412.144 747.3438 412.1548 c770.2705 412.1646 788.8633 393.5874 788.876 370.6587 cf/BBAccumRotation (0.000441) XT0.9451 0.3412 0.1294 0.0235 k779.3838 370.6543 m779.3926 352.9678 765.0625 338.6216 747.375 338.6147 c729.6885 338.6084 715.3447 352.9395 715.3369 370.625 c715.3291 388.313 729.6602 402.6567 747.3477 402.6665 c765.0342 402.6733 779.3779 388.3433 779.3838 370.6543 cf/BBAccumRotation (0.000441) XT*u0 Ap0 0 0 0 k750.3311 376.0073 m763.8301 346.3994 L757.3623 346.3994 L747.5615 369.2944 L747.4395 369.2959 L737.6611 346.3872 L731.1348 346.3887 L744.666 376.0059 L750.3311 376.0073 lf*U/BBAccumRotation (1.571237) XT*u750.1035 394.8853 m763.6006 365.2788 L757.1338 365.2788 L747.3359 388.1753 L747.2119 388.1763 L737.4336 365.2686 L730.9053 365.2642 L744.4424 394.8853 L750.1035 394.8853 lf*U/BBAccumRotation (1.571237) XTUu*u0.9451 0.3412 0.1294 0.0235 k319.7808 323.6719 m325.4595 323.6719 L335.311 298.5801 L329.7397 298.5801 L327.5806 304.332 L317.4077 304.332 L315.2144 298.5801 L310.0024 298.5801 L319.7808 323.6719 lf1 D322.5483 318.6387 m322.4771 318.6387 L318.8452 308.2852 L326.1782 308.2852 L322.5483 318.6387 lf*U*u0 D338.2593 313.5703 m334.6987 313.5703 L334.6987 317.0918 L338.2593 317.0918 L338.2593 320.7949 L343.0747 322.3398 L343.0747 317.0918 L347.353 317.0918 L347.353 313.5703 L343.0747 313.5703 L343.0747 304.9414 L343.0747 303.3594 343.5063 301.8867 345.3403 301.8867 c346.2026 301.8867 347.0308 302.0664 347.5317 302.3906 c347.6782 298.5801 L346.6704 298.293 345.5552 298.1484 344.1167 298.1484 c340.3423 298.1484 338.2593 300.4844 338.2593 304.1523 C338.2593 313.5703 lf*U*u350.0493 316.123 m351.9185 316.9863 354.436 317.5254 356.4829 317.5254 c362.1294 317.5254 364.4634 315.1875 364.4634 309.7227 c364.4634 307.3477 L364.4634 305.4785 364.5005 304.0801 364.5376 302.7109 c364.5728 301.3105 364.645 300.0176 364.7524 298.5801 c360.5103 298.5801 L360.3315 299.5488 360.3315 300.7715 360.2935 301.3457 c360.2231 301.3457 L359.1069 299.2988 356.6997 298.1484 354.5073 298.1484 c351.2339 298.1484 348.0356 300.123 348.0356 303.6484 c348.0356 306.416 349.3657 308.0352 351.1997 308.9336 c353.0317 309.8301 355.4048 310.0137 357.4185 310.0137 c360.0786 310.0137 L360.0786 312.9961 358.7485 314.002 355.9087 314.002 c353.8599 314.002 351.8091 313.209 350.1948 311.9863 C350.0493 316.123 lf1 D355.6929 301.6699 m357.1675 301.6699 358.3169 302.3164 359.0728 303.3242 c359.8638 304.3652 360.0786 305.6973 360.0786 307.1348 c357.9946 307.1348 L355.8354 307.1348 352.6372 306.7773 352.6372 303.9355 c352.6372 302.3535 353.9673 301.6699 355.6929 301.6699 cf*U*u0 D367.8813 317.0918 m372.1587 317.0918 L372.1587 312.8867 L372.231 312.8867 L372.4458 314.6113 374.4243 317.5254 377.2993 317.5254 c377.7642 317.5254 378.2681 317.5254 378.7739 317.3809 c378.7739 312.5273 L378.3403 312.7793 377.479 312.9238 376.6157 312.9238 c372.6978 312.9238 372.6978 308.0352 372.6978 305.3711 c372.6978 298.5801 L367.8813 298.5801 L367.8813 317.0918 lf*U*u380.4282 325.0723 m385.2427 325.0723 L385.2427 320.4707 L380.4282 320.4707 L380.4282 325.0723 lf380.4282 317.0918 m385.2427 317.0918 L385.2427 298.5801 L380.4282 298.5801 L380.4282 317.0918 lf*U*u0.0353 0.5961 0.8863 0.0039 k396.4966 323.6719 m402.1763 323.6719 L412.0259 298.5801 L406.4556 298.5801 L404.2974 304.332 L394.1206 304.332 L391.9302 298.5801 L386.7173 298.5801 L396.4966 323.6719 lf1 D399.2651 318.6387 m399.1919 318.6387 L395.5601 308.2852 L402.895 308.2852 L399.2651 318.6387 lf*U*u0 D430.3931 317.0918 m430.3931 300.375 L430.3931 295.3418 428.3813 290.5977 420.6157 290.5977 c418.7134 290.5977 416.52 290.8848 414.2173 291.8555 c414.6138 295.9551 L416.0884 295.166 418.4946 294.3379 420.0063 294.3379 c425.3286 294.3379 425.5786 298.3281 425.5786 301.5273 c425.5063 301.5273 L424.606 299.9434 422.4517 298.5801 419.7563 298.5801 c414.2896 298.5801 412.2056 302.9648 412.2056 307.9258 c412.2056 312.3848 414.5063 317.5254 420.0435 317.5254 c422.4849 317.5254 424.3931 316.6973 425.7212 314.5762 c425.7935 314.5762 L425.7935 317.0918 L430.3931 317.0918 lf1 D425.5786 308.0352 m425.5786 311.1973 424.356 313.7852 421.5513 313.7852 c418.2817 313.7852 417.2368 310.7656 417.2368 307.9258 c417.2368 305.4121 418.5688 302.3164 421.3364 302.3164 c424.356 302.3164 425.5786 304.9414 425.5786 308.0352 cf*U*u0 D448.7661 299.6211 m447.0024 298.6523 444.9907 298.1484 442.4009 298.1484 c436.2896 298.1484 432.731 301.6699 432.731 307.7441 c432.731 313.1016 435.5728 317.5254 441.3247 317.5254 c448.1919 317.5254 450.1313 312.8145 450.1313 306.3438 c437.3325 306.3438 L437.5493 303.3594 439.6333 301.6699 442.6177 301.6699 c444.9556 301.6699 446.9673 302.5332 448.7661 303.541 C448.7661 299.6211 lf1 D445.5298 309.6523 m445.3853 311.9863 444.3071 314.002 441.6099 314.002 c438.9146 314.002 437.5493 312.1328 437.3325 309.6523 C445.5298 309.6523 lf*UUu1 Ap0 D0.9451 0.3412 0.1294 0.0235 k300.5161 307.8486 m300.5239 290.4688 286.4429 276.374 269.063 276.3682 c251.686 276.3604 237.5894 290.4424 237.5835 307.8203 c237.5747 325.1992 251.6577 339.2939 269.0356 339.3018 c286.4155 339.3096 300.5083 325.2266 300.5161 307.8486 cf/BBAccumRotation (0.000441) XT0 0 0 0 k296.2427 307.8467 m296.2495 292.8271 284.0806 280.6484 269.062 280.6416 c254.0435 280.6348 241.8618 292.8037 241.856 307.8223 c241.8491 322.8418 254.02 335.0215 269.0376 335.0283 c284.0562 335.0352 296.2349 322.8662 296.2427 307.8467 cf/BBAccumRotation (0.000441) XT0.9451 0.3412 0.1294 0.0235 k290.0269 307.8438 m290.0308 296.2588 280.645 286.8604 269.0581 286.8574 c257.4731 286.8516 248.0776 296.2393 248.0728 307.8242 c248.0669 319.4111 257.4546 328.8066 269.0405 328.8135 c280.6265 328.8184 290.021 319.4307 290.0269 307.8438 cf/BBAccumRotation (0.000441) XT*u0 Ap0 0 0 0 k270.9946 311.3506 m279.8374 291.9561 L275.6001 291.9561 L269.1812 306.9531 L269.1001 306.9541 L262.6958 291.9482 L258.4204 291.9492 L267.2837 311.3486 L270.9946 311.3506 lf*U/BBAccumRotation (1.571237) XT*u270.8462 323.7168 m279.687 304.3232 L275.4507 304.3232 L269.0327 319.3213 L268.9517 319.3213 L262.5464 304.3164 L258.271 304.3125 L267.1372 323.7158 L270.8462 323.7168 lf*U/BBAccumRotation (1.571237) XTUu*u0 0 0 1 k-133.002 392.752 m-127.3223 392.752 L-117.4717 367.6602 L-123.043 367.6602 L-125.2012 373.4121 L-135.375 373.4121 L-137.5684 367.6602 L-142.7803 367.6602 L-133.002 392.752 lf1 D-130.2344 387.7207 m-130.3047 387.7207 L-133.9375 377.3672 L-126.6035 377.3672 L-130.2344 387.7207 lf*U*u0 D-114.5234 382.6504 m-118.084 382.6504 L-118.084 386.1719 L-114.5234 386.1719 L-114.5234 389.875 L-109.707 391.4219 L-109.707 386.1719 L-105.4297 386.1719 L-105.4297 382.6504 L-109.707 382.6504 L-109.707 374.0234 L-109.707 372.4395 -109.2764 370.9688 -107.4414 370.9688 c-106.5801 370.9688 -105.752 371.1465 -105.25 371.4727 c-105.1045 367.6602 L-106.1123 367.375 -107.2275 367.2285 -108.666 367.2285 c-112.4404 367.2285 -114.5234 369.5645 -114.5234 373.2324 C-114.5234 382.6504 lf*U*u-102.7324 385.2051 m-100.8633 386.0684 -98.3457 386.6055 -96.2998 386.6055 c-90.6523 386.6055 -88.3184 384.2676 -88.3184 378.8047 c-88.3184 376.4297 L-88.3184 374.5605 -88.2813 373.1602 -88.2451 371.793 c-88.209 370.3906 -88.1367 369.0977 -88.0303 367.6602 c-92.2715 367.6602 L-92.4512 368.6309 -92.4512 369.8535 -92.4883 370.4277 c-92.5596 370.4277 L-93.6758 368.3789 -96.082 367.2285 -98.2754 367.2285 c-101.5488 367.2285 -104.7461 369.2031 -104.7461 372.7305 c-104.7461 375.498 -103.417 377.1152 -101.582 378.0137 c-99.75 378.9102 -97.377 379.0938 -95.3633 379.0938 c-92.7031 379.0938 L-92.7031 382.0762 -94.0332 383.082 -96.873 383.082 c-98.9219 383.082 -100.9727 382.291 -102.5879 381.0684 C-102.7324 385.2051 lf1 D-97.0898 370.752 m-95.6152 370.752 -94.4648 371.3984 -93.709 372.4063 c-92.918 373.4473 -92.7031 374.7793 -92.7031 376.2168 c-94.7871 376.2168 L-96.9473 376.2168 -100.1445 375.8574 -100.1445 373.0156 c-100.1445 371.4336 -98.8145 370.752 -97.0898 370.752 cf*U*u0 D-84.9014 386.1719 m-80.624 386.1719 L-80.624 381.9688 L-80.5518 381.9688 L-80.3359 383.6934 -78.3584 386.6055 -75.4824 386.6055 c-75.0176 386.6055 -74.5137 386.6055 -74.0088 386.4609 c-74.0088 381.6074 L-74.4414 381.8594 -75.3037 382.0039 -76.167 382.0039 c-80.085 382.0039 -80.085 377.1152 -80.085 374.4531 c-80.085 367.6602 L-84.9014 367.6602 L-84.9014 386.1719 lf*U*u-72.3545 394.1543 m-67.5381 394.1543 L-67.5381 389.5508 L-72.3545 389.5508 L-72.3545 394.1543 lf-72.3545 386.1719 m-67.5381 386.1719 L-67.5381 367.6602 L-72.3545 367.6602 L-72.3545 386.1719 lf*U*u-56.2861 392.752 m-50.6064 392.752 L-40.7568 367.6602 L-46.3271 367.6602 L-48.4854 373.4121 L-58.6611 373.4121 L-60.8506 367.6602 L-66.0635 367.6602 L-56.2861 392.752 lf1 D-53.5166 387.7207 m-53.5908 387.7207 L-57.2217 377.3672 L-49.8877 377.3672 L-53.5166 387.7207 lf*U*u0 D-22.3896 386.1719 m-22.3896 369.4551 L-22.3896 364.4238 -24.4014 359.6797 -32.167 359.6797 c-34.0693 359.6797 -36.2627 359.9648 -38.5654 360.9355 c-38.1689 365.0371 L-36.6943 364.2461 -34.2881 363.418 -32.7764 363.418 c-27.4541 363.418 -27.2041 367.4082 -27.2041 370.6094 c-27.2764 370.6094 L-28.1768 369.0254 -30.3311 367.6602 -33.0264 367.6602 c-38.4932 367.6602 -40.5771 372.0449 -40.5771 377.0059 c-40.5771 381.4648 -38.2764 386.6055 -32.7393 386.6055 c-30.2979 386.6055 -28.3896 385.7793 -27.0615 383.6563 c-26.9893 383.6563 L-26.9893 386.1719 L-22.3896 386.1719 lf1 D-27.2041 377.1152 m-27.2041 380.2773 -28.4268 382.8672 -31.2314 382.8672 c-34.501 382.8672 -35.5459 379.8477 -35.5459 377.0059 c-35.5459 374.4922 -34.2139 371.3984 -31.4463 371.3984 c-28.4268 371.3984 -27.2041 374.0234 -27.2041 377.1152 cf*U*u0 D-4.0166 368.7012 m-5.7803 367.7324 -7.792 367.2285 -10.3818 367.2285 c-16.4932 367.2285 -20.0518 370.752 -20.0518 376.8262 c-20.0518 382.1816 -17.21 386.6055 -11.458 386.6055 c-4.5908 386.6055 -2.6514 381.8965 -2.6514 375.4238 c-15.4502 375.4238 L-15.2334 372.4395 -13.1494 370.752 -10.165 370.752 c-7.8271 370.752 -5.8154 371.6152 -4.0166 372.623 C-4.0166 368.7012 lf1 D-7.2529 378.7324 m-7.3975 381.0684 -8.4756 383.082 -11.1729 383.082 c-13.8682 383.082 -15.2334 381.2148 -15.4502 378.7324 C-7.2529 378.7324 lf*UUu*u0 D836.0869 314.6567 m839.9829 314.6567 L846.7402 297.4424 L842.9185 297.4424 L841.4375 301.3896 L834.459 301.3896 L832.9541 297.4424 L829.3789 297.4424 L836.0869 314.6567 lf1 D837.9854 311.2041 m837.9365 311.2041 L835.4448 304.1016 L840.4761 304.1016 L837.9854 311.2041 lf*U*u0 D848.7627 307.7256 m846.3203 307.7256 L846.3203 310.1416 L848.7627 310.1416 L848.7627 312.6816 L852.0669 313.7432 L852.0669 310.1416 L855.001 310.1416 L855.001 307.7256 L852.0669 307.7256 L852.0669 301.8076 L852.0669 300.7212 852.3623 299.7124 853.6211 299.7124 c854.2119 299.7124 854.7803 299.8354 855.1245 300.0581 c855.2241 297.4424 L854.5327 297.2471 853.7671 297.1465 852.7813 297.1465 c850.1919 297.1465 848.7627 298.75 848.7627 301.2666 C848.7627 307.7256 lf*U*u856.8511 309.478 m858.1333 310.0703 859.8599 310.4404 861.2642 310.4404 c865.1382 310.4404 866.7393 308.8364 866.7393 305.0874 c866.7393 303.4585 L866.7393 302.1763 866.7651 301.2168 866.7896 300.2778 c866.8145 299.3154 866.8643 298.4302 866.937 297.4424 c864.0278 297.4424 L863.9043 298.1084 863.9043 298.9473 863.8784 299.3413 c863.8301 299.3413 L863.0645 297.937 861.4131 297.1465 859.9092 297.1465 c857.6636 297.1465 855.4692 298.501 855.4692 300.9209 c855.4692 302.8193 856.3818 303.9287 857.6401 304.5449 c858.8975 305.1611 860.5254 305.2871 861.9067 305.2871 c863.7314 305.2871 L863.7314 307.332 862.8184 308.0229 860.8701 308.0229 c859.4653 308.0229 858.0586 307.479 856.9507 306.6406 C856.8511 309.478 lf1 D860.7222 299.5635 m861.7339 299.5635 862.5225 300.0068 863.041 300.6982 c863.584 301.4126 863.7314 302.3262 863.7314 303.3125 c862.3013 303.3125 L860.8203 303.3125 858.627 303.0669 858.627 301.1177 c858.627 300.0322 859.5386 299.5635 860.7222 299.5635 cf*U*u0 D869.083 310.1416 m872.0171 310.1416 L872.0171 307.2583 L872.0669 307.2583 L872.2153 308.4414 873.5718 310.4404 875.5444 310.4404 c875.8638 310.4404 876.2095 310.4404 876.5557 310.3413 c876.5557 307.0117 L876.2583 307.1846 875.6675 307.2822 875.0752 307.2822 c872.3877 307.2822 872.3877 303.9287 872.3877 302.1025 c872.3877 297.4424 L869.083 297.4424 L869.083 310.1416 lf*U*u877.6899 315.6172 m880.9941 315.6172 L880.9941 312.4609 L877.6899 312.4609 L877.6899 315.6172 lf877.6899 310.1416 m880.9941 310.1416 L880.9941 297.4424 L877.6899 297.4424 L877.6899 310.1416 lf*U*u888.7134 314.6567 m892.6084 314.6567 L899.3667 297.4424 L895.5454 297.4424 L894.0649 301.3896 L887.0845 301.3896 L885.5811 297.4424 L882.0054 297.4424 L888.7134 314.6567 lf1 D890.6118 311.2041 m890.5625 311.2041 L888.0703 304.1016 L893.1025 304.1016 L890.6118 311.2041 lf*U*u0 D911.9663 310.1416 m911.9663 298.6753 L911.9663 295.2222 910.5864 291.9678 905.2593 291.9678 c903.9541 291.9678 902.4497 292.165 900.8696 292.8296 c901.1416 295.6431 L902.1519 295.1021 903.8042 294.5337 904.8413 294.5337 c908.4922 294.5337 908.6636 297.271 908.6636 299.4658 c908.6128 299.4658 L907.9966 298.3789 906.5186 297.4424 904.6694 297.4424 c900.9194 297.4424 899.4897 300.4507 899.4897 303.8535 c899.4897 306.9126 901.0669 310.4404 904.8652 310.4404 c906.5415 310.4404 907.8491 309.8721 908.7612 308.417 c908.811 308.417 L908.811 310.1416 L911.9663 310.1416 lf1 D908.6636 303.9287 m908.6636 306.0977 907.8247 307.8745 905.8994 307.8745 c903.6567 307.8745 902.9409 305.8032 902.9409 303.8535 c902.9409 302.1304 903.855 300.0068 905.7534 300.0068 c907.8247 300.0068 908.6636 301.8076 908.6636 303.9287 cf*U*u0 D924.5688 298.1582 m923.3604 297.4922 921.98 297.1465 920.2036 297.1465 c916.0112 297.1465 913.5703 299.5635 913.5703 303.7305 c913.5703 307.4043 915.5195 310.4404 919.4639 310.4404 c924.1748 310.4404 925.5068 307.2085 925.5068 302.7695 c916.7266 302.7695 L916.8755 300.7212 918.3052 299.5635 920.3525 299.5635 c921.9546 299.5635 923.3359 300.1558 924.5688 300.8472 C924.5688 298.1582 lf1 D922.3486 305.0396 m922.251 306.6406 921.5112 308.0229 919.6611 308.0229 c917.812 308.0229 916.8755 306.7407 916.7266 305.0396 C922.3486 305.0396 lf*U1 Ap0 D925.48 370.6606 m925.4932 344.1304 903.9971 322.6128 877.4634 322.6035 c850.936 322.5898 829.4155 344.0889 829.4063 370.6182 c829.3921 397.1479 850.8926 418.665 877.4219 418.6777 c903.9541 418.6904 925.4692 397.1909 925.48 370.6606 cf/BBAccumRotation (0.000441) XT0 0 0 0 k918.9575 370.6582 m918.9668 347.73 900.3901 329.1377 877.4624 329.127 c854.5342 329.1162 835.9375 347.6929 835.9287 370.6206 c835.918 393.5483 854.4985 412.1436 877.4248 412.1543 c900.3525 412.1646 918.9453 393.5869 918.9575 370.6582 cf/BBAccumRotation (0.000441) XT0 0 0 1 k909.4663 370.6543 m909.4741 352.9673 895.1445 338.6226 877.457 338.6157 c859.7695 338.6089 845.4268 352.939 845.4185 370.6245 c845.4106 388.3125 859.7417 402.6563 877.4287 402.666 c895.1167 402.6729 909.4595 388.3428 909.4663 370.6543 cf/BBAccumRotation (0.000441) XT*u0 Ap0 0 0 0 k880.4116 376.0068 m893.9121 346.3999 L887.4448 346.3999 L877.6436 369.2944 L877.521 369.2954 L867.7432 346.3882 L861.2168 346.3892 L874.7476 376.0054 L880.4116 376.0068 lf*U/BBAccumRotation (1.571237) XT*u880.1855 394.8853 m893.6831 365.2788 L887.2153 365.2788 L877.418 388.1753 L877.2935 388.1758 L867.5151 365.2681 L860.9878 365.2642 L874.5239 394.8853 L880.1855 394.8853 lf*U/BBAccumRotation (1.571237) XTUu*u0 0 0 1 k319.7808 399.1704 m325.4604 399.1704 L335.312 374.0786 L329.7397 374.0786 L327.5815 379.8306 L317.4077 379.8306 L315.2144 374.0786 L310.0034 374.0786 L319.7808 399.1704 lf1 D322.5483 394.1372 m322.478 394.1372 L318.8452 383.7837 L326.1792 383.7837 L322.5483 394.1372 lf*U*u0 D338.2593 389.0688 m334.6987 389.0688 L334.6987 392.5903 L338.2593 392.5903 L338.2593 396.2935 L343.0757 397.8384 L343.0757 392.5903 L347.354 392.5903 L347.354 389.0688 L343.0757 389.0688 L343.0757 380.4399 L343.0757 378.8579 343.5073 377.3853 345.3403 377.3853 c346.2036 377.3853 347.0317 377.5649 347.5317 377.8892 c347.6782 374.0786 L346.6704 373.7915 345.5552 373.647 344.1177 373.647 c340.3433 373.647 338.2593 375.9829 338.2593 379.6509 C338.2593 389.0688 lf*U*u350.0493 391.6216 m351.9185 392.4849 354.436 393.0239 356.4829 393.0239 c362.1294 393.0239 364.4634 390.686 364.4634 385.2212 c364.4634 382.8462 L364.4634 380.9771 364.5005 379.5786 364.5376 378.2095 c364.5728 376.8091 364.645 375.5161 364.7524 374.0786 c360.5103 374.0786 L360.3325 375.0474 360.3325 376.27 360.2935 376.8442 c360.2231 376.8442 L359.1079 374.7974 356.6997 373.647 354.5083 373.647 c351.2349 373.647 348.0356 375.6216 348.0356 379.147 c348.0356 381.9146 349.3657 383.5337 351.1997 384.4321 c353.0317 385.3286 355.4048 385.5122 357.4185 385.5122 c360.0786 385.5122 L360.0786 388.4946 358.7485 389.5005 355.9087 389.5005 c353.8599 389.5005 351.8091 388.7075 350.1958 387.4849 C350.0493 391.6216 lf1 D355.6938 377.1685 m357.1685 377.1685 358.3169 377.8149 359.0728 378.8228 c359.8638 379.8638 360.0786 381.1958 360.0786 382.6333 c357.9946 382.6333 L355.8364 382.6333 352.6372 382.2759 352.6372 379.4341 c352.6372 377.8521 353.9673 377.1685 355.6938 377.1685 cf*U*u0 D367.8813 392.5903 m372.1587 392.5903 L372.1587 388.3853 L372.231 388.3853 L372.4458 390.1099 374.4243 393.0239 377.2993 393.0239 c377.7642 393.0239 378.2681 393.0239 378.7739 392.8794 c378.7739 388.0259 L378.3403 388.2778 377.479 388.4224 376.6157 388.4224 c372.6978 388.4224 372.6978 383.5337 372.6978 380.8696 c372.6978 374.0786 L367.8813 374.0786 L367.8813 392.5903 lf*U*u380.4282 400.5708 m385.2427 400.5708 L385.2427 395.9692 L380.4282 395.9692 L380.4282 400.5708 lf380.4282 392.5903 m385.2427 392.5903 L385.2427 374.0786 L380.4282 374.0786 L380.4282 392.5903 lf*U*u396.4966 399.1704 m402.1763 399.1704 L412.0259 374.0786 L406.4556 374.0786 L404.2974 379.8306 L394.1216 379.8306 L391.9302 374.0786 L386.7173 374.0786 L396.4966 399.1704 lf1 D399.2661 394.1372 m399.1919 394.1372 L395.561 383.7837 L402.895 383.7837 L399.2661 394.1372 lf*U*u0 D430.3931 392.5903 m430.3931 375.8735 L430.3931 370.8403 428.3813 366.0962 420.6157 366.0962 c418.7134 366.0962 416.52 366.3833 414.2173 367.354 c414.6138 371.4536 L416.0884 370.6646 418.4946 369.8364 420.0063 369.8364 c425.3286 369.8364 425.5786 373.8267 425.5786 377.0259 c425.5063 377.0259 L424.606 375.4419 422.4517 374.0786 419.7563 374.0786 c414.2896 374.0786 412.2056 378.4634 412.2056 383.4243 c412.2056 387.8833 414.5063 393.0239 420.0435 393.0239 c422.4849 393.0239 424.3931 392.1958 425.7212 390.0747 c425.7935 390.0747 L425.7935 392.5903 L430.3931 392.5903 lf1 D425.5786 383.5337 m425.5786 386.6958 424.356 389.2837 421.5513 389.2837 c418.2817 389.2837 417.2368 386.2642 417.2368 383.4243 c417.2368 380.9106 418.5688 377.8149 421.3364 377.8149 c424.356 377.8149 425.5786 380.4399 425.5786 383.5337 cf*U*u0 D448.7661 375.1196 m447.0024 374.1509 444.9907 373.647 442.4009 373.647 c436.2896 373.647 432.731 377.1685 432.731 383.2427 c432.731 388.6001 435.5728 393.0239 441.3247 393.0239 c448.1919 393.0239 450.1313 388.313 450.1313 381.8423 c437.3325 381.8423 L437.5493 378.8579 439.6333 377.1685 442.6177 377.1685 c444.9556 377.1685 446.9673 378.0317 448.7661 379.0396 C448.7661 375.1196 lf1 D445.5298 385.1509 m445.3853 387.4849 444.3071 389.5005 441.6099 389.5005 c438.9146 389.5005 437.5493 387.6313 437.3325 385.1509 C445.5298 385.1509 lf*UUu1 Ap0 D300.5171 383.3472 m300.5249 365.9673 286.4429 351.8726 269.063 351.8667 c251.687 351.8589 237.5894 365.9409 237.5835 383.3188 c237.5747 400.6973 251.6577 414.792 269.0366 414.7998 c286.4155 414.8081 300.5093 400.7251 300.5171 383.3472 cf/BBAccumRotation (0.000441) XT0 0 0 0 k296.2427 383.3452 m296.2495 368.3257 284.0815 356.147 269.062 356.1396 c254.0435 356.1333 241.8618 368.3018 241.856 383.3208 c241.8491 398.3398 254.02 410.5195 269.0386 410.5269 c284.0562 410.5337 296.2358 398.3643 296.2427 383.3452 cf/BBAccumRotation (0.000441) XT0 0 0 1 k290.0269 383.3423 m290.0308 371.7568 280.645 362.3589 269.0581 362.3555 c257.4731 362.3501 248.0776 371.7378 248.0728 383.3228 c248.0679 394.9092 257.4546 404.3052 269.0405 404.3115 c280.6265 404.3164 290.021 394.9292 290.0269 383.3423 cf/BBAccumRotation (0.000441) XT*u0 Ap0 0 0 0 k270.9946 386.8491 m279.8374 367.4546 L275.6011 367.4546 L269.1812 382.4517 L269.1011 382.4526 L262.6958 367.4468 L258.4214 367.4478 L267.2847 386.8472 L270.9946 386.8491 lf*U/BBAccumRotation (1.571237) XT*u270.8462 399.2153 m279.687 379.8218 L275.4507 379.8218 L269.0327 394.8198 L268.9526 394.8198 L262.5464 379.8145 L258.271 379.811 L267.1382 399.2144 L270.8462 399.2153 lf*U/BBAccumRotation (1.571237) XTUuu*u1 O1 0.5 0 0 k-306.5261 336.4414 m-305.3242 336.4414 L-303.5342 331.3633 L-304.6836 331.3633 L-305.0208 332.418 L-306.8789 332.418 L-307.2266 331.3633 L-308.3367 331.3633 l-306.5261 336.4414 Lf1 D-306.5933 333.2852 m-305.2983 333.2852 L-305.936 335.2803 l-306.5933 333.2852 Lf*U*u0 D-303.3459 334.3867 m-303.3459 335.082 L-302.8225 335.082 L-302.8225 336.1289 L-301.8381 336.1289 L-301.8381 335.082 L-301.2288 335.082 L-301.2288 334.3867 L-301.8381 334.3867 L-301.8381 332.3965 L-301.8381 332.2422 -301.8188 332.1455 -301.7798 332.1079 c-301.7407 332.0698 -301.6213 332.0508 -301.4216 332.0508 c-301.3918 332.0508 -301.3604 332.0518 -301.3269 332.0547 c-301.2937 332.0571 -301.261 332.061 -301.2288 332.0664 c-301.2288 331.332 L-301.6975 331.3086 L-302.1653 331.2925 -302.4846 331.373 -302.656 331.5503 c-302.7671 331.6631 -302.8225 331.8364 -302.8225 332.0713 c-302.8225 334.3867 l-303.3459 334.3867 Lf*U*u-299.1304 333.6504 m-298.9485 333.6738 -298.8184 333.7021 -298.74 333.7373 c-298.5994 333.7969 -298.5291 333.8906 -298.5291 334.0176 c-298.5291 334.1719 -298.583 334.2788 -298.6909 334.3374 c-298.7988 334.3965 -298.957 334.4258 -299.1658 334.4258 c-299.4001 334.4258 -299.5659 334.3682 -299.6633 334.2539 c-299.7329 334.1689 -299.7793 334.0547 -299.8025 333.9102 c-300.7478 333.9102 L-300.7271 334.2363 -300.635 334.5044 -300.4714 334.7144 c-300.2112 335.043 -299.7642 335.207 -299.1306 335.207 c-298.7183 335.207 -298.3521 335.1265 -298.032 334.9658 c-297.7117 334.8052 -297.5515 334.4985 -297.5515 334.0454 c-297.5515 332.3213 L-297.5515 332.2017 -297.5493 332.0566 -297.5447 331.8867 c-297.5378 331.7583 -297.5183 331.6709 -297.4863 331.625 c-297.4541 331.5791 -297.406 331.5415 -297.3416 331.5117 c-297.3416 331.3633 L-298.4084 331.3633 L-298.4382 331.4375 -298.4587 331.5078 -298.4702 331.5732 c-298.4817 331.6387 -298.491 331.7134 -298.4978 331.7969 c-298.6338 331.6494 -298.7905 331.5244 -298.9678 331.4209 c-299.1799 331.2993 -299.4194 331.2383 -299.6865 331.2383 c-300.0276 331.2383 -300.3093 331.3359 -300.5315 331.5308 c-300.7539 331.7256 -300.865 332.002 -300.865 332.3594 c-300.865 332.8232 -300.6865 333.1592 -300.3293 333.3667 c-300.1335 333.4795 -299.8457 333.5605 -299.4656 333.6089 c-299.1304 333.6504 Lf1 D-298.5327 333.1904 m-298.5952 333.1509 -298.6584 333.1191 -298.7222 333.0947 c-298.7861 333.0703 -298.8735 333.0479 -298.9849 333.0273 c-299.2075 332.9854 L-299.4163 332.9482 -299.5652 332.9028 -299.6543 332.8496 c-299.8052 332.7593 -299.8806 332.6191 -299.8806 332.4292 c-299.8806 332.2598 -299.834 332.1377 -299.7405 332.062 c-299.647 331.9868 -299.533 331.9492 -299.3989 331.9492 c-299.1865 331.9492 -298.9907 332.0117 -298.8115 332.1367 c-298.6326 332.2622 -298.5396 332.4902 -298.5327 332.8218 c-298.5327 333.1904 Lf*U*u0 D-294.6138 335.2051 m-294.6011 335.2036 -294.573 335.2017 -294.5293 335.1992 c-294.5293 334.207 L-294.5911 334.21 -294.646 334.2119 -294.6941 334.2134 c-294.7422 334.2144 -294.781 334.2148 -294.8108 334.2148 c-295.2043 334.2148 -295.4685 334.0859 -295.6035 333.8286 c-295.6792 333.6836 -295.7168 333.4609 -295.7168 333.1597 c-295.7168 331.3633 L-296.7012 331.3633 L-296.7012 335.1211 L-295.7715 335.1211 L-295.7715 334.4663 L-295.6201 334.7158 -295.4883 334.8857 -295.3757 334.9775 c-295.1924 335.1304 -294.9539 335.207 -294.6602 335.207 c-294.6418 335.207 -294.6265 335.2061 -294.6138 335.2051 cf*U*u-292.9417 335.5664 m-293.9338 335.5664 L-293.9338 336.4727 L-292.9417 336.4727 l-292.9417 335.5664 Lf-293.9338 335.1211 m-292.9417 335.1211 L-292.9417 331.3633 L-293.9338 331.3633 l-293.9338 335.1211 Lf*U*u-290.4609 336.4414 m-289.259 336.4414 L-287.469 331.3633 L-288.6184 331.3633 L-288.9556 332.418 L-290.814 332.418 L-291.1614 331.3633 L-292.2715 331.3633 l-290.4609 336.4414 Lf1 D-290.5281 333.2852 m-289.2332 333.2852 L-289.8708 335.2803 l-290.5281 333.2852 Lf*U*u0 D-285.0442 335.1211 m-284.8066 335.022 -284.6147 334.8408 -284.4685 334.5767 c-284.4685 335.1211 L-283.4998 335.1211 L-283.4998 331.5605 L-283.4998 331.0762 -283.5813 330.7114 -283.7446 330.4658 c-284.0251 330.043 -284.5632 329.832 -285.3589 329.832 c-285.8396 329.832 -286.2317 329.9263 -286.5352 330.1143 c-286.8386 330.3022 -287.0066 330.583 -287.0388 330.957 c-285.9685 330.957 L-285.9412 330.8418 -285.8967 330.7593 -285.835 330.709 c-285.7302 330.6191 -285.5535 330.5742 -285.3049 330.5742 c-284.9539 330.5742 -284.719 330.6919 -284.6003 330.9268 c-284.5229 331.0771 -284.4841 331.3301 -284.4841 331.686 c-284.4841 331.9258 L-284.5779 331.7666 -284.6785 331.6479 -284.7859 331.5684 c-284.9802 331.4214 -285.2329 331.3477 -285.5437 331.3477 c-286.0239 331.3477 -286.4075 331.5166 -286.6943 331.8555 c-286.9812 332.1938 -287.1248 332.6523 -287.1248 333.231 c-287.1248 333.7886 -286.9866 334.2573 -286.71 334.6372 c-286.4336 335.0171 -286.0417 335.207 -285.5344 335.207 c-285.3472 335.207 -285.1836 335.1782 -285.0442 335.1211 cf1 D-284.7188 332.4209 m-284.5623 332.5947 -284.4841 332.8721 -284.4841 333.252 c-284.4841 333.6094 -284.5583 333.8809 -284.7068 334.0679 c-284.8552 334.2544 -285.0542 334.3477 -285.3035 334.3477 c-285.6433 334.3477 -285.8779 334.1851 -286.0071 333.8604 c-286.0752 333.6875 -286.1091 333.4746 -286.1091 333.2212 c-286.1091 333.002 -286.0728 332.8076 -286.0002 332.6372 c-285.8689 332.3193 -285.6333 332.1602 -285.2932 332.1602 c-285.0667 332.1602 -284.875 332.2471 -284.7188 332.4209 cf*U*u0 D-280.1458 335.0469 m-279.8848 334.9297 -279.6692 334.7451 -279.499 334.4922 c-279.3457 334.2695 -279.2463 334.0107 -279.2007 333.7168 c-279.1743 333.5444 -279.1636 333.2964 -279.1685 332.9727 c-281.8955 332.9727 L-281.8804 332.5942 -281.7493 332.3291 -281.5022 332.1768 c-281.3521 332.0825 -281.1714 332.0352 -280.96 332.0352 c-280.7358 332.0352 -280.554 332.0923 -280.4138 332.207 c-280.3374 332.2686 -280.27 332.3545 -280.2114 332.4648 c-279.2158 332.4648 L-279.2422 332.2422 -279.3633 332.0156 -279.5791 331.7861 c-279.9148 331.4209 -280.3845 331.2383 -280.9885 331.2383 c-281.4873 331.2383 -281.9272 331.3926 -282.3083 331.7007 c-282.6895 332.0088 -282.8799 332.5098 -282.8799 333.2046 c-282.8799 333.8555 -282.708 334.3545 -282.3643 334.7017 c-282.0205 335.0488 -281.5745 335.2227 -281.0259 335.2227 c-280.7002 335.2227 -280.4067 335.1641 -280.1458 335.0469 cf1 D-281.6167 334.1997 m-281.7563 334.0591 -281.844 333.8691 -281.8799 333.6289 c-280.1768 333.6289 L-280.1948 333.8848 -280.2825 334.0791 -280.4402 334.2114 c-280.5979 334.3438 -280.7932 334.4102 -281.0264 334.4102 c-281.2803 334.4102 -281.4771 334.3398 -281.6167 334.1997 cf*U*u0 D-276.9993 333.793 m-275.0852 333.793 L-275.0852 332.8633 L-276.9993 332.8633 l-276.9993 333.793 Lf*U*u-269.5693 335.7217 m-269.3127 335.2725 -269.1843 334.6353 -269.1843 333.8091 c-269.1843 332.9829 -269.3127 332.3467 -269.5693 331.9004 c-269.8259 331.4536 -270.2732 331.2305 -270.9109 331.2305 c-271.5486 331.2305 -271.9958 331.4536 -272.2524 331.9004 c-272.509 332.3467 -272.6375 332.9829 -272.6375 333.8091 c-272.6375 334.6353 -272.509 335.2725 -272.2524 335.7217 c-271.9958 336.1699 -271.5486 336.3945 -270.9109 336.3945 c-270.2732 336.3945 -269.8259 336.1699 -269.5693 335.7217 cf1 D-271.4954 332.4873 m-271.4006 332.1807 -271.2068 332.0273 -270.9133 332.0273 c-270.6201 332.0273 -270.428 332.1807 -270.3367 332.4873 c-270.2456 332.7935 -270.2 333.2358 -270.2 333.8145 c-270.2 334.4199 -270.2456 334.8691 -270.3367 335.1602 c-270.428 335.4521 -270.6201 335.5977 -270.9133 335.5977 c-271.2068 335.5977 -271.4006 335.4521 -271.4954 335.1602 c-271.5901 334.8691 -271.6375 334.4199 -271.6375 333.8145 c-271.6375 333.2358 -271.5901 332.7935 -271.4954 332.4873 cf*U*u0 D-268.4424 334.8086 m-268.4424 335.4805 L-268.1335 335.4941 -267.9172 335.5146 -267.7935 335.542 c-267.5967 335.585 -267.4365 335.6719 -267.313 335.8018 c-267.2283 335.8906 -267.1643 336.0088 -267.1206 336.1572 c-267.0955 336.2461 -267.083 336.312 -267.083 336.3555 c-266.2627 336.3555 L-266.2627 331.3633 L-267.2705 331.3633 L-267.2705 334.8086 l-268.4424 334.8086 Lf*U*u-264.5833 332.3945 m-263.5364 332.3945 L-263.5364 331.3633 L-264.5833 331.3633 l-264.5833 332.3945 Lf*U*u-262.6064 332.3467 m-262.4678 332.6797 -262.1377 333.0322 -261.6165 333.4043 c-261.1641 333.7275 -260.8711 333.9595 -260.7371 334.0996 c-260.5317 334.3174 -260.4287 334.5557 -260.4287 334.8145 c-260.4287 335.0254 -260.4878 335.2012 -260.6055 335.3408 c-260.7231 335.481 -260.8918 335.5508 -261.1113 335.5508 c-261.4114 335.5508 -261.6157 335.4395 -261.7241 335.2173 c-261.7866 335.0889 -261.8237 334.8848 -261.835 334.6055 c-262.7803 334.6055 L-262.7642 335.0293 -262.6873 335.3721 -262.5493 335.6328 c-262.2871 336.1304 -261.8218 336.3789 -261.1523 336.3789 c-260.6235 336.3789 -260.2029 336.2324 -259.8901 335.9404 c-259.5774 335.6479 -259.4209 335.2612 -259.4209 334.7798 c-259.4209 334.4106 -259.5317 334.083 -259.7534 333.7964 c-259.8989 333.606 -260.1379 333.3936 -260.4705 333.1597 c-260.8652 332.8809 L-261.1123 332.7065 -261.2815 332.5801 -261.3726 332.5024 c-261.4639 332.4243 -261.5408 332.334 -261.603 332.2305 c-259.4131 332.2305 L-259.4131 331.3633 L-262.835 331.3633 l-262.8262 331.7217 -262.7498 332.0498 -262.6064 332.3467 cf*U*u-257.9839 332.8867 m-257.9839 332.6865 -257.9514 332.521 -257.8867 332.3896 c-257.7666 332.1479 -257.5483 332.0273 -257.2317 332.0273 c-257.0376 332.0273 -256.8684 332.0938 -256.7239 332.2261 c-256.5796 332.3584 -256.5073 332.5488 -256.5073 332.7979 c-256.5073 333.127 -256.6416 333.3467 -256.9102 333.4575 c-257.063 333.5195 -257.3037 333.5508 -257.6323 333.5508 c-257.6323 334.2539 L-257.3118 334.2588 -257.0879 334.2896 -256.9609 334.3472 c-256.7419 334.4443 -256.6323 334.6401 -256.6323 334.9355 c-256.6323 335.1265 -256.6882 335.2822 -256.8003 335.4023 c-256.9124 335.522 -257.0698 335.582 -257.2729 335.582 c-257.5061 335.582 -257.6775 335.5083 -257.7871 335.3608 c-257.8967 335.2134 -257.9495 335.0161 -257.9448 334.7695 c-258.8589 334.7695 L-258.8496 335.0176 -258.8071 335.2529 -258.7314 335.4761 c-258.6511 335.6714 -258.5247 335.8516 -258.3523 336.0171 c-258.2239 336.1343 -258.071 336.2236 -257.8943 336.2861 c-257.7173 336.3477 -257.5002 336.3789 -257.2429 336.3789 c-256.7654 336.3789 -256.3801 336.2549 -256.0872 336.0078 c-255.7944 335.7607 -255.6479 335.4287 -255.6479 335.0122 c-255.6479 334.7178 -255.7346 334.4692 -255.9077 334.2666 c-256.0171 334.1401 -256.1311 334.0537 -256.2495 334.0078 c-256.1604 334.0078 -256.0322 333.9307 -255.8655 333.7769 c-255.6162 333.5449 -255.4917 333.228 -255.4917 332.8262 c-255.4917 332.4033 -255.6379 332.0317 -255.9307 331.7109 c-256.2234 331.3906 -256.6565 331.2305 -257.2302 331.2305 c-257.9373 331.2305 -258.4285 331.4609 -258.7039 331.9229 c-258.8484 332.168 -258.9287 332.4893 -258.9448 332.8867 c-257.9839 332.8867 Lf*U*u-254.781 332.3945 m-253.7341 332.3945 L-253.7341 331.3633 L-254.781 331.3633 l-254.781 332.3945 Lf*U*u-249.9646 335.7217 m-249.708 335.2725 -249.5796 334.6353 -249.5796 333.8091 c-249.5796 332.9829 -249.708 332.3467 -249.9646 331.9004 c-250.2214 331.4536 -250.6685 331.2305 -251.3062 331.2305 c-251.9438 331.2305 -252.3911 331.4536 -252.6477 331.9004 c-252.9045 332.3467 -253.0327 332.9829 -253.0327 333.8091 c-253.0327 334.6353 -252.9045 335.2725 -252.6477 335.7217 c-252.3911 336.1699 -251.9438 336.3945 -251.3062 336.3945 c-250.6685 336.3945 -250.2214 336.1699 -249.9646 335.7217 cf1 D-251.8909 332.4873 m-251.7961 332.1807 -251.6021 332.0273 -251.3088 332.0273 c-251.0156 332.0273 -250.8235 332.1807 -250.7322 332.4873 c-250.6409 332.7935 -250.5952 333.2358 -250.5952 333.8145 c-250.5952 334.4199 -250.6409 334.8691 -250.7322 335.1602 c-250.8235 335.4521 -251.0156 335.5977 -251.3088 335.5977 c-251.6021 335.5977 -251.7961 335.4521 -251.8909 335.1602 c-251.9856 334.8691 -252.0327 334.4199 -252.0327 333.8145 c-252.0327 333.2358 -251.9856 332.7935 -251.8909 332.4873 cf*U*u0 D-248.1816 332.8867 m-248.1816 332.6865 -248.1492 332.521 -248.0845 332.3896 c-247.9644 332.1479 -247.7461 332.0273 -247.4294 332.0273 c-247.2354 332.0273 -247.0662 332.0938 -246.9216 332.2261 c-246.7773 332.3584 -246.7051 332.5488 -246.7051 332.7979 c-246.7051 333.127 -246.8394 333.3467 -247.1079 333.4575 c-247.2607 333.5195 -247.5015 333.5508 -247.8301 333.5508 c-247.8301 334.2539 L-247.5095 334.2588 -247.2856 334.2896 -247.1587 334.3472 c-246.9397 334.4443 -246.8301 334.6401 -246.8301 334.9355 c-246.8301 335.1265 -246.886 335.2822 -246.998 335.4023 c-247.1101 335.522 -247.2676 335.582 -247.4707 335.582 c-247.7039 335.582 -247.8752 335.5083 -247.9849 335.3608 c-248.0945 335.2134 -248.1472 335.0161 -248.1426 334.7695 c-249.0566 334.7695 L-249.0474 335.0176 -249.0049 335.2529 -248.9292 335.4761 c-248.8489 335.6714 -248.7224 335.8516 -248.55 336.0171 c-248.4216 336.1343 -248.2688 336.2236 -248.092 336.2861 c-247.915 336.3477 -247.698 336.3789 -247.4407 336.3789 c-246.9631 336.3789 -246.5779 336.2549 -246.2849 336.0078 c-245.9922 335.7607 -245.8457 335.4287 -245.8457 335.0122 c-245.8457 334.7178 -245.9324 334.4692 -246.1055 334.2666 c-246.2148 334.1401 -246.3289 334.0537 -246.4473 334.0078 c-246.3582 334.0078 -246.23 333.9307 -246.0632 333.7769 c-245.814 333.5449 -245.6895 333.228 -245.6895 332.8262 c-245.6895 332.4033 -245.8357 332.0317 -246.1284 331.7109 c-246.4211 331.3906 -246.8542 331.2305 -247.428 331.2305 c-248.135 331.2305 -248.6262 331.4609 -248.9016 331.9229 c-249.0461 332.168 -249.1265 332.4893 -249.1426 332.8867 c-248.1816 332.8867 Lf*U*u-243.2852 333.793 m-241.3711 333.793 L-241.3711 332.8633 L-243.2852 332.8633 l-243.2852 333.793 Lf*U*u-235.1968 333.5703 m-235.4937 333.3228 -235.9177 333.1992 -236.4688 333.1992 c-237.5249 333.1992 L-237.5249 331.3633 L-238.5796 331.3633 L-238.5796 336.4414 L-236.4006 336.4414 L-235.8984 336.4414 -235.498 336.3105 -235.1995 336.0498 c-234.9009 335.7891 -234.7515 335.3848 -234.7515 334.8374 c-234.7515 334.2397 -234.8999 333.8174 -235.1968 333.5703 cf1 D-236.0073 335.3901 m-236.1414 335.5024 -236.3291 335.5586 -236.5708 335.5586 c-237.5249 335.5586 L-237.5249 334.0664 L-236.5708 334.0664 L-236.3291 334.0664 -236.1414 334.127 -236.0073 334.2485 c-235.8733 334.3701 -235.8062 334.5625 -235.8062 334.8262 c-235.8062 335.0898 -235.8733 335.2778 -236.0073 335.3901 cf*U*u0 D-232.978 331.3633 m-233.9624 331.3633 L-233.9624 336.4336 L-232.978 336.4336 l-232.978 331.3633 Lf*U*u-230.542 333.6504 m-230.3601 333.6738 -230.23 333.7021 -230.1516 333.7373 c-230.011 333.7969 -229.9407 333.8906 -229.9407 334.0176 c-229.9407 334.1719 -229.9946 334.2788 -230.1025 334.3374 c-230.2104 334.3965 -230.3687 334.4258 -230.5774 334.4258 c-230.8118 334.4258 -230.9775 334.3682 -231.075 334.2539 c-231.1445 334.1689 -231.1909 334.0547 -231.2141 333.9102 c-232.1594 333.9102 L-232.1387 334.2363 -232.0466 334.5044 -231.8831 334.7144 c-231.6228 335.043 -231.1758 335.207 -230.5422 335.207 c-230.1299 335.207 -229.7637 335.1265 -229.4436 334.9658 c-229.1233 334.8052 -228.9631 334.4985 -228.9631 334.0454 c-228.9631 332.3213 L-228.9631 332.2017 -228.9609 332.0566 -228.9563 331.8867 c-228.9495 331.7583 -228.9299 331.6709 -228.8979 331.625 c-228.8657 331.5791 -228.8176 331.5415 -228.7532 331.5117 c-228.7532 331.3633 L-229.8201 331.3633 L-229.8499 331.4375 -229.8704 331.5078 -229.8818 331.5732 c-229.8933 331.6387 -229.9026 331.7134 -229.9094 331.7969 c-230.0454 331.6494 -230.2021 331.5244 -230.3794 331.4209 c-230.5916 331.2993 -230.8311 331.2383 -231.0981 331.2383 c-231.4392 331.2383 -231.7209 331.3359 -231.9431 331.5308 c-232.1655 331.7256 -232.2766 332.002 -232.2766 332.3594 c-232.2766 332.8232 -232.0981 333.1592 -231.741 333.3667 c-231.5452 333.4795 -231.2573 333.5605 -230.8772 333.6089 c-230.542 333.6504 Lf1 D-229.9443 333.1904 m-230.0068 333.1509 -230.0701 333.1191 -230.1338 333.0947 c-230.1978 333.0703 -230.2852 333.0479 -230.3965 333.0273 c-230.6191 332.9854 L-230.8279 332.9482 -230.9768 332.9028 -231.0659 332.8496 c-231.2168 332.7593 -231.2922 332.6191 -231.2922 332.4292 c-231.2922 332.2598 -231.2456 332.1377 -231.1521 332.062 c-231.0586 331.9868 -230.9446 331.9492 -230.8105 331.9492 c-230.5981 331.9492 -230.4023 332.0117 -230.2231 332.1367 c-230.0442 332.2622 -229.9512 332.4902 -229.9443 332.8218 c-229.9443 333.1904 Lf*U*u0 D-227.0974 335.5664 m-228.0896 335.5664 L-228.0896 336.4727 L-227.0974 336.4727 l-227.0974 335.5664 Lf-228.0896 335.1211 m-227.0974 335.1211 L-227.0974 331.3633 L-228.0896 331.3633 l-228.0896 335.1211 Lf*U*u-223.1216 334.9028 m-222.8774 334.7002 -222.7554 334.3633 -222.7554 333.8926 c-222.7554 331.3633 L-223.771 331.3633 L-223.771 333.6494 L-223.771 333.8472 -223.7969 333.999 -223.8481 334.105 c-223.9421 334.2979 -224.1211 334.3945 -224.3848 334.3945 c-224.709 334.3945 -224.9314 334.2529 -225.0522 333.9702 c-225.1147 333.8208 -225.146 333.6299 -225.146 333.3979 c-225.146 331.3633 L-226.1304 331.3633 L-226.1304 335.1055 L-225.1772 335.1055 L-225.1772 334.5645 L-225.0525 334.7568 -224.9343 334.8955 -224.823 334.9805 c-224.6233 335.1313 -224.3701 335.207 -224.0635 335.207 c-223.6797 335.207 -223.3657 335.1055 -223.1216 334.9028 cf*U*u-219.0281 332.9258 m-218.9954 332.6953 -218.9312 332.5229 -218.8354 332.4092 c-218.6604 332.2012 -218.3606 332.0977 -217.9355 332.0977 c-217.6812 332.0977 -217.4746 332.125 -217.3159 332.1802 c-217.0146 332.2852 -216.864 332.481 -216.864 332.7676 c-216.864 332.9346 -216.9387 333.064 -217.0879 333.1553 c-217.2371 333.2446 -217.4714 333.3237 -217.791 333.3931 c-218.3369 333.5142 L-218.8735 333.6343 -219.2429 333.7646 -219.4448 333.9048 c-219.7869 334.1392 -219.9578 334.5054 -219.9578 335.0039 c-219.9578 335.459 -219.7913 335.8374 -219.4583 336.1382 c-219.125 336.4395 -218.6357 336.5898 -217.9905 336.5898 c-217.4514 336.5898 -216.9917 336.4482 -216.6111 336.1655 c-216.2305 335.8823 -216.031 335.4717 -216.0125 334.9336 c-217.0281 334.9336 L-217.0469 335.2339 -217.1821 335.4473 -217.4341 335.5737 c-217.6021 335.6572 -217.8108 335.6992 -218.0603 335.6992 c-218.3379 335.6992 -218.5596 335.6445 -218.7251 335.5356 c-218.8906 335.4263 -218.9734 335.2739 -218.9734 335.0786 c-218.9734 334.8989 -218.8918 334.7646 -218.7285 334.6758 c-218.6235 334.6172 -218.4004 334.5469 -218.0586 334.4663 c-217.1729 334.2549 L-216.7847 334.1626 -216.4937 334.0396 -216.2998 333.8857 c-215.999 333.6465 -215.8484 333.3008 -215.8484 332.8477 c-215.8484 332.3833 -216.0271 331.9976 -216.3845 331.6909 c-216.7419 331.3838 -217.2468 331.2305 -217.8992 331.2305 c-218.5654 331.2305 -219.0896 331.3809 -219.4712 331.6826 c-219.853 331.9844 -220.0437 332.3984 -220.0437 332.9258 c-219.0281 332.9258 Lf*U*u-215.5593 334.3867 m-215.5593 335.082 L-215.0359 335.082 L-215.0359 336.1289 L-214.0515 336.1289 L-214.0515 335.082 L-213.4421 335.082 L-213.4421 334.3867 L-214.0515 334.3867 L-214.0515 332.3965 L-214.0515 332.2422 -214.0322 332.1455 -213.9932 332.1079 c-213.9541 332.0698 -213.8347 332.0508 -213.635 332.0508 c-213.6052 332.0508 -213.5737 332.0518 -213.5403 332.0547 c-213.5071 332.0571 -213.4744 332.061 -213.4421 332.0664 c-213.4421 331.332 L-213.9109 331.3086 L-214.3787 331.2925 -214.698 331.373 -214.8694 331.5503 c-214.9805 331.6631 -215.0359 331.8364 -215.0359 332.0713 c-215.0359 334.3867 l-215.5593 334.3867 Lf*U*u-210.7488 335.2051 m-210.7361 335.2036 -210.708 335.2017 -210.6643 335.1992 c-210.6643 334.207 L-210.7261 334.21 -210.781 334.2119 -210.8291 334.2134 c-210.8772 334.2144 -210.916 334.2148 -210.9458 334.2148 c-211.3394 334.2148 -211.6035 334.0859 -211.7385 333.8286 c-211.8142 333.6836 -211.8518 333.4609 -211.8518 333.1597 c-211.8518 331.3633 L-212.8362 331.3633 L-212.8362 335.1211 L-211.9065 335.1211 L-211.9065 334.4663 L-211.7551 334.7158 -211.6233 334.8857 -211.5107 334.9775 c-211.3274 335.1304 -211.0889 335.207 -210.7952 335.207 c-210.7769 335.207 -210.7615 335.2061 -210.7488 335.2051 cf*U*u-208.5999 333.6504 m-208.4177 333.6738 -208.2876 333.7021 -208.2092 333.7373 c-208.0688 333.7969 -207.9985 333.8906 -207.9985 334.0176 c-207.9985 334.1719 -208.0525 334.2788 -208.1604 334.3374 c-208.2683 334.3965 -208.4265 334.4258 -208.6353 334.4258 c-208.8696 334.4258 -209.0354 334.3682 -209.1328 334.2539 c-209.2024 334.1689 -209.2488 334.0547 -209.272 333.9102 c-210.2173 333.9102 L-210.1965 334.2363 -210.1042 334.5044 -209.9407 334.7144 c-209.6804 335.043 -209.2336 335.207 -208.6001 335.207 c-208.1877 335.207 -207.8215 335.1265 -207.5012 334.9658 c-207.1812 334.8052 -207.021 334.4985 -207.021 334.0454 c-207.021 332.3213 L-207.021 332.2017 -207.0188 332.0566 -207.0142 331.8867 c-207.0073 331.7583 -206.9878 331.6709 -206.9556 331.625 c-206.9236 331.5791 -206.8752 331.5415 -206.811 331.5117 c-206.811 331.3633 L-207.8777 331.3633 L-207.9075 331.4375 -207.9282 331.5078 -207.9397 331.5732 c-207.9512 331.6387 -207.9604 331.7134 -207.9673 331.7969 c-208.1033 331.6494 -208.2598 331.5244 -208.4373 331.4209 c-208.6492 331.2993 -208.8889 331.2383 -209.156 331.2383 c-209.4971 331.2383 -209.7786 331.3359 -210.001 331.5308 c-210.2234 331.7256 -210.3345 332.002 -210.3345 332.3594 c-210.3345 332.8232 -210.156 333.1592 -209.7988 333.3667 c-209.603 333.4795 -209.3149 333.5605 -208.9348 333.6089 c-208.5999 333.6504 Lf1 D-208.002 333.1904 m-208.0647 333.1509 -208.1279 333.1191 -208.1917 333.0947 c-208.2554 333.0703 -208.343 333.0479 -208.4543 333.0273 c-208.677 332.9854 L-208.8857 332.9482 -209.0347 332.9028 -209.1238 332.8496 c-209.2747 332.7593 -209.3501 332.6191 -209.3501 332.4292 c-209.3501 332.2598 -209.3032 332.1377 -209.2097 332.062 c-209.1162 331.9868 -209.0024 331.9492 -208.8684 331.9492 c-208.6558 331.9492 -208.46 332.0117 -208.281 332.1367 c-208.1021 332.2622 -208.009 332.4902 -208.002 332.8218 c-208.002 333.1904 Lf*U*u0 D-205.155 335.5664 m-206.1472 335.5664 L-206.1472 336.4727 L-205.155 336.4727 l-205.155 335.5664 Lf-206.1472 335.1211 m-205.155 335.1211 L-205.155 331.3633 L-206.1472 331.3633 l-206.1472 335.1211 Lf*U*u-202.3499 335.1211 m-202.1123 335.022 -201.9202 334.8408 -201.7739 334.5767 c-201.7739 335.1211 L-200.8052 335.1211 L-200.8052 331.5605 L-200.8052 331.0762 -200.887 330.7114 -201.05 330.4658 c-201.3308 330.043 -201.8689 329.832 -202.6646 329.832 c-203.145 329.832 -203.5371 329.9263 -203.8406 330.1143 c-204.1443 330.3022 -204.312 330.583 -204.3442 330.957 c-203.2739 330.957 L-203.2466 330.8418 -203.2021 330.7593 -203.1406 330.709 c-203.0356 330.6191 -202.8589 330.5742 -202.6104 330.5742 c-202.2593 330.5742 -202.0247 330.6919 -201.906 330.9268 c-201.8284 331.0771 -201.7896 331.3301 -201.7896 331.686 c-201.7896 331.9258 L-201.8833 331.7666 -201.9839 331.6479 -202.0913 331.5684 c-202.2856 331.4214 -202.5383 331.3477 -202.8494 331.3477 c-203.3296 331.3477 -203.7131 331.5166 -204 331.8555 c-204.2869 332.1938 -204.4302 332.6523 -204.4302 333.231 c-204.4302 333.7886 -204.292 334.2573 -204.0156 334.6372 c-203.739 335.0171 -203.3472 335.207 -202.8398 335.207 c-202.6526 335.207 -202.4893 335.1782 -202.3499 335.1211 cf1 D-202.0242 332.4209 m-201.8679 332.5947 -201.7896 332.8721 -201.7896 333.252 c-201.7896 333.6094 -201.8638 333.8809 -202.0122 334.0679 c-202.1606 334.2544 -202.3596 334.3477 -202.6089 334.3477 c-202.949 334.3477 -203.1836 334.1851 -203.3127 333.8604 c-203.3806 333.6875 -203.4146 333.4746 -203.4146 333.2212 c-203.4146 333.002 -203.3784 332.8076 -203.3059 332.6372 c-203.1746 332.3193 -202.9387 332.1602 -202.5986 332.1602 c-202.3721 332.1602 -202.1807 332.2471 -202.0242 332.4209 cf*U*u0 D-197.1917 335.1016 m-197.0034 335.0215 -196.8489 334.8979 -196.728 334.7324 c-196.6255 334.5918 -196.5627 334.4478 -196.54 334.2993 c-196.5173 334.1509 -196.5059 333.9087 -196.5059 333.5728 c-196.5059 331.3633 L-197.5059 331.3633 L-197.5059 333.6563 L-197.5059 333.8594 -197.54 334.0229 -197.6082 334.1475 c-197.6968 334.3223 -197.865 334.4102 -198.1125 334.4102 c-198.3694 334.4102 -198.5642 334.3232 -198.697 334.1489 c-198.8301 333.9751 -198.8965 333.7266 -198.8965 333.4038 c-198.8965 331.3633 L-199.8809 331.3633 L-199.8809 336.418 L-198.8965 336.418 L-198.8965 334.6396 L-198.7551 334.8569 -198.5916 335.0083 -198.4058 335.0942 c-198.22 335.1797 -198.0244 335.2227 -197.8191 335.2227 c-197.5889 335.2227 -197.3796 335.1826 -197.1917 335.1016 cf*U*u-195.9722 334.3867 m-195.9722 335.082 L-195.4487 335.082 L-195.4487 336.1289 L-194.4644 336.1289 L-194.4644 335.082 L-193.855 335.082 L-193.855 334.3867 L-194.4644 334.3867 L-194.4644 332.3965 L-194.4644 332.2422 -194.4448 332.1455 -194.4058 332.1079 c-194.3667 332.0698 -194.2473 332.0508 -194.0476 332.0508 c-194.0178 332.0508 -193.9863 332.0518 -193.9531 332.0547 c-193.9199 332.0571 -193.8872 332.061 -193.855 332.0664 c-193.855 331.332 L-194.3237 331.3086 L-194.7913 331.2925 -195.1108 331.373 -195.282 331.5503 c-195.3931 331.6631 -195.4487 331.8364 -195.4487 332.0713 c-195.4487 334.3867 l-195.9722 334.3867 Lf*UU1 R1 0.5 0 0 K0.3686 w-308.6223 342.2969 m-177.4968 342.2969 LS1 O1 0.5 0 0 k1 w-175.9231 342.2842 m-177.2068 341.7988 -178.7981 340.9707 -179.7854 340.0938 C-179.0076 342.2842 L-179.7854 344.4756 L-178.7981 343.5986 -177.2068 342.7695 -175.9231 342.2842 Cf1 R1 0.5 0 0 K0.3686 w-174.5857 335.6563 m-174.5857 376.8799 LSUuu*u1 O1 0.5 0 0 k1 w75.4917 336.5854 m76.6938 336.5854 L78.4836 331.5073 L77.3342 331.5073 L76.9971 332.562 L75.1387 332.562 L74.7915 331.5073 L73.6812 331.5073 l75.4917 336.5854 Lf1 D75.4246 333.4292 m76.7197 333.4292 L76.0818 335.4243 l75.4246 333.4292 Lf*U*u0 D78.6719 334.5308 m78.6719 335.2261 L79.1953 335.2261 L79.1953 336.2729 L80.1797 336.2729 L80.1797 335.2261 L80.7891 335.2261 L80.7891 334.5308 L80.1797 334.5308 L80.1797 332.5405 L80.1797 332.3857 80.199 332.29 80.238 332.252 c80.2771 332.2139 80.3965 332.1948 80.5962 332.1948 c80.626 332.1948 80.6575 332.1963 80.6909 332.1987 c80.7241 332.2012 80.7568 332.2051 80.7891 332.2104 c80.7891 331.4761 L80.3203 331.4526 L79.8525 331.4365 79.5332 331.5171 79.3618 331.6943 c79.2507 331.8066 79.1953 331.9805 79.1953 332.2153 c79.1953 334.5308 l78.6719 334.5308 Lf*U*u82.8872 333.7944 m83.0693 333.8174 83.1997 333.8467 83.2778 333.8809 c83.4185 333.9409 83.4888 334.0342 83.4888 334.1611 c83.4888 334.3159 83.4346 334.4229 83.3267 334.4814 c83.2188 334.5405 83.0605 334.5698 82.8521 334.5698 c82.6177 334.5698 82.4519 334.5127 82.3545 334.3979 c82.2849 334.313 82.2385 334.1982 82.2153 334.0542 c81.27 334.0542 L81.2908 334.3804 81.3828 334.6484 81.5464 334.8584 c81.8066 335.1865 82.2537 335.3511 82.8872 335.3511 c83.2993 335.3511 83.6655 335.2705 83.9858 335.1099 c84.3062 334.9492 84.4663 334.6426 84.4663 334.1895 c84.4663 332.4653 L84.4663 332.3457 84.4683 332.2012 84.4731 332.0308 c84.48 331.9023 84.4995 331.8154 84.5317 331.7695 c84.5635 331.7236 84.6118 331.6855 84.6763 331.6558 c84.6763 331.5073 L83.6094 331.5073 L83.5796 331.582 83.5591 331.6519 83.5474 331.7173 c83.5361 331.7827 83.5269 331.8574 83.52 331.9409 c83.3838 331.7939 83.2275 331.6685 83.0498 331.5649 c82.8379 331.4434 82.5981 331.3823 82.3313 331.3823 c81.9902 331.3823 81.7085 331.48 81.4863 331.6748 c81.2639 331.8696 81.1528 332.146 81.1528 332.5039 c81.1528 332.9673 81.3313 333.3032 81.6885 333.5107 c81.8843 333.624 82.1721 333.7046 82.5522 333.7529 c82.8872 333.7944 Lf1 D83.4854 333.3345 m83.4224 333.2949 83.3594 333.2632 83.2954 333.2388 c83.2319 333.2144 83.144 333.1919 83.0327 333.1709 c82.8101 333.1294 L82.6016 333.0923 82.4526 333.0469 82.3635 332.9937 c82.2126 332.9033 82.1372 332.7632 82.1372 332.5732 c82.1372 332.4038 82.1838 332.2813 82.2773 332.2061 c82.3708 332.1309 82.4849 332.0933 82.6187 332.0933 c82.8315 332.0933 83.0273 332.1558 83.2061 332.2813 c83.3853 332.4063 83.478 332.6343 83.4854 332.9658 c83.4854 333.3345 Lf*U*u0 D87.4043 335.3491 m87.4165 335.3477 87.4448 335.3457 87.4883 335.3433 c87.4883 334.3511 L87.4268 334.354 87.3716 334.3564 87.3237 334.3574 c87.2754 334.3584 87.2368 334.3589 87.207 334.3589 c86.8135 334.3589 86.5493 334.23 86.4141 333.9727 c86.3389 333.8281 86.3008 333.605 86.3008 333.3037 c86.3008 331.5073 L85.3164 331.5073 L85.3164 335.2651 L86.2461 335.2651 L86.2461 334.6104 L86.3975 334.8594 86.5293 335.0298 86.6421 335.1211 c86.8257 335.2744 87.064 335.3511 87.3579 335.3511 c87.376 335.3511 87.3916 335.3506 87.4043 335.3491 cf*U*u89.0762 335.7104 m88.084 335.7104 L88.084 336.6167 L89.0762 336.6167 l89.0762 335.7104 Lf88.084 335.2651 m89.0762 335.2651 L89.0762 331.5073 L88.084 331.5073 l88.084 335.2651 Lf*U*u91.5566 336.5854 m92.7588 336.5854 L94.5488 331.5073 L93.3994 331.5073 L93.062 332.562 L91.2041 332.562 L90.8564 331.5073 L89.7461 331.5073 l91.5566 336.5854 Lf1 D91.4897 333.4292 m92.7847 333.4292 L92.147 335.4243 l91.4897 333.4292 Lf*U*u0 D96.9736 335.2646 m97.2109 335.166 97.4033 334.9849 97.5493 334.7207 c97.5493 335.2651 L98.5181 335.2651 L98.5181 331.7046 L98.5181 331.2202 98.4365 330.8555 98.2734 330.6094 c97.9927 330.1875 97.4546 329.9761 96.6587 329.9761 c96.1782 329.9761 95.7861 330.0703 95.4829 330.2583 c95.1792 330.4463 95.0112 330.7275 94.979 331.1011 c96.0493 331.1011 L96.0767 330.9863 96.1211 330.9033 96.1826 330.8525 c96.2876 330.7632 96.4644 330.7183 96.7129 330.7183 c97.064 330.7183 97.2988 330.8359 97.4175 331.0708 c97.4951 331.2212 97.5337 331.4746 97.5337 331.8301 c97.5337 332.0693 L97.4399 331.9111 97.3394 331.792 97.2319 331.7129 c97.0376 331.5654 96.7852 331.4917 96.4741 331.4917 c95.9937 331.4917 95.6104 331.6611 95.3232 331.9995 c95.0366 332.3379 94.8931 332.7964 94.8931 333.375 c94.8931 333.9326 95.0313 334.4014 95.3076 334.7813 c95.5845 335.1611 95.9761 335.3511 96.4834 335.3511 c96.6709 335.3511 96.834 335.3223 96.9736 335.2646 cf1 D97.2993 332.5649 m97.4556 332.7393 97.5337 333.0161 97.5337 333.3965 c97.5337 333.7534 97.4595 334.0254 97.311 334.2119 c97.1626 334.3984 96.9639 334.4917 96.7144 334.4917 c96.3745 334.4917 96.1396 334.3291 96.0107 334.0044 c95.9429 333.8315 95.9087 333.6187 95.9087 333.3652 c95.9087 333.1465 95.9448 332.9517 96.0176 332.7813 c96.1489 332.4629 96.3848 332.3042 96.7246 332.3042 c96.9512 332.3042 97.1426 332.3911 97.2993 332.5649 cf*U*u0 D101.8721 335.1909 m102.1333 335.0737 102.3486 334.8887 102.519 334.6362 c102.6724 334.4131 102.7715 334.1548 102.8169 333.8608 c102.8433 333.6885 102.854 333.4404 102.8491 333.1167 c100.1221 333.1167 L100.1377 332.7383 100.2686 332.4731 100.5156 332.3213 c100.6655 332.2266 100.8467 332.1792 101.0581 332.1792 c101.2817 332.1792 101.4639 332.2363 101.604 332.3511 c101.6802 332.4131 101.748 332.499 101.8066 332.6089 c102.8018 332.6089 L102.7754 332.3857 102.6543 332.1597 102.439 331.9302 c102.103 331.5649 101.6333 331.3823 101.0293 331.3823 c100.5308 331.3823 100.0908 331.5361 99.7095 331.8447 c99.3286 332.1528 99.1377 332.6543 99.1377 333.3486 c99.1377 333.9995 99.3096 334.4985 99.6533 334.8457 c99.9971 335.1929 100.4434 335.3667 100.9917 335.3667 c101.3174 335.3667 101.6108 335.3081 101.8721 335.1909 cf1 D100.4014 334.3438 m100.2617 334.2031 100.1738 334.0127 100.1377 333.7729 c101.8408 333.7729 L101.8232 334.0288 101.7354 334.2227 101.5776 334.3555 c101.4199 334.4878 101.2246 334.5542 100.9912 334.5542 c100.7378 334.5542 100.541 334.4839 100.4014 334.3438 cf*U*u0 D105.0186 333.937 m106.9326 333.937 L106.9326 333.0073 L105.0186 333.0073 l105.0186 333.937 Lf*U*u112.4487 335.8652 m112.7051 335.417 112.8335 334.7793 112.8335 333.9531 c112.8335 333.127 112.7051 332.4907 112.4487 332.0439 c112.1919 331.5977 111.7446 331.3745 111.1069 331.3745 c110.4692 331.3745 110.022 331.5977 109.7656 332.0439 c109.5088 332.4907 109.3804 333.127 109.3804 333.9531 c109.3804 334.7793 109.5088 335.417 109.7656 335.8652 c110.022 336.3145 110.4692 336.5386 111.1069 336.5386 c111.7446 336.5386 112.1919 336.3145 112.4487 335.8652 cf1 D110.5225 332.6309 m110.6172 332.3247 110.811 332.1714 111.1045 332.1714 c111.3975 332.1714 111.5898 332.3247 111.6812 332.6309 c111.7725 332.9375 111.8179 333.3799 111.8179 333.958 c111.8179 334.5645 111.7725 335.0127 111.6812 335.3047 c111.5898 335.5957 111.3975 335.7417 111.1045 335.7417 c110.811 335.7417 110.6172 335.5957 110.5225 335.3047 c110.4277 335.0127 110.3804 334.5645 110.3804 333.958 c110.3804 333.3799 110.4277 332.9375 110.5225 332.6309 cf*U*u0 D113.5757 334.9526 m113.5757 335.6245 L113.8843 335.6382 114.1006 335.6587 114.2241 335.686 c114.4209 335.7295 114.5811 335.8159 114.7051 335.9458 c114.7896 336.0347 114.8535 336.1533 114.897 336.3013 c114.9224 336.3901 114.9351 336.4561 114.9351 336.4995 c115.7554 336.4995 L115.7554 331.5073 L114.7476 331.5073 L114.7476 334.9526 l113.5757 334.9526 Lf*U*u117.4346 331.5073 m118.4814 331.5073 L118.4814 332.5386 L117.4346 332.5386 L117.4346 331.5073 lf*U*u119.4116 332.4902 m119.5503 332.8237 119.8799 333.1763 120.4014 333.5483 c120.8535 333.8716 121.1465 334.1035 121.2808 334.2432 c121.4863 334.4609 121.5889 334.6997 121.5889 334.959 c121.5889 335.1699 121.5303 335.3452 121.4121 335.4849 c121.2944 335.625 121.126 335.6948 120.9067 335.6948 c120.6064 335.6948 120.4023 335.5835 120.2935 335.3613 c120.2314 335.2329 120.1943 335.0293 120.1826 334.7495 c119.2373 334.7495 L119.2534 335.1733 119.3306 335.5156 119.4688 335.7773 c119.7305 336.2744 120.1963 336.5229 120.8652 336.5229 c121.394 336.5229 121.8149 336.377 122.1279 336.0845 c122.4404 335.792 122.5967 335.4053 122.5967 334.9238 c122.5967 334.5547 122.4858 334.2271 122.2642 333.9404 c122.1187 333.75 121.8799 333.5381 121.5474 333.3037 c121.1523 333.0249 L120.9053 332.8506 120.7363 332.7246 120.645 332.6465 c120.5537 332.5684 120.4771 332.4775 120.415 332.3745 c122.6045 332.3745 L122.6045 331.5073 L119.1826 331.5073 l119.1919 331.8662 119.2681 332.1938 119.4116 332.4902 cf*U*u124.0342 333.0308 m124.0342 332.8306 124.0664 332.665 124.1309 332.5337 c124.251 332.292 124.4697 332.1714 124.7861 332.1714 c124.9805 332.1714 125.1494 332.2373 125.2939 332.3701 c125.4385 332.5024 125.5107 332.6929 125.5107 332.9419 c125.5107 333.271 125.3765 333.4912 125.1079 333.6016 c124.9551 333.6636 124.7144 333.6948 124.3857 333.6948 c124.3857 334.3979 L124.7061 334.4023 124.9297 334.4336 125.0566 334.4912 c125.2759 334.5879 125.3857 334.7842 125.3857 335.0791 c125.3857 335.2705 125.3296 335.4263 125.2178 335.5459 c125.1055 335.666 124.9482 335.7261 124.7451 335.7261 c124.5117 335.7261 124.3403 335.6523 124.2305 335.5049 c124.1211 335.3574 124.0684 335.1602 124.0732 334.9136 c123.1592 334.9136 L123.168 335.1616 123.2104 335.397 123.2866 335.6201 c123.3667 335.8154 123.4932 335.9956 123.6655 336.1611 c123.7939 336.2783 123.9468 336.3682 124.1235 336.4297 c124.3003 336.4922 124.5176 336.5229 124.7749 336.5229 c125.2524 336.5229 125.6377 336.3994 125.9307 336.1519 c126.2236 335.9043 126.3701 335.5728 126.3701 335.1563 c126.3701 334.8618 126.2832 334.6133 126.1104 334.4106 c126.001 334.2842 125.8867 334.1978 125.7686 334.1519 c125.8574 334.1519 125.9854 334.0747 126.1523 333.9209 c126.4014 333.689 126.5264 333.3721 126.5264 332.9697 c126.5264 332.5474 126.3799 332.1758 126.0874 331.8555 c125.7944 331.5347 125.3613 331.3745 124.7876 331.3745 c124.0806 331.3745 123.5894 331.6055 123.314 332.0664 c123.1694 332.3125 123.0889 332.6338 123.0732 333.0308 c124.0342 333.0308 Lf*U*u127.2368 332.5386 m128.2837 332.5386 L128.2837 331.5073 L127.2368 331.5073 l127.2368 332.5386 Lf*U*u132.0532 335.8652 m132.3096 335.417 132.438 334.7793 132.438 333.9531 c132.438 333.127 132.3096 332.4907 132.0532 332.0439 c131.7964 331.5977 131.3491 331.3745 130.7114 331.3745 c130.0737 331.3745 129.6265 331.5977 129.3701 332.0439 c129.1133 332.4907 128.9849 333.127 128.9849 333.9531 c128.9849 334.7793 129.1133 335.417 129.3701 335.8652 c129.6265 336.3145 130.0737 336.5386 130.7114 336.5386 c131.3491 336.5386 131.7964 336.3145 132.0532 335.8652 cf1 D130.127 332.6309 m130.2217 332.3247 130.4155 332.1714 130.709 332.1714 c131.0024 332.1714 131.1943 332.3247 131.2856 332.6309 c131.377 332.9375 131.4224 333.3799 131.4224 333.958 c131.4224 334.5645 131.377 335.0127 131.2856 335.3047 c131.1943 335.5957 131.0024 335.7417 130.709 335.7417 c130.4155 335.7417 130.2217 335.5957 130.127 335.3047 c130.0322 335.0127 129.9849 334.5645 129.9849 333.958 c129.9849 333.3799 130.0322 332.9375 130.127 332.6309 cf*U*u0 D133.8364 333.0308 m133.8364 332.8306 133.8687 332.665 133.9331 332.5337 c134.0532 332.292 134.272 332.1714 134.5884 332.1714 c134.7827 332.1714 134.9517 332.2373 135.0962 332.3701 c135.2407 332.5024 135.313 332.6929 135.313 332.9419 c135.313 333.271 135.1787 333.4912 134.9102 333.6016 c134.7573 333.6636 134.5166 333.6948 134.188 333.6948 c134.188 334.3979 L134.5083 334.4023 134.7319 334.4336 134.8589 334.4912 c135.0781 334.5879 135.188 334.7842 135.188 335.0791 c135.188 335.2705 135.1318 335.4263 135.02 335.5459 c134.9077 335.666 134.7505 335.7261 134.5474 335.7261 c134.314 335.7261 134.1426 335.6523 134.0327 335.5049 c133.9233 335.3574 133.8706 335.1602 133.8755 334.9136 c132.9614 334.9136 L132.9702 335.1616 133.0127 335.397 133.0889 335.6201 c133.1689 335.8154 133.2954 335.9956 133.4678 336.1611 c133.5962 336.2783 133.749 336.3682 133.9258 336.4297 c134.1025 336.4922 134.3198 336.5229 134.5771 336.5229 c135.0547 336.5229 135.4399 336.3994 135.7329 336.1519 c136.0259 335.9043 136.1724 335.5728 136.1724 335.1563 c136.1724 334.8618 136.0854 334.6133 135.9126 334.4106 c135.8032 334.2842 135.689 334.1978 135.5708 334.1519 c135.6597 334.1519 135.7876 334.0747 135.9546 333.9209 c136.2036 333.689 136.3286 333.3721 136.3286 332.9697 c136.3286 332.5474 136.1821 332.1758 135.8896 331.8555 c135.5967 331.5347 135.1636 331.3745 134.5898 331.3745 c133.8828 331.3745 133.3916 331.6055 133.1162 332.0664 c132.9717 332.3125 132.8911 332.6338 132.8755 333.0308 c133.8364 333.0308 Lf*U*u138.7324 333.937 m140.6465 333.937 L140.6465 333.0073 L138.7324 333.0073 l138.7324 333.937 Lf*U*u143.8979 336.0537 m144.3047 336.4707 144.8228 336.6792 145.4512 336.6792 c146.292 336.6792 146.9067 336.3999 147.2954 335.8418 c147.5103 335.5283 147.6255 335.2139 147.6416 334.8979 c146.5869 334.8979 L146.5195 335.1396 146.4336 335.3218 146.3286 335.4448 c146.1411 335.6636 145.8633 335.7729 145.4946 335.7729 c145.1196 335.7729 144.8237 335.6177 144.6069 335.3071 c144.3901 334.9971 144.2822 334.5576 144.2822 333.9893 c144.2822 333.4214 144.396 332.9961 144.624 332.7129 c144.8525 332.4297 145.1421 332.2886 145.4941 332.2886 c145.8545 332.2886 146.1294 332.4102 146.3184 332.6533 c146.4229 332.7842 146.5098 332.9805 146.5791 333.2417 c147.6338 333.2417 L147.543 332.6895 147.312 332.2397 146.9399 331.8936 c146.5679 331.5474 146.0913 331.3745 145.5098 331.3745 c144.7905 331.3745 144.2251 331.6084 143.8135 332.0757 c143.4019 332.5459 143.1963 333.1895 143.1963 334.0078 c143.1963 334.8926 143.4302 335.5742 143.8979 336.0537 cf*U*u149.4287 335.7104 m148.4365 335.7104 L148.4365 336.6167 L149.4287 336.6167 l149.4287 335.7104 Lf148.4365 335.2651 m149.4287 335.2651 L149.4287 331.5073 L148.4365 331.5073 l148.4365 335.2651 Lf*U*u152.46 335.3491 m152.4727 335.3477 152.5005 335.3457 152.5444 335.3433 c152.5444 334.3511 L152.4824 334.354 152.4277 334.3564 152.3794 334.3574 c152.3315 334.3584 152.2925 334.3589 152.2627 334.3589 c151.8691 334.3589 151.605 334.23 151.4702 333.9727 c151.3945 333.8281 151.3569 333.605 151.3569 333.3037 c151.3569 331.5073 L150.3726 331.5073 L150.3726 335.2651 L151.3022 335.2651 L151.3022 334.6104 L151.4536 334.8594 151.5854 335.0298 151.6978 335.1211 c151.8813 335.2744 152.1196 335.3511 152.4136 335.3511 c152.4316 335.3511 152.4473 335.3506 152.46 335.3491 cf*U*u155.3662 333.9136 m155.3477 334.0542 155.3008 334.1812 155.2246 334.2944 c155.1138 334.4468 154.9414 334.5229 154.7085 334.5229 c154.3755 334.5229 154.1484 334.3579 154.0259 334.0278 c153.9614 333.8535 153.9287 333.6226 153.9287 333.334 c153.9287 333.0596 153.9609 332.8384 154.0254 332.6714 c154.1421 332.3535 154.3628 332.1948 154.6865 332.1948 c154.916 332.1948 155.0786 332.2578 155.1753 332.3838 c155.2715 332.5103 155.3301 332.6738 155.3506 332.8745 c156.3506 332.8745 L156.3276 332.5757 156.2202 332.293 156.0283 332.0269 c155.7217 331.5972 155.2676 331.3823 154.6665 331.3823 c154.0649 331.3823 153.6221 331.5605 153.3389 331.9165 c153.0552 332.2725 152.9131 332.7363 152.9131 333.3086 c152.9131 333.9541 153.0708 334.4561 153.3862 334.814 c153.7012 335.1719 154.1362 335.3511 154.6909 335.3511 c155.1626 335.3511 155.5483 335.2451 155.8486 335.0342 c156.1489 334.8223 156.3267 334.4492 156.3818 333.9136 c155.3662 333.9136 Lf*U*u158.0537 331.5073 m157.0693 331.5073 L157.0693 336.5776 L158.0537 336.5776 l158.0537 331.5073 Lf*U*u161.4502 335.1909 m161.7109 335.0737 161.9268 334.8887 162.0967 334.6362 c162.25 334.4131 162.3496 334.1548 162.395 333.8608 c162.4214 333.6885 162.4321 333.4404 162.4272 333.1167 c159.7002 333.1167 L159.7153 332.7383 159.8467 332.4731 160.0938 332.3213 c160.2437 332.2266 160.4243 332.1792 160.6357 332.1792 c160.8599 332.1792 161.042 332.2363 161.1821 332.3511 c161.2583 332.4131 161.3257 332.499 161.3843 332.6089 c162.3799 332.6089 L162.3535 332.3857 162.2324 332.1597 162.0166 331.9302 c161.6812 331.5649 161.2114 331.3823 160.6074 331.3823 c160.1084 331.3823 159.6685 331.5361 159.2876 331.8447 c158.9063 332.1528 158.7158 332.6543 158.7158 333.3486 c158.7158 333.9995 158.8877 334.4985 159.2314 334.8457 c159.5752 335.1929 160.0215 335.3667 160.5698 335.3667 c160.8955 335.3667 161.189 335.3081 161.4502 335.1909 cf1 D159.979 334.3438 m159.8394 334.2031 159.752 334.0127 159.7158 333.7729 c161.4189 333.7729 L161.4009 334.0288 161.3135 334.2227 161.1558 334.3555 c160.998 334.4878 160.8027 334.5542 160.5693 334.5542 c160.3154 334.5542 160.1187 334.4839 159.979 334.3438 cf*UU0 D1 R1 0.5 0 0 K0.3686 w73.396 342.4409 m204.521 342.4409 LS1 O1 0.5 0 0 k1 w206.0952 342.4282 m204.811 341.9429 203.2202 341.1147 202.2329 340.2378 C203.0103 342.4282 L202.2329 344.6196 L203.2202 343.7427 204.811 342.9136 206.0952 342.4282 Cf1 R1 0.5 0 0 K0.3686 w207.4321 335.8003 m207.4321 377.0239 LSUuu*u1 O1 0.5 0 0 k1 w533.2036 336.5952 m534.4058 336.5952 L536.1953 331.5171 L535.0459 331.5171 L534.709 332.5718 L532.8506 332.5718 L532.5034 331.5171 L531.3931 331.5171 l533.2036 336.5952 Lf1 D533.1367 333.439 m534.4316 333.439 L533.7939 335.4341 l533.1367 333.439 Lf*U*u0 D536.3838 334.5405 m536.3838 335.2358 L536.9072 335.2358 L536.9072 336.2827 L537.8916 336.2827 L537.8916 335.2358 L538.501 335.2358 L538.501 334.5405 L537.8916 334.5405 L537.8916 332.5503 L537.8916 332.3955 537.9111 332.2998 537.9502 332.2617 c537.9893 332.2236 538.1084 332.2046 538.3081 332.2046 c538.3379 332.2046 538.3696 332.2061 538.4028 332.2085 c538.436 332.2109 538.4688 332.2148 538.501 332.2202 c538.501 331.4858 L538.0322 331.4624 L537.5645 331.4463 537.2451 331.5269 537.0737 331.7041 c536.9629 331.8164 536.9072 331.9902 536.9072 332.2251 c536.9072 334.5405 l536.3838 334.5405 Lf*U*u540.5991 333.8042 m540.7813 333.8271 540.9116 333.8564 540.9897 333.8906 c541.1304 333.9507 541.2007 334.0439 541.2007 334.1709 c541.2007 334.3257 541.1465 334.4326 541.0386 334.4912 c540.9307 334.5503 540.7725 334.5796 540.564 334.5796 c540.3296 334.5796 540.1636 334.5225 540.0664 334.4077 c539.9966 334.3228 539.9502 334.208 539.9272 334.064 c538.9819 334.064 L539.0024 334.3901 539.0947 334.6582 539.2583 334.8682 c539.5186 335.1963 539.9653 335.3608 540.5991 335.3608 c541.0112 335.3608 541.3774 335.2803 541.6978 335.1196 c542.0181 334.959 542.1782 334.6523 542.1782 334.1992 c542.1782 332.4751 L542.1782 332.3555 542.1802 332.2109 542.1851 332.0405 c542.1919 331.9121 542.2114 331.8252 542.2437 331.7793 c542.2754 331.7334 542.3237 331.6953 542.3882 331.6655 c542.3882 331.5171 L541.3213 331.5171 L541.2915 331.5918 541.271 331.6616 541.2593 331.7271 c541.248 331.7925 541.2388 331.8672 541.2319 331.9507 c541.0957 331.8037 540.9395 331.6782 540.7617 331.5747 c540.5498 331.4531 540.3101 331.3921 540.043 331.3921 c539.7021 331.3921 539.4204 331.4897 539.1982 331.6846 c538.9756 331.8794 538.8647 332.1558 538.8647 332.5137 c538.8647 332.9771 539.043 333.313 539.4004 333.5205 c539.5962 333.6338 539.8843 333.7144 540.2642 333.7627 c540.5991 333.8042 Lf1 D541.1973 333.3442 m541.1343 333.3047 541.0713 333.2729 541.0073 333.2485 c540.9438 333.2241 540.856 333.2017 540.7446 333.1807 c540.522 333.1392 L540.3135 333.1021 540.1646 333.0566 540.0752 333.0034 c539.9243 332.9131 539.8491 332.7729 539.8491 332.583 c539.8491 332.4136 539.896 332.291 539.9893 332.2158 c540.083 332.1406 540.1968 332.103 540.3306 332.103 c540.5435 332.103 540.7393 332.1655 540.918 332.291 c541.0972 332.416 541.1899 332.644 541.1973 332.9756 c541.1973 333.3442 Lf*U*u0 D545.1162 335.3589 m545.1284 335.3574 545.1567 335.3555 545.2002 335.353 c545.2002 334.3608 L545.1387 334.3638 545.0835 334.3662 545.0356 334.3672 c544.9873 334.3682 544.9487 334.3687 544.9189 334.3687 c544.5254 334.3687 544.2612 334.2397 544.126 333.9824 c544.0508 333.8379 544.0127 333.6147 544.0127 333.3135 c544.0127 331.5171 L543.0283 331.5171 L543.0283 335.2749 L543.958 335.2749 L543.958 334.6201 L544.1094 334.8691 544.2412 335.0396 544.354 335.1309 c544.5376 335.2842 544.7759 335.3608 545.0698 335.3608 c545.0879 335.3608 545.1035 335.3604 545.1162 335.3589 cf*U*u546.7881 335.7202 m545.7959 335.7202 L545.7959 336.6265 L546.7881 336.6265 l546.7881 335.7202 Lf545.7959 335.2749 m546.7881 335.2749 L546.7881 331.5171 L545.7959 331.5171 l545.7959 335.2749 Lf*U*u549.2686 336.5952 m550.4707 336.5952 L552.2607 331.5171 L551.1113 331.5171 L550.7739 332.5718 L548.916 332.5718 L548.5684 331.5171 L547.458 331.5171 l549.2686 336.5952 Lf1 D549.2017 333.439 m550.4966 333.439 L549.8589 335.4341 l549.2017 333.439 Lf*U*u0 D554.6855 335.2744 m554.9229 335.1758 555.1152 334.9946 555.2612 334.7305 c555.2612 335.2749 L556.23 335.2749 L556.23 331.7144 L556.23 331.23 556.1484 330.8652 555.9854 330.6191 c555.7046 330.1973 555.1665 329.9858 554.3706 329.9858 c553.8901 329.9858 553.498 330.0801 553.1948 330.2681 c552.8911 330.4561 552.7231 330.7373 552.6909 331.1108 c553.7612 331.1108 L553.7886 330.9961 553.833 330.9131 553.8945 330.8623 c553.9995 330.7729 554.1763 330.728 554.4248 330.728 c554.7759 330.728 555.0107 330.8457 555.1294 331.0806 c555.207 331.231 555.2456 331.4844 555.2456 331.8398 c555.2456 332.0791 L555.1519 331.9209 555.0513 331.8018 554.9438 331.7227 c554.7495 331.5752 554.4971 331.5015 554.186 331.5015 c553.7056 331.5015 553.3223 331.6709 553.0352 332.0093 c552.7485 332.3477 552.605 332.8062 552.605 333.3848 c552.605 333.9424 552.7432 334.4111 553.0195 334.791 c553.2964 335.1709 553.688 335.3608 554.1953 335.3608 c554.3828 335.3608 554.5459 335.332 554.6855 335.2744 cf1 D555.0112 332.5747 m555.1675 332.749 555.2456 333.0259 555.2456 333.4063 c555.2456 333.7632 555.1714 334.0352 555.0229 334.2217 c554.8745 334.4082 554.6758 334.5015 554.4263 334.5015 c554.0864 334.5015 553.8516 334.3389 553.7227 334.0142 c553.6548 333.8413 553.6206 333.6284 553.6206 333.375 c553.6206 333.1563 553.6567 332.9614 553.7295 332.791 c553.8608 332.4727 554.0967 332.314 554.4365 332.314 c554.6631 332.314 554.8545 332.4009 555.0112 332.5747 cf*U*u0 D559.584 335.2007 m559.8452 335.0835 560.0605 334.8984 560.231 334.646 c560.3843 334.4229 560.4834 334.1646 560.5288 333.8706 c560.5552 333.6982 560.5659 333.4502 560.561 333.1265 c557.834 333.1265 L557.8496 332.748 557.9805 332.4829 558.2275 332.3311 c558.3774 332.2363 558.5586 332.189 558.77 332.189 c558.9937 332.189 559.1758 332.2461 559.3159 332.3608 c559.3921 332.4229 559.46 332.5088 559.5186 332.6187 c560.5137 332.6187 L560.4873 332.3955 560.3662 332.1694 560.1509 331.9399 c559.8149 331.5747 559.3452 331.3921 558.7412 331.3921 c558.2427 331.3921 557.8027 331.5459 557.4214 331.8545 c557.0405 332.1626 556.8496 332.6641 556.8496 333.3584 c556.8496 334.0093 557.0215 334.5083 557.3652 334.8555 c557.709 335.2026 558.1553 335.3765 558.7036 335.3765 c559.0293 335.3765 559.3228 335.3179 559.584 335.2007 cf1 D558.1133 334.3535 m557.9736 334.2129 557.8857 334.0225 557.8496 333.7827 c559.5527 333.7827 L559.5352 334.0386 559.4473 334.2324 559.2896 334.3652 c559.1318 334.4976 558.9365 334.564 558.7031 334.564 c558.4497 334.564 558.2529 334.4937 558.1133 334.3535 cf*U*u0 D562.7305 333.9468 m564.6445 333.9468 L564.6445 333.0171 L562.7305 333.0171 l562.7305 333.9468 Lf*U*u570.1606 335.875 m570.417 335.4268 570.5454 334.7891 570.5454 333.9629 c570.5454 333.1367 570.417 332.5005 570.1606 332.0537 c569.9038 331.6074 569.4565 331.3843 568.8188 331.3843 c568.1812 331.3843 567.7339 331.6074 567.4775 332.0537 c567.2207 332.5005 567.0923 333.1367 567.0923 333.9629 c567.0923 334.7891 567.2207 335.4268 567.4775 335.875 c567.7339 336.3242 568.1812 336.5483 568.8188 336.5483 c569.4565 336.5483 569.9038 336.3242 570.1606 335.875 cf1 D568.2344 332.6406 m568.3291 332.3345 568.5229 332.1812 568.8164 332.1812 c569.1094 332.1812 569.3018 332.3345 569.3931 332.6406 c569.4844 332.9473 569.5298 333.3896 569.5298 333.9678 c569.5298 334.5742 569.4844 335.0225 569.3931 335.3145 c569.3018 335.6055 569.1094 335.7515 568.8164 335.7515 c568.5229 335.7515 568.3291 335.6055 568.2344 335.3145 c568.1396 335.0225 568.0923 334.5742 568.0923 333.9678 c568.0923 333.3896 568.1396 332.9473 568.2344 332.6406 cf*U*u0 D571.2876 334.9624 m571.2876 335.6343 L571.5962 335.6479 571.8125 335.6685 571.936 335.6958 c572.1328 335.7393 572.293 335.8257 572.417 335.9556 c572.5015 336.0444 572.5654 336.1631 572.6089 336.311 c572.6343 336.3999 572.647 336.4658 572.647 336.5093 c573.4673 336.5093 L573.4673 331.5171 L572.4595 331.5171 L572.4595 334.9624 l571.2876 334.9624 Lf*U*u575.1465 332.5483 m576.1934 332.5483 L576.1934 331.5171 L575.1465 331.5171 l575.1465 332.5483 Lf*U*u577.1235 332.5 m577.2622 332.8335 577.5918 333.186 578.1133 333.5581 c578.5654 333.8813 578.8584 334.1133 578.9927 334.2529 c579.1982 334.4707 579.3008 334.7095 579.3008 334.9688 c579.3008 335.1797 579.2422 335.355 579.124 335.4946 c579.0063 335.6348 578.8379 335.7046 578.6187 335.7046 c578.3184 335.7046 578.1143 335.5933 578.0054 335.3711 c577.9434 335.2427 577.9063 335.0391 577.8945 334.7593 c576.9492 334.7593 L576.9653 335.1831 577.0425 335.5254 577.1807 335.7871 c577.4424 336.2842 577.9082 336.5327 578.5771 336.5327 c579.106 336.5327 579.5269 336.3867 579.8398 336.0942 c580.1523 335.8018 580.3086 335.415 580.3086 334.9336 c580.3086 334.5645 580.1978 334.2368 579.9761 333.9502 c579.8306 333.7598 579.5918 333.5479 579.2593 333.3135 c578.8643 333.0347 L578.6172 332.8604 578.4482 332.7344 578.3569 332.6563 c578.2656 332.5781 578.189 332.4873 578.127 332.3843 c580.3164 332.3843 L580.3164 331.5171 L576.8945 331.5171 l576.9038 331.876 576.98 332.2036 577.1235 332.5 cf*U*u581.7461 333.0405 m581.7461 332.8403 581.7783 332.6748 581.8428 332.5435 c581.9629 332.3018 582.1816 332.1812 582.498 332.1812 c582.6924 332.1812 582.8613 332.2471 583.0059 332.3799 c583.1504 332.5122 583.2227 332.7026 583.2227 332.9517 c583.2227 333.2808 583.0884 333.501 582.8198 333.6113 c582.667 333.6733 582.4263 333.7046 582.0977 333.7046 c582.0977 334.4077 L582.418 334.4121 582.6416 334.4434 582.7686 334.501 c582.9878 334.5977 583.0977 334.7939 583.0977 335.0889 c583.0977 335.2803 583.0415 335.436 582.9297 335.5557 c582.8174 335.6758 582.6602 335.7358 582.457 335.7358 c582.2236 335.7358 582.0522 335.6621 581.9424 335.5146 c581.833 335.3672 581.7803 335.1699 581.7852 334.9233 c580.8711 334.9233 L580.8799 335.1714 580.9224 335.4067 580.9985 335.6299 c581.0786 335.8252 581.2051 336.0054 581.3774 336.1709 c581.5059 336.2881 581.6587 336.3779 581.8354 336.4395 c582.0122 336.502 582.2295 336.5327 582.4868 336.5327 c582.9644 336.5327 583.3496 336.4092 583.6426 336.1616 c583.9355 335.9141 584.082 335.5825 584.082 335.166 c584.082 334.8716 583.9951 334.623 583.8223 334.4204 c583.7129 334.2939 583.5986 334.2075 583.4805 334.1616 c583.5693 334.1616 583.6973 334.0845 583.8643 333.9307 c584.1133 333.6987 584.2383 333.3818 584.2383 332.9795 c584.2383 332.5571 584.0918 332.1855 583.7993 331.8652 c583.5063 331.5444 583.0732 331.3843 582.4995 331.3843 c581.7925 331.3843 581.3013 331.6152 581.0259 332.0762 c580.8813 332.3223 580.8008 332.6436 580.7852 333.0405 c581.7461 333.0405 Lf*U*u584.9487 331.5171 m585.9956 331.5171 L585.9956 332.5483 L584.9487 332.5483 L584.9487 331.5171 lf*U*u589.7651 335.875 m590.0215 335.4268 590.1499 334.7891 590.1499 333.9629 c590.1499 333.1367 590.0215 332.5005 589.7651 332.0537 c589.5083 331.6074 589.061 331.3843 588.4233 331.3843 c587.7856 331.3843 587.3384 331.6074 587.082 332.0537 c586.8252 332.5005 586.6968 333.1367 586.6968 333.9629 c586.6968 334.7891 586.8252 335.4268 587.082 335.875 c587.3384 336.3242 587.7856 336.5483 588.4233 336.5483 c589.061 336.5483 589.5083 336.3242 589.7651 335.875 cf1 D587.8389 332.6406 m587.9336 332.3345 588.1274 332.1812 588.4209 332.1812 c588.7144 332.1812 588.9063 332.3345 588.9976 332.6406 c589.0889 332.9473 589.1343 333.3896 589.1343 333.9678 c589.1343 334.5742 589.0889 335.0225 588.9976 335.3145 c588.9063 335.6055 588.7144 335.7515 588.4209 335.7515 c588.1274 335.7515 587.9336 335.6055 587.8389 335.3145 c587.7441 335.0225 587.6968 334.5742 587.6968 333.9678 c587.6968 333.3896 587.7441 332.9473 587.8389 332.6406 cf*U*u0 D591.5483 333.0405 m591.5483 332.8403 591.5806 332.6748 591.645 332.5435 c591.7651 332.3018 591.9839 332.1812 592.3003 332.1812 c592.4946 332.1812 592.6636 332.2471 592.8081 332.3799 c592.9526 332.5122 593.0249 332.7026 593.0249 332.9517 c593.0249 333.2808 592.8906 333.501 592.6221 333.6113 c592.4692 333.6733 592.2285 333.7046 591.8999 333.7046 c591.8999 334.4077 L592.2202 334.4121 592.4438 334.4434 592.5708 334.501 c592.79 334.5977 592.8999 334.7939 592.8999 335.0889 c592.8999 335.2803 592.8438 335.436 592.7319 335.5557 c592.6196 335.6758 592.4624 335.7358 592.2593 335.7358 c592.0259 335.7358 591.8545 335.6621 591.7446 335.5146 c591.6353 335.3672 591.5825 335.1699 591.5874 334.9233 c590.6733 334.9233 L590.6821 335.1714 590.7246 335.4067 590.8008 335.6299 c590.8809 335.8252 591.0073 336.0054 591.1797 336.1709 c591.3081 336.2881 591.4609 336.3779 591.6377 336.4395 c591.8145 336.502 592.0317 336.5327 592.2891 336.5327 c592.7666 336.5327 593.1519 336.4092 593.4448 336.1616 c593.7378 335.9141 593.8843 335.5825 593.8843 335.166 c593.8843 334.8716 593.7974 334.623 593.6245 334.4204 c593.5151 334.2939 593.4009 334.2075 593.2827 334.1616 c593.3716 334.1616 593.4995 334.0845 593.6665 333.9307 c593.9155 333.6987 594.0405 333.3818 594.0405 332.9795 c594.0405 332.5571 593.894 332.1855 593.6016 331.8652 c593.3086 331.5444 592.8755 331.3843 592.3018 331.3843 c591.5947 331.3843 591.1035 331.6152 590.8281 332.0762 c590.6836 332.3223 590.603 332.6436 590.5874 333.0405 c591.5483 333.0405 Lf*U*u596.4443 333.9468 m598.3584 333.9468 L598.3584 333.0171 L596.4443 333.0171 l596.4443 333.9468 Lf*U*u601.8926 333.0796 m601.9253 332.8491 601.9893 332.6768 602.085 332.563 c602.2603 332.3555 602.5601 332.2515 602.9849 332.2515 c603.2393 332.2515 603.4458 332.2788 603.6045 332.334 c603.9058 332.439 604.0566 332.6348 604.0566 332.9209 c604.0566 333.0884 603.9819 333.2178 603.8325 333.3091 c603.6836 333.3984 603.4492 333.4775 603.1294 333.5469 c602.5835 333.668 L602.0469 333.7881 601.6777 333.918 601.4756 334.0586 c601.1338 334.293 600.9629 334.6592 600.9629 335.1582 c600.9629 335.6133 601.1294 335.9912 601.4624 336.292 c601.7954 336.5933 602.2847 336.7437 602.9302 336.7437 c603.4692 336.7437 603.9287 336.6021 604.3096 336.3193 c604.6899 336.0361 604.8896 335.626 604.9082 335.0874 c603.8926 335.0874 L603.8735 335.3877 603.7383 335.6011 603.4863 335.7275 c603.3184 335.811 603.1099 335.853 602.8604 335.853 c602.5825 335.853 602.3608 335.7983 602.1953 335.6895 c602.0298 335.5801 601.9473 335.4277 601.9473 335.2324 c601.9473 335.0527 602.0288 334.9185 602.1919 334.8301 c602.2969 334.7705 602.52 334.7007 602.8618 334.6201 c603.7476 334.4087 L604.1357 334.3164 604.4268 334.1934 604.6206 334.0391 c604.9214 333.8003 605.0723 333.4541 605.0723 333.0015 c605.0723 332.5371 604.8936 332.1514 604.5361 331.8447 c604.1787 331.5376 603.6738 331.3843 603.0215 331.3843 c602.355 331.3843 601.8311 331.5352 601.4492 331.8364 c601.0674 332.1377 600.877 332.5522 600.877 333.0796 c601.8926 333.0796 Lf*U*u605.3613 334.5405 m605.3613 335.2358 L605.8848 335.2358 L605.8848 336.2827 L606.8691 336.2827 L606.8691 335.2358 L607.4785 335.2358 L607.4785 334.5405 L606.8691 334.5405 L606.8691 332.5503 L606.8691 332.3955 606.8882 332.2998 606.9272 332.2617 c606.9663 332.2236 607.0859 332.2046 607.2856 332.2046 c607.3154 332.2046 607.3467 332.2061 607.3804 332.2085 c607.4136 332.2109 607.4463 332.2148 607.4785 332.2202 c607.4785 331.4858 L607.0098 331.4624 L606.542 331.4463 606.2227 331.5269 606.0513 331.7041 c605.9399 331.8164 605.8848 331.9902 605.8848 332.2251 c605.8848 334.5405 l605.3613 334.5405 Lf*U*u609.5767 333.8042 m609.7588 333.8271 609.8887 333.8564 609.9673 333.8906 c610.1079 333.9507 610.1782 334.0439 610.1782 334.1709 c610.1782 334.3257 610.124 334.4326 610.0161 334.4912 c609.9082 334.5503 609.75 334.5796 609.5415 334.5796 c609.3071 334.5796 609.1411 334.5225 609.0439 334.4077 c608.9741 334.3228 608.9277 334.208 608.9048 334.064 c607.9595 334.064 L607.98 334.3901 608.0723 334.6582 608.2358 334.8682 c608.4961 335.1963 608.9429 335.3608 609.5767 335.3608 c609.9888 335.3608 610.355 335.2803 610.6753 335.1196 c610.9956 334.959 611.1558 334.6523 611.1558 334.1992 c611.1558 332.4751 L611.1558 332.3555 611.1577 332.2109 611.1626 332.0405 c611.1694 331.9121 611.189 331.8252 611.2207 331.7793 c611.2529 331.7334 611.3013 331.6953 611.3657 331.6655 c611.3657 331.5171 L610.2988 331.5171 L610.269 331.5918 610.2485 331.6616 610.2368 331.7271 c610.2256 331.7925 610.2163 331.8672 610.2095 331.9507 c610.0732 331.8037 609.9165 331.6782 609.7393 331.5747 c609.5273 331.4531 609.2876 331.3921 609.0205 331.3921 c608.6797 331.3921 608.3979 331.4897 608.1758 331.6846 c607.9531 331.8794 607.8423 332.1558 607.8423 332.5137 c607.8423 332.9771 608.0205 333.313 608.3779 333.5205 c608.5737 333.6338 608.8613 333.7144 609.2417 333.7627 c609.5767 333.8042 Lf1 D610.1743 333.3442 m610.1118 333.3047 610.0488 333.2729 609.9849 333.2485 c609.9209 333.2241 609.8335 333.2017 609.7222 333.1807 c609.4995 333.1392 L609.291 333.1021 609.1421 333.0566 609.0527 333.0034 c608.9019 332.9131 608.8267 332.7729 608.8267 332.583 c608.8267 332.4136 608.873 332.291 608.9668 332.2158 c609.0601 332.1406 609.1743 332.103 609.3081 332.103 c609.5205 332.103 609.7163 332.1655 609.8955 332.291 c610.0747 332.416 610.1675 332.644 610.1743 332.9756 c610.1743 333.3442 Lf*U*u0 D614.2559 333.9233 m614.2373 334.064 614.1899 334.1909 614.1138 334.3042 c614.0029 334.4565 613.8311 334.5327 613.5977 334.5327 c613.2651 334.5327 613.0376 334.3677 612.9155 334.0376 c612.8506 333.8633 612.8184 333.6323 612.8184 333.3438 c612.8184 333.0693 612.8506 332.8481 612.915 332.6812 c613.0317 332.3633 613.252 332.2046 613.5757 332.2046 c613.8052 332.2046 613.9683 332.2676 614.0645 332.3936 c614.1611 332.52 614.2197 332.6836 614.2402 332.8843 c615.2402 332.8843 L615.2173 332.5854 615.1099 332.3027 614.918 332.0366 c614.6113 331.6069 614.1572 331.3921 613.5557 331.3921 c612.9541 331.3921 612.5117 331.5703 612.228 331.9263 c611.9443 332.2822 611.8027 332.7461 611.8027 333.3184 c611.8027 333.9639 611.9604 334.4658 612.2754 334.8237 c612.5908 335.1816 613.0259 335.3608 613.5801 335.3608 c614.0518 335.3608 614.438 335.2549 614.7383 335.0439 c615.0386 334.832 615.2163 334.459 615.2715 333.9233 c614.2559 333.9233 Lf*U*u615.9272 336.5718 m616.8882 336.5718 L616.8882 333.8389 L618.1187 335.2515 L619.3364 335.2515 L617.9966 333.8535 L619.3882 331.5171 L618.1987 331.5171 L617.2939 333.1206 L616.8882 332.6978 L616.8882 331.5171 L615.9272 331.5171 l615.9272 336.5718 Lf*U*u622.3022 335.2007 m622.563 335.0835 622.7788 334.8984 622.9487 334.646 c623.1021 334.4229 623.2017 334.1646 623.2471 333.8706 c623.2734 333.6982 623.2842 333.4502 623.2793 333.1265 c620.5522 333.1265 L620.5674 332.748 620.6987 332.4829 620.9453 332.3311 c621.0957 332.2363 621.2764 332.189 621.4878 332.189 c621.7119 332.189 621.894 332.2461 622.0342 332.3608 c622.1104 332.4229 622.1777 332.5088 622.2363 332.6187 c623.2319 332.6187 L623.2056 332.3955 623.0845 332.1694 622.8687 331.9399 c622.5332 331.5747 622.063 331.3921 621.459 331.3921 c620.9604 331.3921 620.5205 331.5459 620.1396 331.8545 c619.7583 332.1626 619.5679 332.6641 619.5679 333.3584 c619.5679 334.0093 619.7397 334.5083 620.0835 334.8555 c620.4272 335.2026 620.873 335.3765 621.4219 335.3765 c621.7476 335.3765 622.041 335.3179 622.3022 335.2007 cf1 D620.8311 334.3535 m620.6914 334.2129 620.6035 334.0225 620.5679 333.7827 c622.271 333.7827 L622.2529 334.0386 622.165 334.2324 622.0078 334.3652 c621.8501 334.4976 621.6543 334.564 621.4214 334.564 c621.1675 334.564 620.9707 334.4937 620.8311 334.3535 cf*U*u0 D625.7788 335.2109 m625.9551 335.1104 626.0981 334.9717 626.208 334.7949 c626.208 336.5874 L627.2002 336.5874 L627.2002 331.5171 L626.2471 331.5171 L626.2471 332.021 L626.1074 331.8013 625.9482 331.6416 625.77 331.5415 c625.5913 331.4419 625.3691 331.3921 625.104 331.3921 c624.6665 331.3921 624.2988 331.5698 624 331.9253 c623.7012 332.2808 623.5518 332.7368 623.5518 333.2935 c623.5518 333.9355 623.6992 334.4404 623.9937 334.8086 c624.2881 335.1768 624.6812 335.3608 625.1738 335.3608 c625.4009 335.3608 625.6021 335.3105 625.7788 335.2109 cf1 D626.0161 332.5176 m626.1597 332.7256 626.2314 332.9956 626.2314 333.3271 c626.2314 333.79 626.1177 334.1216 625.8896 334.3208 c625.748 334.4414 625.5835 334.5015 625.3965 334.5015 c625.1108 334.5015 624.9014 334.3921 624.7681 334.1729 c624.6343 333.9541 624.5674 333.6826 624.5674 333.3584 c624.5674 333.0083 624.6353 332.7285 624.771 332.519 c624.9063 332.3096 625.1118 332.2046 625.3877 332.2046 c625.6631 332.2046 625.8726 332.3086 626.0161 332.5176 cf*U*u0 D630.6138 336.0635 m631.0205 336.4805 631.5386 336.689 632.167 336.689 c633.0078 336.689 633.6226 336.4097 634.0112 335.8516 c634.2261 335.5381 634.3413 335.2236 634.3574 334.9077 c633.3027 334.9077 L633.2354 335.1494 633.1494 335.3315 633.0444 335.4546 c632.8569 335.6733 632.5791 335.7827 632.2104 335.7827 c631.8354 335.7827 631.5396 335.6274 631.3228 335.3169 c631.106 335.0068 630.998 334.5674 630.998 333.999 c630.998 333.4312 631.1118 333.0059 631.3398 332.7227 c631.5684 332.4395 631.8579 332.2983 632.21 332.2983 c632.5703 332.2983 632.8452 332.4199 633.0342 332.6631 c633.1387 332.7939 633.2256 332.9902 633.2949 333.2515 c634.3496 333.2515 L634.2588 332.6992 634.0278 332.2495 633.6558 331.9033 c633.2837 331.5571 632.8071 331.3843 632.2256 331.3843 c631.5063 331.3843 630.9409 331.6182 630.5293 332.0854 c630.1177 332.5557 629.9121 333.1992 629.9121 334.0176 c629.9121 334.9023 630.146 335.584 630.6138 336.0635 cf*U*u636.145 335.7202 m635.1528 335.7202 L635.1528 336.6265 L636.145 336.6265 l636.145 335.7202 Lf635.1528 335.2749 m636.145 335.2749 L636.145 331.5171 L635.1528 331.5171 l635.1528 335.2749 Lf*U*u639.1758 335.3589 m639.1885 335.3574 639.2163 335.3555 639.2603 335.353 c639.2603 334.3608 L639.1982 334.3638 639.1436 334.3662 639.0952 334.3672 c639.0474 334.3682 639.0083 334.3687 638.9785 334.3687 c638.585 334.3687 638.3208 334.2397 638.186 333.9824 c638.1104 333.8379 638.0728 333.6147 638.0728 333.3135 c638.0728 331.5171 L637.0884 331.5171 L637.0884 335.2749 L638.0181 335.2749 L638.0181 334.6201 L638.1694 334.8691 638.3013 335.0396 638.4136 335.1309 c638.5972 335.2842 638.8359 335.3608 639.1294 335.3608 c639.1475 335.3608 639.1631 335.3604 639.1758 335.3589 cf*U*u642.0825 333.9233 m642.064 334.064 642.0166 334.1909 641.9404 334.3042 c641.8296 334.4565 641.6572 334.5327 641.4243 334.5327 c641.0918 334.5327 640.8643 334.3677 640.7417 334.0376 c640.6772 333.8633 640.645 333.6323 640.645 333.3438 c640.645 333.0693 640.6768 332.8481 640.7412 332.6812 c640.8584 332.3633 641.0786 332.2046 641.4023 332.2046 c641.6318 332.2046 641.7944 332.2676 641.8911 332.3936 c641.9873 332.52 642.0459 332.6836 642.0669 332.8843 c643.0669 332.8843 L643.0439 332.5854 642.9365 332.3027 642.7441 332.0366 c642.4375 331.6069 641.9839 331.3921 641.3823 331.3921 c640.7808 331.3921 640.3384 331.5703 640.0547 331.9263 c639.771 332.2822 639.6294 332.7461 639.6294 333.3184 c639.6294 333.9639 639.7866 334.4658 640.1021 334.8237 c640.417 335.1816 640.8521 335.3608 641.4067 335.3608 c641.8784 335.3608 642.2642 335.2549 642.5645 335.0439 c642.8647 334.832 643.0425 334.459 643.0981 333.9233 c642.0825 333.9233 Lf*U*u644.7695 331.5171 m643.7852 331.5171 L643.7852 336.5874 L644.7695 336.5874 l644.7695 331.5171 Lf*U*u648.166 335.2007 m648.4272 335.0835 648.6426 334.8984 648.813 334.646 c648.9663 334.4229 649.0654 334.1646 649.1108 333.8706 c649.1372 333.6982 649.1479 333.4502 649.1431 333.1265 c646.416 333.1265 L646.4316 332.748 646.5625 332.4829 646.8096 332.3311 c646.9595 332.2363 647.1406 332.189 647.3521 332.189 c647.5757 332.189 647.7578 332.2461 647.8979 332.3608 c647.9741 332.4229 648.042 332.5088 648.1006 332.6187 c649.0957 332.6187 L649.0693 332.3955 648.9482 332.1694 648.7329 331.9399 c648.397 331.5747 647.9272 331.3921 647.3232 331.3921 c646.8247 331.3921 646.3848 331.5459 646.0034 331.8545 c645.6226 332.1626 645.4316 332.6641 645.4316 333.3584 c645.4316 334.0093 645.6035 334.5083 645.9473 334.8555 c646.291 335.2026 646.7373 335.3765 647.2856 335.3765 c647.6113 335.3765 647.9048 335.3179 648.166 335.2007 cf1 D646.6953 334.3535 m646.5557 334.2129 646.4678 334.0225 646.4316 333.7827 c648.1348 333.7827 L648.1172 334.0386 648.0293 334.2324 647.8716 334.3652 c647.7139 334.4976 647.5186 334.564 647.2852 334.564 c647.0317 334.564 646.835 334.4937 646.6953 334.3535 cf*UU0 D1 R1 0.5 0 0 K0.3686 w531.1079 342.4507 m662.2329 342.4507 LS1 O1 0.5 0 0 k1 w663.8071 342.438 m662.5229 341.9526 660.9321 341.1245 659.9448 340.2476 C660.7222 342.438 L659.9448 344.6294 L660.9321 343.7524 662.5229 342.9233 663.8071 342.438 Cf1 R1 0.5 0 0 K0.3686 w665.144 335.8101 m665.144 377.0337 LSUu*u1 O1 0.5 0 0 k1 w176.8857 511.7163 m179.1279 511.7163 L182.4736 502.2319 L180.3276 502.2319 L179.7031 504.1851 L176.2173 504.1851 L175.5732 502.2319 L173.501 502.2319 l176.8857 511.7163 Lf1 D176.7534 505.8101 m179.1826 505.8101 L177.9863 509.5479 l176.7534 505.8101 Lf*U*u0 D182.8037 507.8726 m182.8037 509.1694 L183.7881 509.1694 L183.7881 511.1382 L185.6162 511.1382 L185.6162 509.1694 L186.7568 509.1694 L186.7568 507.8726 L185.6162 507.8726 L185.6162 504.1714 L185.6162 503.8843 185.6528 503.7056 185.7256 503.6348 c185.7988 503.564 186.022 503.5288 186.396 503.5288 c186.4517 503.5288 186.5107 503.5313 186.5732 503.5366 c186.6353 503.542 186.6968 503.5498 186.7568 503.5601 c186.7568 502.1851 L185.8838 502.1382 L185.0127 502.1084 184.4175 502.2578 184.0986 502.5879 c183.8916 502.7979 183.7881 503.1216 183.7881 503.5586 c183.7881 507.8726 l182.8037 507.8726 Lf*U*u190.6978 506.5029 m191.0396 506.5459 191.2842 506.5996 191.4316 506.6641 c191.6958 506.7764 191.8276 506.9512 191.8276 507.188 c191.8276 507.4766 191.7256 507.6758 191.522 507.7861 c191.3184 507.8955 191.019 507.9507 190.6245 507.9507 c190.1816 507.9507 189.8687 507.8428 189.6846 507.6279 c189.5527 507.4688 189.4653 507.2529 189.4214 506.9819 c187.6558 506.9819 L187.6948 507.5908 187.8672 508.0918 188.1738 508.4834 c188.6611 509.0967 189.4985 509.4038 190.6851 509.4038 c191.4575 509.4038 192.1436 509.2549 192.7432 508.958 c193.3428 508.6611 193.6431 508.0889 193.6431 507.2412 c193.6431 504.0137 L193.6431 503.79 193.647 503.519 193.6558 503.2007 c193.6685 502.96 193.7046 502.7959 193.7637 502.71 c193.8232 502.624 193.9121 502.5532 194.0308 502.4976 c194.0308 502.2319 L192.042 502.2319 L191.9863 502.3711 191.9478 502.502 191.9263 502.624 c191.9048 502.7461 191.8872 502.8853 191.8745 503.041 c191.6196 502.7666 191.3262 502.5322 190.9937 502.3389 c190.5962 502.1113 190.147 501.9976 189.646 501.9976 c189.0068 501.9976 188.479 502.1797 188.062 502.5439 c187.6455 502.9077 187.437 503.4238 187.437 504.0918 c187.437 504.958 187.7725 505.585 188.4438 505.9727 c188.812 506.1836 189.353 506.335 190.0674 506.4253 c190.6978 506.5029 Lf1 D191.8213 505.6396 m191.7026 505.5664 191.5835 505.5068 191.4629 505.4619 c191.3423 505.416 191.1768 505.374 190.9663 505.335 c190.5459 505.2578 L190.1514 505.1885 189.8687 505.104 189.6982 505.0049 c189.4097 504.8359 189.2651 504.5747 189.2651 504.2202 c189.2651 503.9048 189.354 503.6768 189.5313 503.5361 c189.7085 503.3955 189.9243 503.3257 190.1787 503.3257 c190.5815 503.3257 190.9526 503.4424 191.292 503.6758 c191.6313 503.9092 191.8081 504.335 191.8213 504.9531 c191.8213 505.6396 Lf*U*u0 D199.1011 509.3999 m199.1245 509.3975 199.1768 509.3936 199.2578 509.3882 c199.2578 507.5288 L199.1426 507.5352 199.04 507.5391 198.9502 507.541 c198.8604 507.543 198.7876 507.5444 198.7319 507.5444 c197.9966 507.5444 197.5029 507.3047 197.251 506.8252 c197.1099 506.5547 197.0391 506.1396 197.0391 505.5791 c197.0391 502.2319 L195.2109 502.2319 L195.2109 509.2476 L196.9453 509.2476 L196.9453 508.0171 L197.2271 508.4834 197.4727 508.8022 197.6821 508.9736 c198.0234 509.2603 198.4678 509.4038 199.0146 509.4038 c199.0488 509.4038 199.0776 509.4023 199.1011 509.3999 cf*U*u202.2397 510.0913 m200.3804 510.0913 L200.3804 511.7632 L202.2397 511.7632 l202.2397 510.0913 Lf200.3804 509.2476 m202.2397 509.2476 L202.2397 502.2319 L200.3804 502.2319 l200.3804 509.2476 Lf*U*u206.875 511.7163 m209.1177 511.7163 L212.4634 502.2319 L210.3174 502.2319 L209.6924 504.1851 L206.207 504.1851 L205.563 502.2319 L203.4907 502.2319 l206.875 511.7163 Lf1 D206.7432 505.8101 m209.1724 505.8101 L207.9756 509.5479 l206.7432 505.8101 Lf*U*u0 D216.9819 509.2441 m217.4263 509.061 217.7856 508.7246 218.0591 508.2354 c218.0591 509.2476 L219.856 509.2476 L219.856 502.5996 L219.856 501.6953 219.7041 501.0142 219.3999 500.5557 c218.877 499.7666 217.8745 499.3726 216.3921 499.3726 c215.4966 499.3726 214.7661 499.5488 214.2007 499.9014 c213.6353 500.2539 213.3223 500.7813 213.2622 501.4819 c215.2622 501.4819 L215.313 501.2661 215.396 501.1108 215.5107 501.0156 c215.7061 500.8477 216.0356 500.7632 216.4985 500.7632 c217.1528 500.7632 217.5903 500.9819 217.8115 501.4189 c217.9556 501.6992 218.0278 502.1709 218.0278 502.833 c218.0278 503.2788 L217.8525 502.9829 217.6646 502.7607 217.4639 502.6128 c217.1001 502.3379 216.6279 502.2007 216.0464 502.2007 c215.1484 502.2007 214.4316 502.5166 213.895 503.1484 c213.3584 503.7803 213.0903 504.6357 213.0903 505.7158 c213.0903 506.7563 213.3491 507.6313 213.8662 508.3403 c214.3833 509.0493 215.1162 509.4038 216.0654 509.4038 c216.4155 509.4038 216.7212 509.3506 216.9819 509.2441 cf1 D217.5879 504.2046 m217.8813 504.5303 218.0278 505.0488 218.0278 505.7598 c218.0278 506.4282 217.8887 506.937 217.6104 507.2861 c217.332 507.6353 216.959 507.8101 216.4917 507.8101 c215.854 507.8101 215.4146 507.5059 215.1724 506.8984 c215.0449 506.5747 214.981 506.1758 214.981 505.7017 c214.981 505.292 215.0488 504.9277 215.1851 504.6089 c215.4316 504.0137 215.8735 503.7163 216.5107 503.7163 c216.9355 503.7163 217.2949 503.8789 217.5879 504.2046 cf*U*u0 D226.1182 509.1064 m226.6064 508.8877 227.0098 508.5425 227.3276 508.0703 c227.6143 507.6543 227.7998 507.1714 227.8853 506.6221 c227.9346 506.3003 227.9546 505.8369 227.9453 505.2319 c222.834 505.2319 L222.8623 504.5259 223.1069 504.0308 223.5674 503.7466 c223.8472 503.5703 224.1841 503.4819 224.5776 503.4819 c224.9951 503.4819 225.3345 503.5879 225.5957 503.8008 c225.7378 503.9155 225.8638 504.0747 225.9727 504.2788 c227.8496 504.2788 L227.8003 503.8643 227.5742 503.4434 227.1714 503.0166 c226.5444 502.3369 225.667 501.9976 224.5386 501.9976 c223.6074 501.9976 222.7856 502.2852 222.0737 502.8604 c221.3618 503.4355 221.0059 504.3716 221.0059 505.668 c221.0059 506.8828 221.3271 507.8145 221.9697 508.4629 c222.6123 509.1108 223.4468 509.4351 224.4727 509.4351 c225.0815 509.4351 225.6299 509.3252 226.1182 509.1064 cf1 D223.356 507.5234 m223.0957 507.2598 222.9321 506.9019 222.8652 506.4507 c226.0371 506.4507 L226.0039 506.9316 225.8403 507.2969 225.5469 507.5459 c225.2529 507.7949 224.8892 507.9194 224.4551 507.9194 c223.9824 507.9194 223.6157 507.7871 223.356 507.5234 cf*U*u0 D232.687 511.7163 m234.6558 511.7163 L234.6558 503.9351 L239.3745 503.9351 L239.3745 502.2319 L232.687 502.2319 l232.687 511.7163 Lf*U*u246.4189 503.0928 m245.8281 502.3623 244.9307 501.9976 243.7275 501.9976 c242.5239 501.9976 241.6265 502.3623 241.0356 503.0928 c240.4448 503.8223 240.1494 504.7012 240.1494 505.7285 c240.1494 506.7393 240.4448 507.6143 241.0356 508.3555 c241.6265 509.0957 242.5239 509.4663 243.7275 509.4663 c244.9307 509.4663 245.8281 509.0957 246.4189 508.3555 c247.0098 507.6143 247.3057 506.7393 247.3057 505.7285 c247.3057 504.7012 247.0098 503.8223 246.4189 503.0928 cf1 D244.9521 504.0874 m245.2397 504.4702 245.3838 505.0142 245.3838 505.7197 c245.3838 506.4248 245.2397 506.9678 244.9521 507.3486 c244.6641 507.729 244.252 507.9194 243.7148 507.9194 c243.1782 507.9194 242.7646 507.729 242.4746 507.3486 c242.1846 506.9678 242.04 506.4248 242.04 505.7197 c242.04 505.0142 242.1846 504.4702 242.4746 504.0874 c242.7646 503.7046 243.1782 503.5132 243.7148 503.5132 c244.252 503.5132 244.6641 503.7046 244.9521 504.0874 cf*U*u0 D252.0815 509.2441 m252.5259 509.061 252.8848 508.7246 253.1587 508.2354 c253.1587 509.2476 L254.9556 509.2476 L254.9556 502.5996 L254.9556 501.6953 254.8032 501.0142 254.499 500.5557 c253.9766 499.7666 252.9741 499.3726 251.4917 499.3726 c250.5962 499.3726 249.8652 499.5488 249.2998 499.9014 c248.7344 500.2539 248.4219 500.7813 248.3618 501.4819 c250.3618 501.4819 L250.4126 501.2661 250.4956 501.1108 250.6104 501.0156 c250.8057 500.8477 251.1348 500.7632 251.5981 500.7632 c252.252 500.7632 252.6895 500.9819 252.9106 501.4189 c253.0552 501.6992 253.1274 502.1709 253.1274 502.833 c253.1274 503.2788 L252.9521 502.9829 252.7637 502.7607 252.563 502.6128 c252.1997 502.3379 251.7271 502.2007 251.146 502.2007 c250.248 502.2007 249.5308 502.5166 248.9946 503.1484 c248.458 503.7803 248.1899 504.6357 248.1899 505.7158 c248.1899 506.7563 248.4482 507.6313 248.9653 508.3403 c249.4824 509.0493 250.2158 509.4038 251.1646 509.4038 c251.5151 509.4038 251.8208 509.3506 252.0815 509.2441 cf1 D252.6875 504.2046 m252.9805 504.5303 253.1274 505.0488 253.1274 505.7598 c253.1274 506.4282 252.9883 506.937 252.71 507.2861 c252.4316 507.6353 252.0586 507.8101 251.5913 507.8101 c250.9536 507.8101 250.5137 507.5059 250.2715 506.8984 c250.144 506.5747 250.0806 506.1758 250.0806 505.7017 c250.0806 505.292 250.1484 504.9277 250.2842 504.6089 c250.5308 504.0137 250.9727 503.7163 251.6104 503.7163 c252.0352 503.7163 252.394 503.8789 252.6875 504.2046 cf*U*u0 D262.5 503.0928 m261.9092 502.3623 261.0117 501.9976 259.8086 501.9976 c258.605 501.9976 257.7075 502.3623 257.1167 503.0928 c256.5259 503.8223 256.2305 504.7012 256.2305 505.7285 c256.2305 506.7393 256.5259 507.6143 257.1167 508.3555 c257.7075 509.0957 258.605 509.4663 259.8086 509.4663 c261.0117 509.4663 261.9092 509.0957 262.5 508.3555 c263.0908 507.6143 263.3867 506.7393 263.3867 505.7285 c263.3867 504.7012 263.0908 503.8223 262.5 503.0928 cf1 D261.0332 504.0874 m261.3208 504.4702 261.4648 505.0142 261.4648 505.7197 c261.4648 506.4248 261.3208 506.9678 261.0332 507.3486 c260.7451 507.729 260.333 507.9194 259.7959 507.9194 c259.2593 507.9194 258.8457 507.729 258.5557 507.3486 c258.2656 506.9678 258.1211 506.4248 258.1211 505.7197 c258.1211 505.0142 258.2656 504.4702 258.5557 504.0874 c258.8457 503.7046 259.2593 503.5132 259.7959 503.5132 c260.333 503.5132 260.7451 503.7046 261.0332 504.0874 cf*U*u0 D275.397 510.0444 m270.5063 510.0444 L270.5063 508.0288 L274.9907 508.0288 L274.9907 506.4038 L270.5063 506.4038 L270.5063 503.9351 L275.6313 503.9351 L275.6313 502.2319 L268.5688 502.2319 L268.5688 511.7163 L275.397 511.7163 l275.397 510.0444 Lf*U*u281.4468 509.2476 m283.4126 509.2476 L280.8857 502.2319 L278.9541 502.2319 L276.4419 509.2476 L278.4985 509.2476 L279.9575 504.0728 l281.4468 509.2476 Lf*U*u290.2983 503.0928 m289.707 502.3623 288.8101 501.9976 287.6064 501.9976 c286.4028 501.9976 285.5059 502.3623 284.915 503.0928 c284.3237 503.8223 284.0283 504.7012 284.0283 505.7285 c284.0283 506.7393 284.3237 507.6143 284.915 508.3555 c285.5059 509.0957 286.4028 509.4663 287.6064 509.4663 c288.8101 509.4663 289.707 509.0957 290.2983 508.3555 c290.8892 507.6143 291.1846 506.7393 291.1846 505.7285 c291.1846 504.7012 290.8892 503.8223 290.2983 503.0928 cf1 D288.8311 504.0874 m289.1187 504.4702 289.2627 505.0142 289.2627 505.7197 c289.2627 506.4248 289.1187 506.9678 288.8311 507.3486 c288.5435 507.729 288.1309 507.9194 287.5942 507.9194 c287.0571 507.9194 286.644 507.729 286.354 507.3486 c286.064 506.9678 285.9189 506.4248 285.9189 505.7197 c285.9189 505.0142 286.064 504.4702 286.354 504.0874 c286.644 503.7046 287.0571 503.5132 287.5942 503.5132 c288.1309 503.5132 288.5435 503.7046 288.8311 504.0874 cf*U*u0 D294.3657 502.2319 m292.5376 502.2319 L292.5376 511.7007 L294.3657 511.7007 l294.3657 502.2319 Lf*U*u297.9917 509.2476 m297.9917 505.0244 L297.9917 504.626 298.0386 504.3262 298.1323 504.125 c298.2988 503.769 298.625 503.5913 299.1113 503.5913 c299.7339 503.5913 300.1602 503.8438 300.3906 504.3496 c300.5103 504.624 300.5698 504.9863 300.5698 505.436 c300.5698 509.2476 L302.4292 509.2476 L302.4292 502.2319 L300.6479 502.2319 L300.6479 503.2285 L300.6309 503.207 300.5879 503.1426 300.5195 503.0342 c300.4507 502.9268 300.3691 502.8315 300.2749 502.7495 c299.9878 502.4902 299.71 502.313 299.4419 502.2178 c299.1738 502.123 298.8599 502.0757 298.5 502.0757 c297.4624 502.0757 296.7637 502.4512 296.4033 503.2031 c296.2017 503.6143 296.1011 504.2207 296.1011 505.0225 c296.1011 509.2476 l297.9917 509.2476 Lf*U*u303.4697 507.8726 m303.4697 509.1694 L304.4541 509.1694 L304.4541 511.1382 L306.2822 511.1382 L306.2822 509.1694 L307.4229 509.1694 L307.4229 507.8726 L306.2822 507.8726 L306.2822 504.1714 L306.2822 503.8843 306.3188 503.7056 306.3916 503.6348 c306.4648 503.564 306.688 503.5288 307.062 503.5288 c307.1177 503.5288 307.1768 503.5313 307.2393 503.5366 c307.3013 503.542 307.3628 503.5498 307.4229 503.5601 c307.4229 502.1851 L306.5498 502.1382 L305.6787 502.1084 305.0835 502.2578 304.7646 502.5879 c304.5576 502.7979 304.4541 503.1216 304.4541 503.5586 c304.4541 507.8726 l303.4697 507.8726 Lf*U*u310.4624 510.0913 m308.603 510.0913 L308.603 511.7632 L310.4624 511.7632 l310.4624 510.0913 Lf308.603 509.2476 m310.4624 509.2476 L310.4624 502.2319 L308.603 502.2319 l308.603 509.2476 Lf*U*u318.0771 503.0928 m317.4858 502.3623 316.5889 501.9976 315.3853 501.9976 c314.1816 501.9976 313.2847 502.3623 312.6938 503.0928 c312.1025 503.8223 311.8071 504.7012 311.8071 505.7285 c311.8071 506.7393 312.1025 507.6143 312.6938 508.3555 c313.2847 509.0957 314.1816 509.4663 315.3853 509.4663 c316.5889 509.4663 317.4858 509.0957 318.0771 508.3555 c318.668 507.6143 318.9634 506.7393 318.9634 505.7285 c318.9634 504.7012 318.668 503.8223 318.0771 503.0928 cf1 D316.6099 504.0874 m316.8975 504.4702 317.0415 505.0142 317.0415 505.7197 c317.0415 506.4248 316.8975 506.9678 316.6099 507.3486 c316.3223 507.729 315.9097 507.9194 315.373 507.9194 c314.8359 507.9194 314.4229 507.729 314.1328 507.3486 c313.8428 506.9678 313.6978 506.4248 313.6978 505.7197 c313.6978 505.0142 313.8428 504.4702 314.1328 504.0874 c314.4229 503.7046 314.8359 503.5132 315.373 503.5132 c315.9097 503.5132 316.3223 503.7046 316.6099 504.0874 cf*U*u0 D325.9258 508.8389 m326.3843 508.4619 326.6133 507.834 326.6133 506.9551 c326.6133 502.2319 L324.7227 502.2319 L324.7227 506.498 L324.7227 506.8672 324.6743 507.1504 324.5771 507.3477 c324.3999 507.708 324.0625 507.8882 323.5649 507.8882 c322.9536 507.8882 322.5337 507.624 322.3062 507.0967 c322.188 506.8179 322.1289 506.4619 322.1289 506.0283 c322.1289 502.2319 L320.3008 502.2319 L320.3008 509.2319 L322.0664 509.2319 L322.0664 508.21 L322.3008 508.5674 322.5225 508.8247 322.7314 508.9824 c323.1064 509.2632 323.582 509.4038 324.1577 509.4038 c324.8779 509.4038 325.4673 509.2153 325.9258 508.8389 cf*U*u333.0298 510.7178 m333.7905 511.498 334.7583 511.8882 335.9336 511.8882 c337.5059 511.8882 338.6558 511.3643 339.3828 510.3164 c339.7842 509.7275 340 509.1372 340.0298 508.5444 c338.061 508.5444 L337.9355 509.0059 337.7744 509.3545 337.5781 509.5894 c337.2271 510.0073 336.707 510.2163 336.0176 510.2163 c335.3154 510.2163 334.7617 509.9248 334.3564 509.3413 c333.9512 508.7578 333.7485 507.9326 333.7485 506.8652 c333.7485 505.7979 333.9619 504.998 334.3887 504.4668 c334.8154 503.9351 335.3574 503.6694 336.0156 503.6694 c336.6899 503.6694 337.2041 503.8965 337.5581 504.3511 c337.7539 504.5952 337.916 504.9619 338.0454 505.4507 c340.0142 505.4507 L339.8447 504.4199 339.4126 503.5811 338.7168 502.9355 c338.021 502.2891 337.1299 501.9663 336.043 501.9663 c334.6982 501.9663 333.6411 502.4033 332.8716 503.2783 c332.1021 504.1567 331.7173 505.3613 331.7173 506.8916 c331.7173 508.5469 332.1548 509.8218 333.0298 510.7178 cf*U*u346.5308 509.2095 m346.8833 509.0591 347.1733 508.8291 347.3999 508.5205 c347.5923 508.2578 347.71 507.9883 347.7529 507.7119 c347.7954 507.4346 347.8169 506.9824 347.8169 506.3555 c347.8169 502.2319 L345.9263 502.2319 L345.9263 506.5117 L345.9263 506.8906 345.8628 507.1963 345.7358 507.4287 c345.5703 507.7559 345.2568 507.9194 344.7949 507.9194 c344.3159 507.9194 343.9526 507.7568 343.7046 507.4316 c343.4565 507.1069 343.3325 506.6436 343.3325 506.041 c343.3325 502.2319 L341.5044 502.2319 L341.5044 511.6694 L343.3325 511.6694 L343.3325 508.3477 L343.5977 508.7529 343.9043 509.0352 344.2529 509.1953 c344.6016 509.355 344.9683 509.4351 345.3535 509.4351 c345.7852 509.4351 346.1777 509.3599 346.5308 509.2095 cf*U*u352.3057 506.5029 m352.6475 506.5459 352.8921 506.5996 353.0396 506.6641 c353.3037 506.7764 353.4355 506.9512 353.4355 507.188 c353.4355 507.4766 353.3335 507.6758 353.1299 507.7861 c352.9263 507.8955 352.627 507.9507 352.2324 507.9507 c351.7896 507.9507 351.4766 507.8428 351.2925 507.6279 c351.1606 507.4688 351.0732 507.2529 351.0293 506.9819 c349.2637 506.9819 L349.3027 507.5908 349.4751 508.0918 349.7817 508.4834 c350.269 509.0967 351.1064 509.4038 352.293 509.4038 c353.0654 509.4038 353.7515 509.2549 354.3511 508.958 c354.9507 508.6611 355.251 508.0889 355.251 507.2412 c355.251 504.0137 L355.251 503.79 355.2549 503.519 355.2637 503.2007 c355.2764 502.96 355.3125 502.7959 355.3716 502.71 c355.4312 502.624 355.52 502.5532 355.6387 502.4976 c355.6387 502.2319 L353.6499 502.2319 L353.5942 502.3711 353.5557 502.502 353.5342 502.624 c353.5127 502.7461 353.4951 502.8853 353.4824 503.041 c353.2275 502.7666 352.9341 502.5322 352.6016 502.3389 c352.2041 502.1113 351.7549 501.9976 351.2539 501.9976 c350.6147 501.9976 350.0869 502.1797 349.6699 502.5439 c349.2534 502.9077 349.0449 503.4238 349.0449 504.0918 c349.0449 504.958 349.3804 505.585 350.0518 505.9727 c350.4199 506.1836 350.9609 506.335 351.6753 506.4253 c352.3057 506.5029 Lf1 D353.4292 505.6396 m353.3105 505.5664 353.1914 505.5068 353.0708 505.4619 c352.9502 505.416 352.7847 505.374 352.5742 505.335 c352.1538 505.2578 L351.7593 505.1885 351.4766 505.104 351.3062 505.0049 c351.0176 504.8359 350.873 504.5747 350.873 504.2202 c350.873 503.9048 350.9619 503.6768 351.1392 503.5361 c351.3164 503.3955 351.5322 503.3257 351.7866 503.3257 c352.1895 503.3257 352.5605 503.4424 352.8999 503.6758 c353.2393 503.9092 353.416 504.335 353.4292 504.9531 c353.4292 505.6396 Lf*U*u0 D360.7085 509.3999 m360.7319 509.3975 360.7842 509.3936 360.8657 509.3882 c360.8657 507.5288 L360.75 507.5352 360.6475 507.5391 360.5576 507.541 c360.4678 507.543 360.3955 507.5444 360.3398 507.5444 c359.6045 507.5444 359.1104 507.3047 358.8584 506.8252 c358.7173 506.5547 358.647 506.1396 358.647 505.5791 c358.647 502.2319 L356.8188 502.2319 L356.8188 509.2476 L358.5532 509.2476 L358.5532 508.0171 L358.835 508.4834 359.0806 508.8022 359.2896 508.9736 c359.6313 509.2603 360.0752 509.4038 360.6221 509.4038 c360.6563 509.4038 360.6851 509.4023 360.7085 509.3999 cf*U*u361.2383 507.8726 m361.2383 509.1694 L362.2227 509.1694 L362.2227 511.1382 L364.0508 511.1382 L364.0508 509.1694 L365.1914 509.1694 L365.1914 507.8726 L364.0508 507.8726 L364.0508 504.1714 L364.0508 503.8843 364.0869 503.7056 364.1602 503.6348 c364.2329 503.564 364.4565 503.5288 364.8306 503.5288 c364.8862 503.5288 364.9453 503.5313 365.0073 503.5366 c365.0698 503.542 365.1309 503.5498 365.1914 503.5601 c365.1914 502.1851 L364.3184 502.1382 L363.4473 502.1084 362.8521 502.2578 362.5332 502.5879 c362.3262 502.7979 362.2227 503.1216 362.2227 503.5586 c362.2227 507.8726 l361.2383 507.8726 Lf*U*u375.2798 510.3682 m375.7583 509.5313 375.9976 508.3433 375.9976 506.8037 c375.9976 505.2637 375.7583 504.0776 375.2798 503.2456 c374.8013 502.4136 373.9673 501.9976 372.7788 501.9976 c371.5898 501.9976 370.7563 502.4136 370.2778 503.2456 c369.7993 504.0776 369.5601 505.2637 369.5601 506.8037 c369.5601 508.3433 369.7993 509.5313 370.2778 510.3682 c370.7563 511.2041 371.5898 511.6226 372.7788 511.6226 c373.9673 511.6226 374.8013 511.2041 375.2798 510.3682 cf1 D371.7129 504.3389 m371.8877 503.7676 372.2461 503.4819 372.7881 503.4819 c373.3301 503.4819 373.6855 503.7676 373.854 504.3389 c374.0225 504.9102 374.1069 505.7354 374.1069 506.8135 c374.1069 507.9434 374.0225 508.7793 373.854 509.3232 c373.6855 509.8662 373.3301 510.1382 372.7881 510.1382 c372.2461 510.1382 371.8877 509.8662 371.7129 509.3232 c371.5381 508.7793 371.4507 507.9434 371.4507 506.8135 c371.4507 505.7354 371.5381 504.9102 371.7129 504.3389 cf*U*u0 D377.3965 508.6694 m377.3965 509.9194 L377.9717 509.9448 378.3745 509.9829 378.6045 510.0337 c378.9707 510.1143 379.269 510.2749 379.4995 510.5161 c379.6572 510.6812 379.7764 510.9014 379.8574 511.1763 c379.9043 511.3413 379.9277 511.4639 379.9277 511.5444 c381.459 511.5444 L381.459 502.2319 L379.584 502.2319 L379.584 508.6694 l377.3965 508.6694 Lf*U*u384.623 504.1538 m386.5762 504.1538 L386.5762 502.2319 L384.623 502.2319 l384.623 504.1538 Lf*U*u388.2959 504.0615 m388.5571 504.6821 389.1729 505.3398 390.1421 506.0342 c390.9829 506.6387 391.5273 507.0718 391.7744 507.333 c392.1533 507.7397 392.3428 508.1855 392.3428 508.6694 c392.3428 509.0635 392.2344 509.3911 392.0171 509.6523 c391.7998 509.9136 391.4888 510.0444 391.0845 510.0444 c390.5308 510.0444 390.1538 509.8369 389.9536 509.4219 c389.8384 509.1816 389.7705 508.8008 389.749 508.2788 c387.9678 508.2788 L387.9976 509.0703 388.1411 509.71 388.3979 510.1982 c388.8853 511.127 389.7515 511.5913 390.9966 511.5913 c391.9805 511.5913 392.7632 511.3184 393.3452 510.7725 c393.9268 510.2261 394.2178 509.5034 394.2178 508.604 c394.2178 507.9146 394.0122 507.3018 393.6016 506.7666 c393.332 506.4111 392.8892 506.0146 392.2729 505.5776 c391.541 505.0566 L391.083 504.731 390.77 504.4951 390.6021 504.3496 c390.4336 504.2036 390.292 504.0342 390.1772 503.8413 c394.2334 503.8413 L394.2334 502.2319 L387.8584 502.2319 l387.876 502.8994 388.0215 503.5093 388.2959 504.0615 cf*U*u396.9136 505.0913 m396.9136 504.7163 396.9736 504.4063 397.0942 504.1606 c397.3179 503.708 397.7246 503.4819 398.3145 503.4819 c398.6758 503.4819 398.9912 503.6055 399.2603 503.8525 c399.5293 504.0996 399.6636 504.4556 399.6636 504.9199 c399.6636 505.5347 399.4136 505.9453 398.9141 506.1514 c398.6299 506.2676 398.1816 506.3257 397.5698 506.3257 c397.5698 507.6382 L398.1611 507.6465 398.5737 507.7046 398.8076 507.8115 c399.2114 507.9917 399.4136 508.356 399.4136 508.9048 c399.4136 509.2603 399.3101 509.5498 399.1035 509.7725 c398.897 509.9951 398.6064 510.1069 398.2314 510.1069 c397.8013 510.1069 397.4849 509.9692 397.2822 509.6943 c397.0801 509.4189 396.9829 509.0513 396.9917 508.5913 c395.2886 508.5913 L395.3057 509.0537 395.3848 509.4927 395.5259 509.9082 c395.6753 510.2725 395.9097 510.6084 396.23 510.917 c396.4692 511.1348 396.7529 511.3018 397.082 511.418 c397.4106 511.5332 397.814 511.5913 398.2925 511.5913 c399.1802 511.5913 399.8965 511.3613 400.4409 510.9019 c400.9854 510.4424 401.2573 509.8252 401.2573 509.0518 c401.2573 508.5039 401.0977 508.042 400.7783 507.666 c400.5767 507.4307 400.3667 507.2705 400.1479 507.1851 c400.3135 507.1851 400.5508 507.041 400.8608 506.7539 c401.3232 506.3203 401.5542 505.7285 401.5542 504.9775 c401.5542 504.188 401.2813 503.4941 400.7358 502.8955 c400.1904 502.2969 399.3828 501.9976 398.313 501.9976 c396.9951 501.9976 396.0796 502.4287 395.5659 503.29 c395.2964 503.749 395.1465 504.3496 395.1167 505.0913 c396.9136 505.0913 Lf*U*u402.9219 504.1538 m404.875 504.1538 L404.875 502.2319 L402.9219 502.2319 l402.9219 504.1538 Lf*U*u411.877 510.3682 m412.3555 509.5313 412.5947 508.3433 412.5947 506.8037 c412.5947 505.2637 412.3555 504.0776 411.877 503.2456 c411.3984 502.4136 410.5645 501.9976 409.376 501.9976 c408.187 501.9976 407.3535 502.4136 406.875 503.2456 c406.3965 504.0776 406.1572 505.2637 406.1572 506.8037 c406.1572 508.3433 406.3965 509.5313 406.875 510.3682 c407.3535 511.2041 408.187 511.6226 409.376 511.6226 c410.5645 511.6226 411.3984 511.2041 411.877 510.3682 cf1 D408.3101 504.3389 m408.4849 503.7676 408.8433 503.4819 409.3853 503.4819 c409.9272 503.4819 410.2827 503.7676 410.4512 504.3389 c410.6196 504.9102 410.7041 505.7354 410.7041 506.8135 c410.7041 507.9434 410.6196 508.7793 410.4512 509.3232 c410.2827 509.8662 409.9272 510.1382 409.3853 510.1382 c408.8433 510.1382 408.4849 509.8662 408.3101 509.3232 c408.1353 508.7793 408.0479 507.9434 408.0479 506.8135 c408.0479 505.7354 408.1353 504.9102 408.3101 504.3389 cf*U*u0 D415.2119 505.0913 m415.2119 504.7163 415.272 504.4063 415.3926 504.1606 c415.6162 503.708 416.0229 503.4819 416.6128 503.4819 c416.9741 503.4819 417.2896 503.6055 417.5586 503.8525 c417.8276 504.0996 417.9619 504.4556 417.9619 504.9199 c417.9619 505.5347 417.7119 505.9453 417.2124 506.1514 c416.9282 506.2676 416.48 506.3257 415.8682 506.3257 c415.8682 507.6382 L416.4595 507.6465 416.8721 507.7046 417.106 507.8115 c417.5098 507.9917 417.7119 508.356 417.7119 508.9048 c417.7119 509.2603 417.6084 509.5498 417.4019 509.7725 c417.1953 509.9951 416.9048 510.1069 416.5298 510.1069 c416.0996 510.1069 415.7832 509.9692 415.5806 509.6943 c415.3784 509.4189 415.2813 509.0513 415.29 508.5913 c413.5869 508.5913 L413.604 509.0537 413.6831 509.4927 413.8242 509.9082 c413.9736 510.2725 414.208 510.6084 414.5283 510.917 c414.7676 511.1348 415.0513 511.3018 415.3804 511.418 c415.709 511.5332 416.1123 511.5913 416.5908 511.5913 c417.4785 511.5913 418.1948 511.3613 418.7393 510.9019 c419.2837 510.4424 419.5557 509.8252 419.5557 509.0518 c419.5557 508.5039 419.396 508.042 419.0767 507.666 c418.875 507.4307 418.665 507.2705 418.4463 507.1851 c418.6118 507.1851 418.8491 507.041 419.1592 506.7539 c419.6216 506.3203 419.8525 505.7285 419.8525 504.9775 c419.8525 504.188 419.5796 503.4941 419.0342 502.8955 c418.4888 502.2969 417.6812 501.9976 416.6113 501.9976 c415.2935 501.9976 414.3779 502.4287 413.8643 503.29 c413.5947 503.749 413.4448 504.3496 413.415 505.0913 c415.2119 505.0913 Lf*UU1 R1 0.5 0 0 K0.6881 w174.3931 522.6421 m419.1719 522.6421 LSLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_pattern_AI5 /terminate get execAGM_Gradient /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF